{"version":3,"file":"index.js","sources":["node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/object/index.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/utils.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/environment.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/loop.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/dom.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/style_manager.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/lifecycle.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/scheduler.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/transitions.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/each.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/spread.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/Component.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/shared/version.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/store/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/util/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/browser/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/web-storage/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/writable-derived/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/math/util/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/a11y/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/math/gl-matrix/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/math/interpolate/index.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/easing/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/easing/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/dom/style/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/animate/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/position/index.js","node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/disclose-version/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/cssVariables.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/dom/observer/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/observer/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/style/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/util/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/AppShellContextInternal.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/util/i18n/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/TJSHeaderButton.svelte","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/TJSApplicationHeader.svelte","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/ResizableHandle.svelte","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/internal/dom/TJSFocusWrap.svelte","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/ApplicationShell.svelte","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/application/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/index.js","node_modules/.pnpm/@typhonjs-fvtt+runtime@0.2.0-next.6_@sveltejs+vite-plugin-svelte@3.1.2_autoprefixer@10.4.20_c_i27ezl3v73caf27qaar5a46ef4/node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/fvtt/settings/index.js","src/view/constants.js","src/view/gameSettings.js","node_modules/.pnpm/papaparse@5.5.1/node_modules/papaparse/papaparse.min.js","src/view/hammergen-api.ts","src/view/valueMapper.js","src/view/FolderPath.svelte","src/view/Main.svelte","src/view/BasicAppShell.svelte","src/view/BasicApplication.js","src/index.js"],"sourcesContent":["function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\nconst s_TAG_OBJECT = '[object Object]';\nconst s_TAG_MAP = '[object Map]';\nconst s_TAG_SET = '[object Set]';\nconst s_TAG_STRING = '[object String]';\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {Set<string>}   [skipFreezeKeys] - A Set of strings indicating keys of objects to not freeze.\n *\n * @returns {object | []} The frozen object.\n */\nfunction deepFreeze(data, skipFreezeKeys) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 4 */\n    if (skipFreezeKeys !== void 0 && !(skipFreezeKeys instanceof Set)) {\n        throw new TypeError(`'skipFreezeKeys' is not an 'Set'.`);\n    }\n    return _deepFreeze(data, skipFreezeKeys);\n}\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj) {\n    if (Object.prototype.toString.call(target) !== s_TAG_OBJECT) {\n        throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n    }\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT) {\n            throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n        }\n    }\n    return _deepMerge(target, ...sourceObj);\n}\n/**\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n * The result of the callback function is used to modify in place the given data.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {(any) => any}  func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}       modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n *\n * @returns {*} The data object.\n */\nfunction depthTraverse(data, func, modify = false) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 1 */\n    if (typeof func !== 'function') {\n        throw new TypeError(`'func' is not a 'function'.`);\n    }\n    return _depthTraverse(data, func, modify);\n}\n/**\n * Returns a list of accessor keys by traversing the given object.\n *\n * @param {object}   data - An object to traverse for accessor keys.\n *\n * @returns {string[]} Accessor list.\n */\nfunction getAccessorList(data) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`);\n    }\n    return _getAccessorList(data);\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {unknown}  target - Any target to test.\n *\n * @param {new (...args: any[]) => any} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype) {\n    /* c8 ignore next */\n    if (typeof target !== 'function') {\n        return false;\n    }\n    if (target === Prototype) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n        if (proto === Prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isAsyncIterable(value) {\n    if (typeof value !== 'object' || value === null || value === void 0) {\n        return false;\n    }\n    return Symbol.asyncIterator in value;\n}\n/**\n * Tests for whether an object is iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value) {\n    if (value === null || value === void 0 || typeof value !== 'object') {\n        return false;\n    }\n    return Symbol.iterator in value;\n}\n/**\n * Tests for whether object is not null, typeof object, and not an array.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: `{}`, `new Object()` or `Object.create(null)`.\n *\n * @param {unknown} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Safely returns keys on an object or an empty array if not an object.\n *\n * @param {object} object - An object.\n *\n * @returns {string[]}  Object keys or empty array.\n */\nfunction objectKeys(object) {\n    return isObject(object) ? Object.keys(object) : [];\n}\n/**\n * Safely returns an objects size. Note for String objects unicode is not taken into consideration.\n *\n * @param {any} object - Any value, but size returned for object / Map / Set / arrays / strings.\n *\n * @returns {number} Size of object.\n */\nfunction objectSize(object) {\n    if (object === void 0 || object === null || typeof object !== 'object') {\n        return 0;\n    }\n    const tag = Object.prototype.toString.call(object);\n    if (tag === s_TAG_MAP || tag === s_TAG_SET) {\n        return object.size;\n    }\n    if (tag === s_TAG_STRING) {\n        return object.length;\n    }\n    return Object.keys(object).length;\n}\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access with keys separated by `.`.\n *\n * @param {any}      [defaultValue] - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue) {\n    if (typeof data !== 'object') {\n        return defaultValue;\n    }\n    if (typeof accessor !== 'string') {\n        return defaultValue;\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If the next level of object access is undefined or null then return the empty string.\n        if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) {\n            return defaultValue;\n        }\n        data = data[access[cntr]];\n    }\n    return data;\n}\n/**\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\n * value to set across all accessors.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string[]} accessors - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {any}      [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects automatically.\n */\nfunction safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeBatchSet error: 'data' is not an 'object'.`);\n    }\n    if (!Array.isArray(accessors)) {\n        throw new TypeError(`safeBatchSet error: 'accessors' is not an 'array'.`);\n    }\n    if (typeof value === 'object') {\n        accessors.forEach((accessor) => {\n            const targetValue = safeAccess(value, accessor, defaultAccessValue);\n            safeSet(data, accessor, targetValue, operation, createMissing);\n        });\n    }\n    else {\n        accessors.forEach((accessor) => {\n            safeSet(data, accessor, value, operation, createMissing);\n        });\n    }\n}\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * @param {object}   source - Source object.\n *\n * @param {object}   target - Target object.\n *\n * @returns {boolean} True if equal.\n */\nfunction safeEqual(source, target) {\n    if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null) {\n        return false;\n    }\n    const sourceAccessors = getAccessorList(source);\n    for (let cntr = 0; cntr < sourceAccessors.length; cntr++) {\n        const accessor = sourceAccessors[cntr];\n        const sourceObjectValue = safeAccess(source, accessor);\n        const targetObjectValue = safeAccess(target, accessor);\n        if (sourceObjectValue !== targetObjectValue) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSet error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessor !== 'string') {\n        throw new TypeError(`safeSet error: 'accessor' is not a 'string'.`);\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n        if (Array.isArray(data)) {\n            const number = (+access[cntr]);\n            if (!Number.isInteger(number) || number < 0) {\n                return false;\n            }\n        }\n        if (cntr === access.length - 1) {\n            switch (operation) {\n                case 'add':\n                    data[access[cntr]] += value;\n                    break;\n                case 'div':\n                    data[access[cntr]] /= value;\n                    break;\n                case 'mult':\n                    data[access[cntr]] *= value;\n                    break;\n                case 'set':\n                    data[access[cntr]] = value;\n                    break;\n                case 'set-undefined':\n                    if (typeof data[access[cntr]] === 'undefined') {\n                        data[access[cntr]] = value;\n                    }\n                    break;\n                case 'sub':\n                    data[access[cntr]] -= value;\n                    break;\n            }\n        }\n        else {\n            // If createMissing is true and the next level of object access is undefined then create a new object entry.\n            if (createMissing && typeof data[access[cntr]] === 'undefined') {\n                data[access[cntr]] = {};\n            }\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') {\n                return false;\n            }\n            data = data[access[cntr]];\n        }\n    }\n    return true;\n}\n/**\n * Performs bulk setting of values to the given data object.\n *\n * @param {object}            data - The data object to set data.\n *\n * @param {Record<string, any>}  accessorValues - Object of accessor keys to values to set.\n *\n * @param {SafeSetOperation}  [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n *        default (`set`).\n *\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n */\nfunction safeSetAll(data, accessorValues, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSetAll error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessorValues !== 'object') {\n        throw new TypeError(`safeSetAll error: 'accessorValues' is not an 'object'.`);\n    }\n    for (const accessor of Object.keys(accessorValues)) {\n        if (!Object.prototype.hasOwnProperty.call(accessorValues, accessor)) {\n            continue;\n        }\n        safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\n    }\n}\n/**\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\n *\n * @param {object}                           data - The data object to test.\n *\n * @param {Record<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\n *\n * @param {string}                           [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validate(data, validationData = {}, dataName = 'data') {\n    if (typeof data !== 'object') {\n        throw new TypeError(`validate error: '${dataName}' is not an 'object'.`);\n    }\n    if (typeof validationData !== 'object') {\n        throw new TypeError(`validate error: 'validationData' is not an 'object'.`);\n    }\n    let result;\n    for (const key of Object.keys(validationData)) {\n        if (!Object.prototype.hasOwnProperty.call(validationData, key)) {\n            continue;\n        }\n        const entry = validationData[key];\n        switch (entry.test) {\n            case 'array':\n                result = validateArray(data, key, entry, dataName);\n                break;\n            case 'entry':\n                result = validateEntry(data, key, entry, dataName);\n                break;\n            case 'entry|array':\n                result = validateEntryOrArray(data, key, entry, dataName);\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Validates all array entries against potential type and expected tests.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry object\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateArray(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataArray = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry?.required && typeof dataArray === 'undefined') {\n        return true;\n    }\n    if (!Array.isArray(dataArray)) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if (typeof valEntry.type === 'string') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!(typeof dataArray[cntr] === valEntry.type)) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(TypeError, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${valEntry.type}'.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    // If expected is a function then test all array entries against the test function. If expected is a Set then\n    // test all array entries for inclusion in the set. Otherwise, if expected is a string then test that all array\n    // entries as a `typeof` test against expected.\n    if (Array.isArray(valEntry.expected)) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.includes(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (valEntry.expected instanceof Set) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.has(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            try {\n                const result = valEntry.expected(dataArray[cntr]);\n                if (typeof result === 'undefined' || !result) {\n                    throw new Error(valEntry.message);\n                }\n            }\n            catch (err) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' failed validation: ${err.message}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\n *\n * @param {object}            data - The object data to validate.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntry(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataEntry = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry.required && typeof dataEntry === 'undefined') {\n        return true;\n    }\n    if (valEntry.type && typeof dataEntry !== valEntry.type) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${valEntry.type}'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if ((valEntry.expected instanceof Set && !valEntry.expected.has(dataEntry)) ||\n        (Array.isArray(valEntry.expected) && !valEntry.expected.includes(dataEntry))) {\n        if (valEntry.error) {\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n        }\n        else {\n            return false;\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        try {\n            const result = valEntry.expected(dataEntry);\n            if (typeof result === 'undefined' || !result) {\n                throw new Error(valEntry.message);\n            }\n        }\n        catch (err) {\n            if (valEntry.error) {\n                const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n                throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${err.message}.`);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Dispatches validation of data entry to string or array validation depending on data entry type.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   [entry] - A validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntryOrArray(data, accessor, entry, dataName = 'data') {\n    const dataEntry = safeAccess(data, accessor);\n    let result;\n    if (Array.isArray(dataEntry)) {\n        result = validateArray(data, accessor, entry, dataName);\n    }\n    else {\n        result = validateEntry(data, accessor, entry, dataName);\n    }\n    return result;\n}\n// Module private ---------------------------------------------------------------------------------------------------\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}         data - An object or array or any leaf.\n *\n * @param {Set<string>} [skipFreezeKeys] - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {*} The frozen object.\n * @ignore\n * @private\n */\nfunction _deepFreeze(data, skipFreezeKeys) {\n    if (Array.isArray(data)) {\n        for (let cntr = 0; cntr < data.length; cntr++) {\n            _deepFreeze(data[cntr], skipFreezeKeys);\n        }\n    }\n    else if (isObject(data)) {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && !skipFreezeKeys?.has?.(key)) {\n                _deepFreeze(data[key], skipFreezeKeys);\n            }\n        }\n    }\n    return Object.freeze(data);\n}\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj) {\n    // Iterate and merge all source objects into target.\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        const obj = sourceObj[cntr];\n        for (const prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // Handle the special property starting with '-=' to delete keys.\n                if (prop.startsWith('-=')) {\n                    delete target[prop.slice(2)];\n                    continue;\n                }\n                // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n                // otherwise assign obj[prop] to target[prop].\n                target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n                    obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n            }\n        }\n    }\n    return target;\n}\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}      data - An object, array, or any leaf value\n *\n * @param {Function} func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}  modify - If true then the result of the callback function is used to modify in place the\n *        given data.\n *\n * @returns {*} The data object.\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func, modify = false) {\n    if (modify) {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                data[cntr] = _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (isObject(data)) {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    data[key] = _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            data = func(data);\n        }\n    }\n    else {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (typeof data === 'object') {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            func(data);\n        }\n    }\n    return data;\n}\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {string[]} Accessor list.\n * @ignore\n * @private\n */\nfunction _getAccessorList(data) {\n    const accessors = [];\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            if (typeof data[key] === 'object') {\n                const childKeys = _getAccessorList(data[key]);\n                childKeys.forEach((childKey) => {\n                    accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n                });\n            }\n            else {\n                accessors.push(key);\n            }\n        }\n    }\n    return accessors;\n}\n/**\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\n *\n * @param {Error}    clazz - Error class to instantiate.\n *\n * @param {string}   message - An error message.\n *\n * @returns {*} Error of the clazz.\n * @ignore\n * @private\n */\nfunction _validateError(clazz, message = void 0) {\n    const error = new clazz(message);\n    error._objectValidateError = true;\n    return error;\n}\n\nexport { deepFreeze, deepMerge, depthTraverse, getAccessorList, hasAccessor, hasGetter, hasPrototype, hasSetter, isAsyncIterable, isIterable, isObject, isPlainObject, klona, objectKeys, objectSize, safeAccess, safeBatchSet, safeEqual, safeSet, safeSetAll, validate, validateArray, validateEntry, validateEntryOrArray };\n//# sourceMappingURL=index.js.map\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a minimal writable store by having a\n * `subscribe` and `set` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a {@link MinimalWritable} store.\n */\nfunction isMinimalWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe`, `set, and `update`\n * functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function' &&\n          typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\nexport { isMinimalWritableStore, isReadableStore, isWritableStore, subscribeFirstRest, subscribeIgnoreFirst };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides utility methods for checking browser capabilities.\n *\n * @see https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\n * TODO: perhaps add support for various standard media query checks for level 4 & 5.\n */\nclass BrowserSupports\n{\n   /**\n    * Check for container query support.\n    *\n    * @returns {boolean} True if container queries supported.\n    */\n   static get containerQueries()\n   {\n      return 'container' in document.documentElement.style;\n   }\n}\n\n/**\n * Provides cross window checks for DOM nodes / elements, events, and essential duck typing for any class based object\n * with a constructor name. The impetus is that certain browsers such as Chrome and Firefox behave differently when\n * performing `instanceof` checks when elements are moved between browser windows. With Firefox in particular the\n * entire JS runtime can not use `instanceof` checks as the instances of fundamental DOM elements differ between\n * windows.\n *\n * TRL supports moving applications from a main central browser window and popping them out into separate standalone\n * app instances in a separate browser window. In this case for essential DOM element and event checks it is necessary\n * to employ the workarounds found in `CrossWindow`.\n */\nclass CrossWindow\n{\n   /**\n    * @private\n    */\n   constructor() {} // eslint-disable-line no-useless-constructor\n\n   /**\n    * Class names for all focusable element types.\n    *\n    * @type {string[]}\n    */\n   static #FocusableElementClassNames = ['HTMLAnchorElement', 'HTMLButtonElement', 'HTMLDetailsElement',\n    'HTMLEmbedElement', 'HTMLIFrameElement', 'HTMLInputElement', 'HTMLObjectElement', 'HTMLSelectElement',\n     'HTMLTextAreaElement'];\n\n   /**\n    * DOM nodes with defined `ownerDocument` property.\n    *\n    * @type {Set<number>}\n    */\n   static #NodesWithOwnerDocument = new Set([Node.ELEMENT_NODE, Node.TEXT_NODE, Node.COMMENT_NODE,\n    Node.DOCUMENT_FRAGMENT_NODE]);\n\n   // Various UI Event sets for duck typing by constructor name.\n   /**\n    * Duck typing class names for pointer events.\n    *\n    * @type {Set<string>}\n    */\n   static #PointerEventSet = new Set(['MouseEvent', 'PointerEvent']);\n\n   /**\n    * Duck typing class names for all UIEvents.\n    *\n    * @type {Set<string>}\n    */\n   static #UIEventSet = new Set(['UIEvent', 'FocusEvent', 'MouseEvent', 'WheelEvent', 'KeyboardEvent', 'PointerEvent',\n    'TouchEvent', 'InputEvent', 'CompositionEvent', 'DragEvent']);\n\n   /**\n    * Duck typing class names for events considered as user input.\n    *\n    * @type {Set<string>}\n    */\n   static #UserInputEventSet = new Set(['KeyboardEvent', 'MouseEvent', 'PointerEvent']);\n\n   /**\n    * Internal options used by `#checkDOMInstanceType` when retrieving the Window reference from a Node that doesn't\n    * define `ownerDocument`.\n    *\n    * @type {{throws: boolean}}\n    */\n   static #optionsInternalCheckDOM = { throws: false };\n\n   // DOM Querying ---------------------------------------------------------------------------------------------------\n\n   /**\n    * Convenience method to retrieve the `document.activeElement` value in the current Window context of a DOM Node /\n    * Element, EventTarget, Document, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Element | null} Active element or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getActiveElement(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType)) { return target?.ownerDocument?.activeElement ?? null; }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target?.view?.document?.activeElement ?? null; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target?.activeElement ?? null; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target?.document?.activeElement ?? null; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   /**\n    * Convenience method to retrieve the `Document` value in the current context of a DOM Node / Element, EventTarget,\n    * Document, UIEvent, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Document} Active document or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getDocument(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType)) { return target?.ownerDocument; }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target?.view?.document; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target?.document; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   /**\n    * Convenience method to retrieve the `Window` value in the current context of a DOM Node / Element, EventTarget,\n    * Document, or Window.\n    *\n    * @param {Document | EventTarget | Node | UIEvent | Window}  target - DOM Node / Element, EventTarget, Document,\n    *        UIEvent or Window to query.\n    *\n    * @param {object} [options] - Options.\n    *\n    * @param {boolean} [options.throws=true] - When `true` and target is invalid throw an exception. If `false` and the\n    *        target is invalid `undefined` is returned; default: `true`.\n    *\n    * @returns {Window} Active window or `undefined` when `throws` option is `false` and the target is invalid.\n    *\n    * @throws {@link TypeError} Target must be a DOM Node / Element, Document, UIEvent, or Window.\n    */\n   static getWindow(target, { throws = true } = {})\n   {\n      // Duck type if target has known defined `ownerDocument` property.\n      if (this.#NodesWithOwnerDocument.has(target?.nodeType))\n      {\n         return target.ownerDocument?.defaultView ?? globalThis;\n      }\n\n      // Duck type if target is a UIEvent.\n      if (this.isUIEvent(target) && isObject(target?.view)) { return target.view ?? globalThis; }\n\n      // Duck type if target is a Document.\n      if (isObject(target?.defaultView)) { return target.defaultView ?? globalThis; }\n\n      // Duck type if target is a Window.\n      if (isObject(target?.document) && isObject(target?.location)) { return target; }\n\n      if (throws) { throw new TypeError(`'target' must be a DOM Node / Element, Document, UIEvent, or Window.`); }\n\n      return void 0;\n   }\n\n   // ES / Browser API basic prototype tests -------------------------------------------------------------------------\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Document.\n    *\n    * @param {unknown}  target - A potential Document to test.\n    *\n    * @returns {target is Document} Is `target` a Document.\n    */\n   static isDocument(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Document]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Map.\n    *\n    * @param {unknown}  target - A potential Map to test.\n    *\n    * @returns {target is Map} Is `target` a Map.\n    */\n   static isMap(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Map]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Promise.\n    *\n    * @param {unknown}  target - A potential Promise to test.\n    *\n    * @returns {target is Promise} Is `target` a Promise.\n    */\n   static isPromise(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Promise]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a RegExp.\n    *\n    * @param {unknown}  target - A potential RegExp to test.\n    *\n    * @returns {target is RegExp} Is `target` a RegExp.\n    */\n   static isRegExp(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object RegExp]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Set.\n    *\n    * @param {unknown}  target - A potential Set to test.\n    *\n    * @returns {target is Set} Is `target` a Set.\n    */\n   static isSet(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Set]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a URL.\n    *\n    * @param {unknown}  target - A potential URL to test.\n    *\n    * @returns {target is URL} Is `target` a URL.\n    */\n   static isURL(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object URL]';\n   }\n\n   /**\n    * Provides basic prototype string type checking if `target` is a Window.\n    *\n    * @param {unknown}  target - A potential Window to test.\n    *\n    * @returns {target is Window} Is `target` a Window.\n    */\n   static isWindow(target)\n   {\n      return isObject(target) && Object.prototype.toString.call(target) === '[object Window]';\n   }\n\n   // DOM Element typing ---------------------------------------------------------------------------------------------\n\n   /**\n    * Ensures that the given target is an `instanceof` all known DOM elements that are focusable. Please note that\n    * additional checks are required regarding focusable state; use {@link A11yHelper.isFocusable} for a complete check.\n    *\n    * @param {unknown}  target - Target to test for `instanceof` focusable HTML element.\n    *\n    * @returns {boolean} Is target an `instanceof` a focusable DOM element.\n    */\n   static isFocusableHTMLElement(target)\n   {\n      for (let cntr = this.#FocusableElementClassNames.length; --cntr >= 0;)\n      {\n         if (this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, this.#FocusableElementClassNames[cntr]))\n         {\n            return true;\n         }\n      }\n\n      return false;\n   }\n\n   /**\n    * Provides precise type checking if `target` is a DocumentFragment.\n    *\n    * @param {unknown}  target - A potential DocumentFragment to test.\n    *\n    * @returns {target is DocumentFragment} Is `target` a DocumentFragment.\n    */\n   static isDocumentFragment(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.DOCUMENT_FRAGMENT_NODE, 'DocumentFragment');\n   }\n\n   /**\n    * Provides precise type checking if `target` is an Element.\n    *\n    * @param {unknown}  target - A potential Element to test.\n    *\n    * @returns {target is Element} Is `target` an Element.\n    */\n   static isElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'Element');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a HTMLAnchorElement.\n    *\n    * @param {unknown}  target - A potential HTMLAnchorElement to test.\n    *\n    * @returns {target is HTMLAnchorElement} Is `target` a HTMLAnchorElement.\n    */\n   static isHTMLAnchorElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'HTMLAnchorElement');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a HTMLElement.\n    *\n    * @param {unknown}  target - A potential HTMLElement to test.\n    *\n    * @returns {target is HTMLElement} Is `target` a HTMLElement.\n    */\n   static isHTMLElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'HTMLElement');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a Node.\n    *\n    * @param {unknown}  target - A potential Node to test.\n    *\n    * @returns {target is Node} Is `target` a DOM Node.\n    */\n   static isNode(target)\n   {\n      if (typeof target?.nodeType !== 'number') { return false; }\n\n      if (target instanceof globalThis.Node) { return true; }\n\n      // Must retrieve window by a more thorough duck type via `getWindow` as not all Nodes have `ownerDocument`\n      // defined.\n      const activeWindow = this.getWindow(target, this.#optionsInternalCheckDOM);\n\n      const TargetNode = activeWindow?.Node;\n      return TargetNode && target instanceof TargetNode;\n   }\n\n   /**\n    * Provides precise type checking if `target` is a ShadowRoot.\n    *\n    * @param {unknown}  target - A potential ShadowRoot to test.\n    *\n    * @returns {target is ShadowRoot} Is `target` a ShadowRoot.\n    */\n   static isShadowRoot(target)\n   {\n      // ShadowRoot is a specialized type of DocumentFragment.\n      return this.#checkDOMInstanceType(target, Node.DOCUMENT_FRAGMENT_NODE, 'ShadowRoot');\n   }\n\n   /**\n    * Provides precise type checking if `target` is a SVGElement.\n    *\n    * @param {unknown}  target - A potential SVGElement to test.\n    *\n    * @returns {target is SVGElement} Is `target` a SVGElement.\n    */\n   static isSVGElement(target)\n   {\n      return this.#checkDOMInstanceType(target, Node.ELEMENT_NODE, 'SVGElement');\n   }\n\n   // Event typing ---------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides basic duck type checking for `Event` signature and optional constructor name(s).\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @param {string | Set<string>} [types] Specific constructor name or Set of constructor names to match.\n    *\n    * @returns {target is Event} Is `target` an Event with optional constructor name check.\n    */\n   static isEvent(target, types)\n   {\n      if (typeof target?.type !== 'string' || typeof target?.defaultPrevented !== 'boolean' ||\n         typeof target?.stopPropagation !== 'function')\n      {\n         return false;\n      }\n\n      return types !== void 0 ? this.isCtorName(target, types) : true;\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for standard mouse / pointer events including\n    * `MouseEvent` and `PointerEvent`.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is PointerEvent} Is `target` a MouseEvent or PointerEvent.\n    */\n   static isPointerEvent(target)\n   {\n      return this.isEvent(target, this.#PointerEventSet);\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for all UI events.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is UIEvent} Is `target` a UIEvent.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/UIEvent\n    */\n   static isUIEvent(target)\n   {\n      return this.isEvent(target, this.#UIEventSet);\n   }\n\n   /**\n    * Provides basic duck type checking for `Event` signature for standard user input events including `KeyboardEvent`,\n    * `MouseEvent`, and `PointerEvent`.\n    *\n    * @param {unknown}  target - A potential DOM event to test.\n    *\n    * @returns {target is KeyboardEvent | MouseEvent | PointerEvent} Is `target` a Keyboard, MouseEvent, or\n    *          PointerEvent.\n    */\n   static isUserInputEvent(target)\n   {\n      return this.isEvent(target, this.#UserInputEventSet);\n   }\n\n   // Generic typing -------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides basic type checking by constructor name(s) for objects. This can be useful when checking multiple\n    * constructor names against a provided Set.\n    *\n    * @param {unknown}  target - Object to test for constructor name.\n    *\n    * @param {string | Set<string>} types Specific constructor name or Set of constructor names to match.\n    *\n    * @returns {boolean} Does the provided object constructor name match the types provided.\n    */\n   static isCtorName(target, types)\n   {\n      if (!isObject(target)) { return false; }\n\n      if (typeof types === 'string' && target?.constructor?.name === types) { return true; }\n\n      return !!types?.has(target?.constructor?.name);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Internal generic DOM `instanceof` check. First will attempt to find the class name by `globalThis` falling back\n    * to the {@link Window} associated with the DOM node.\n    *\n    * @param {unknown}  target - Target to test.\n    *\n    * @param {number}   nodeType - Node type constant.\n    *\n    * @param {string}   className - DOM class name for instanceof check.\n    *\n    * @returns {boolean} Is the target the given nodeType and instance of class name.\n    */\n   static #checkDOMInstanceType(target, nodeType, className)\n   {\n      if (!isObject(target)) { return false; }\n\n      if (target.nodeType !== nodeType) { return false; }\n\n      const GlobalClass = globalThis[className];\n\n      if (GlobalClass && target instanceof GlobalClass) { return true; }\n\n      const activeWindow = this.#NodesWithOwnerDocument.has(target.nodeType) ? target?.ownerDocument?.defaultView :\n       this.getWindow(target, this.#optionsInternalCheckDOM);\n\n      const TargetClass = activeWindow?.[className];\n\n      return TargetClass && target instanceof TargetClass;\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText(activeWindow = globalThis)\n   {\n      let result;\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`ClipboardAccess.readText error: 'activeWindow' is not a Window.`);\n      }\n\n      if (activeWindow?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await activeWindow.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @param {Window} [activeWindow=globalThis] Optional active current window.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text, activeWindow = globalThis)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      if (!CrossWindow.isWindow(activeWindow))\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'activeWindow' is not a Window.`);\n      }\n\n      let success = false;\n\n      if (activeWindow?.navigator?.clipboard)\n      {\n         try\n         {\n            await activeWindow.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (typeof activeWindow?.document?.execCommand === 'function')\n      {\n         const textArea = activeWindow.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         activeWindow.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = activeWindow.document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         activeWindow.document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Provides a utility function to parse / construct fully qualified URL instances from a URL string.\n */\nclass URLParser\n{\n   /**\n    * Parses a URL string converting it to a fully qualified URL. If URL is an existing URL instance it is returned\n    * immediately. Optionally you may construct a fully qualified URL from a relative base origin / path or with a\n    * route prefix added to the current location origin.\n    *\n    * @param {object} options - Options.\n    *\n    * @param {string | URL}   options.url - URL string to convert to a URL.\n    *\n    * @param {string}   [options.base] - Optional fully qualified base path for relative URL construction.\n    *\n    * @param {string}   [options.routePrefix] - Optional route prefix to add to location origin for absolute URL strings\n    *        when `base` is not defined.\n    *\n    * @returns {URL | null} Parsed URL or null if `url` is not parsed.\n    */\n   static parse({ url, base, routePrefix })\n   {\n      if (CrossWindow.isURL(url)) { return url; }\n\n      if (typeof url !== 'string') { return null; }\n\n      if (base !== void 0 && typeof base !== 'string') { return null; }\n\n      if (routePrefix !== void 0 && typeof routePrefix !== 'string') { return null; }\n\n      const targetURL = this.#createURL(url);\n\n      // Parse and return already fully qualified `url` string.\n      if (targetURL) { return targetURL; }\n\n      let targetBase;\n\n      // Parse relative url string.\n      if (url.startsWith('./') || url.startsWith('../'))\n      {\n         // Relative from provided `base` or current path.\n         targetBase = base ? base : `${globalThis.location.origin}${globalThis.location.pathname}`;\n      }\n      else\n      {\n         let targetRoutePrefix = '';\n\n         // Relative to current origin, but include any defined route prefix.\n         if (routePrefix)\n         {\n            // Ensure route prefix starts and ends with `/` for proper URL parsing.\n            targetRoutePrefix = routePrefix.startsWith('/') ? routePrefix : `/${routePrefix}`;\n            targetRoutePrefix = targetRoutePrefix.endsWith('/') ? targetRoutePrefix : `${targetRoutePrefix}/`;\n         }\n\n         targetBase = `${globalThis.location.origin}${targetRoutePrefix}`;\n      }\n\n      return this.#createURL(url, targetBase);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Helper to create a URL and catch any exception. Useful until `URL.parse` and `URL.canParse` are more widespread.\n    *\n    * @param {string}   url - URL string.\n    *\n    * @param {string}   base - Base origin / path.\n    *\n    * @returns {URL | null} Valid URL or null.\n    */\n   static #createURL(url, base = '')\n   {\n      try { return new URL(url, base); }\n      catch(err) { return null; }\n   }\n}\n\nexport { BrowserSupports, ClipboardAccess, CrossWindow, URLParser };\n//# sourceMappingURL=index.js.map\n","import { writable, get } from 'svelte/store';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  opts.storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.writable;\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.writable;\n\n/**\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\n * to provide additional customization options for custom Storage API compatible storage instances and custom\n * serialization configuration.\n *\n * @implements {import('./types').WebStorage}\n */\nclass TJSWebStorage\n{\n   /** @type {import('./').StorageStores} */\n   #storageStores;\n\n   /**\n    * @type {(Map<string, {\n    *    store: import('svelte/store').Writable,\n    *    deserialize?: (value: string, ...rest: any[]) => any,\n    *    serialize?: (value: any, ...rest: any[]) => string\n    * }>)}\n    */\n   #stores = new Map();\n\n   /**\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\n    */\n   constructor(storageStores)\n   {\n      this.#storageStores = storageStores;\n   }\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The new store.\n    */\n   #createStore(key, defaultValue = void 0, storageStores)\n   {\n      try\n      {\n         const value = this.#storageStores.storage.getItem(key);\n         if (value !== null)\n         {\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\n            defaultValue = deserialize(value);\n         }\n      }\n      catch (err) { /**/ }\n\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\n    */\n   #getDeserialize(key)\n   {\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\n   }\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\n    */\n   #getSerialize(key)\n   {\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0, storageStores)\n   {\n      const storeEntry = this.#stores.get(key);\n      if (storeEntry) { return storeEntry.store; }\n\n      const store = this.#createStore(key, defaultValue, storageStores);\n\n      // Set any key specific storage helper details.\n      this.#stores.set(key, {\n         store,\n         deserialize: storageStores?.deserialize,\n         serialize: storageStores?.serialize\n      });\n\n      return store;\n   }\n\n   /**\n    * Get value from the storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = this.#storageStores.storage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = this.#getDeserialize(key)(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = this.#getSerialize(key)(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            this.#storageStores.storage.setItem(key, newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\n    */\n   getStore(key, defaultValue, storageStores)\n   {\n      return this.#getStore(key, defaultValue, storageStores);\n   }\n\n   /**\n    * Returns whether a store has already been created for the given key.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    */\n   hasStore(key)\n   {\n      return this.#stores.has(key);\n   }\n\n   /**\n    * Sets the value for the given key in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in storage API updating the associated store value.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n\n   // Iterators ------------------------------------------------------------------------------------------------------\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage keys and stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\n    * @yields {import('svelte/store').Writable<[string, Writable<T>]>}\n    */\n   *entries(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\n      }\n   }\n\n   /**\n    * Returns an iterable for the session storage keys from existing stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<string>} Iterable iterator of session storage keys.\n    * @yields {string}\n    */\n   *keys(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield key; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield key; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the session storage stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by storage keys.\n    *\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *stores(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield this.getStore(key); }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\n      }\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\n */\nclass TJSLocalStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(localStores);\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\n */\nclass TJSSessionStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(sessionStores);\n   }\n}\n\nexport { TJSLocalStorage, TJSSessionStorage, TJSWebStorage, localStores, sessionStores, storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { derived, get } from 'svelte/store';\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set, update) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set, update);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport { propertyStore, writableDerived };\n//# sourceMappingURL=index.js.map\n","import { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Various utilities to duck type / detect Svelte components and run outro transition while destroying a component\n * externally.\n */\nclass TJSSvelteUtil\n{\n   /**\n    * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n    *\n    * @param {unknown}  comp - Data to check as a Svelte component.\n    *\n    * @returns {boolean} Whether basic duck typing succeeds.\n    */\n   static isComponent(comp)\n   {\n      if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n      // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n      // This class doesn't define methods on the prototype, so we must check if the constructor name\n      // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n      const prototypeName = comp?.prototype?.constructor?.name;\n\n      if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n       prototypeName === 'ProxyComponent'))\n      {\n         return true;\n      }\n\n      return typeof window !== 'undefined' ?\n       typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n        typeof comp.render === 'function'; // server-side\n   }\n\n   /**\n    * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n    *\n    * @param {unknown}  comp - Data to check as a HMR proxy component.\n    *\n    * @returns {boolean} Whether basic duck typing succeeds.\n    */\n   static isHMRProxy(comp)\n   {\n      const instanceName = comp?.constructor?.name;\n      if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n      {\n         return true;\n      }\n\n      const prototypeName = comp?.prototype?.constructor?.name;\n      return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n       prototypeName === 'ProxyComponent');\n   }\n\n   /**\n    * Runs outro transition then destroys Svelte component.\n    *\n    * Workaround for https://github.com/sveltejs/svelte/issues/4056\n    *\n    * @param {*}  instance - A Svelte component.\n    *\n    * @returns {Promise} Promise returned after outro transition completed and component destroyed.\n    */\n   static async outroAndDestroy(instance)\n   {\n      if (instance === void 0 || instance === null) { return Promise.resolve(); }\n\n      return new Promise((resolve) =>\n      {\n         if (instance?.$$?.fragment && instance?.$$?.fragment?.o)\n         {\n            group_outros();\n            transition_out(instance.$$.fragment, 0, 0, () =>\n            {\n               instance?.$destroy?.();\n               resolve();\n            });\n            check_outros();\n         }\n         else\n         {\n            instance?.$destroy?.();\n            resolve();\n         }\n      });\n   }\n}\n\nObject.seal(TJSSvelteUtil);\n\n/**\n * Provides utilities to verify and parse {@link TJSSvelteConfig} configuration objects.\n */\nclass TJSSvelteConfigUtil\n{\n   /**\n    * Validates `config` argument whether it is a valid {@link TJSSvelteConfig}.\n    *\n    * @param {unknown}  config - The potential config object to validate.\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.raiseException=false] - If validation fails raise an exception.\n    *\n    * @returns {config is import('./types').TJSSvelteConfig} Is the config a valid TJSSvelteConfig.\n    *\n    * @throws {TypeError}  Any validation error when `raiseException` is enabled.\n    */\n   static isConfig(config, { raiseException = false } = {})\n   {\n      if (!isObject(config))\n      {\n         if (raiseException) { throw new TypeError(`TJSSvelteConfigUtil.isConfig error: 'config' is not an object.`); }\n         return false;\n      }\n\n      if (!TJSSvelteUtil.isComponent(config.class))\n      {\n         if (raiseException)\n         {\n            throw new TypeError(\n             `TJSSvelteConfigUtil.isConfig error: 'config.class' is not a Svelte component constructor.`);\n         }\n         return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n    * correctly.\n    *\n    * @param {import('./types').TJSSvelteConfig}   config - Svelte config object.\n    *\n    * @param {any}       [thisArg] - `This` reference to set for invoking any props function.\n    *\n    * @returns {import('./types').TJSSvelteConfig} The processed Svelte config object.\n    */\n   static parseConfig(config, thisArg = void 0)\n   {\n      if (!isObject(config))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (!TJSSvelteUtil.isComponent(config.class))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'class' is not a Svelte component constructor for config:\\n${\n            JSON.stringify(config)}.`);\n      }\n\n      if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.target !== void 0 && typeof config.target !== 'string' && !CrossWindow.isElement(config.target) &&\n       !CrossWindow.isShadowRoot(config.target) && !CrossWindow.isDocumentFragment(config.target))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'target' is not a Element, ShadowRoot, or DocumentFragment for config:\\n${\n           JSON.stringify(config)}.`);\n      }\n\n      if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !CrossWindow.isElement(config.anchor) &&\n       !CrossWindow.isShadowRoot(config.anchor) && !CrossWindow.isDocumentFragment(config.anchor))\n      {\n         throw new TypeError(`TJSSvelteConfigUtil.parseConfig - 'anchor' is not a string, Element for config:\\n${\n          JSON.stringify(config)}.`);\n      }\n\n      if (config.context !== void 0 && typeof config.context !== 'function' && !CrossWindow.isMap(config.context) &&\n       !isObject(config.context))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'context' is not a Map, function or object for config:\\n${\n            JSON.stringify(config)}.`);\n      }\n\n      // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n      // `selectorTarget` optionally stores a target element found in main element.\n      if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n      if (config.options !== void 0 && !isObject(config.options))\n      {\n         throw new TypeError(\n          `TJSSvelteConfigUtil.parseConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // Validate TyphonJS standard options. // TODO: This will change in `0.3.0`!\n      if (isObject(config.options))\n      {\n         if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n         {\n            throw new TypeError(`TJSSvelteConfigUtil.parseConfig - 'options.injectApp' is not a boolean for config:\\n${\n             JSON.stringify(config)}.`);\n         }\n\n         if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n         {\n            throw new TypeError(\n             `TJSSvelteConfigUtil.parseConfig - 'options.injectEventbus' is not a boolean for config:\\n${\n              JSON.stringify(config)}.`);\n         }\n\n         // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n         if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n         {\n            throw new TypeError(`TJSSvelteConfigUtil.parseConfig - 'selectorElement' is not a string for config:\\n${\n             JSON.stringify(config)}.`);\n         }\n      }\n\n      const svelteConfig = { ...config };\n\n      // Delete extra Svelte options.\n      delete svelteConfig.options;\n\n      let externalContext = {};\n\n      // If a context callback function is provided then invoke it with `this` being the Foundry app.\n      // If an object is returned it adds the entries to external context.\n      if (typeof svelteConfig.context === 'function')\n      {\n         const contextFunc = svelteConfig.context;\n         delete svelteConfig.context;\n\n         const result = contextFunc.call(thisArg);\n         if (isObject(result))\n         {\n            externalContext = { ...result };\n         }\n         else\n         {\n            throw new Error(\n             `TJSSvelteConfigUtil.parseConfig - 'context' is a function that did not return an object for config:\\n${\n              JSON.stringify(config)}`);\n         }\n      }\n      else if (CrossWindow.isMap(svelteConfig.context))\n      {\n         externalContext = Object.fromEntries(svelteConfig.context);\n         delete svelteConfig.context;\n      }\n      else if (isObject(svelteConfig.context))\n      {\n         externalContext = svelteConfig.context;\n         delete svelteConfig.context;\n      }\n\n      // If a props is a function then invoke it with `this` being the Foundry app.\n      // If an object is returned set it as the props.\n      svelteConfig.props = this.#processProps(svelteConfig.props, thisArg, config);\n\n      // Process children components attaching to external context.\n      if (Array.isArray(svelteConfig.children))\n      {\n         const children = [];\n\n         for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n         {\n            const child = svelteConfig.children[cntr];\n\n            if (!TJSSvelteUtil.isComponent(child.class))\n            {\n               throw new Error(`TJSSvelteConfigUtil.parseConfig - 'class' is not a Svelte component for child[${\n                cntr}] for config:\\n${JSON.stringify(config)}`);\n            }\n\n            child.props = this.#processProps(child.props, thisArg, config);\n\n            children.push(child);\n         }\n\n         if (children.length > 0)\n         {\n            externalContext.children = children;\n         }\n\n         delete svelteConfig.children;\n      }\n      else if (isObject(svelteConfig.children))\n      {\n         if (!TJSSvelteUtil.isComponent(svelteConfig.children.class))\n         {\n            throw new Error(\n             `TJSSvelteConfigUtil.parseConfig - 'class' is not a Svelte component for children object for config:\\n${\n              JSON.stringify(config)}`);\n         }\n\n         svelteConfig.children.props = this.#processProps(svelteConfig.children.props, thisArg, config);\n\n         externalContext.children = [svelteConfig.children];\n         delete svelteConfig.children;\n      }\n\n      if (!CrossWindow.isMap(svelteConfig.context))\n      {\n         svelteConfig.context = new Map();\n      }\n\n      svelteConfig.context.set('#external', externalContext);\n\n      return svelteConfig;\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n    *\n    * @param {{ [key: string]: any } | Function}   props - Svelte props.\n    *\n    * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n    *\n    * @param {object}            config - Svelte config\n    *\n    * @returns {{ [key: string]: any } | undefined}     Svelte props.\n    */\n   static #processProps(props, thisArg, config)\n   {\n      // If a props is a function then invoke it with `this` being the Foundry app.\n      // If an object is returned set it as the props.\n      if (typeof props === 'function')\n      {\n         const result = props.call(thisArg);\n         if (isObject(result))\n         {\n            return result;\n         }\n         else\n         {\n            throw new Error(\n             `TJSSvelteConfigUtil.parseConfig - 'props' is a function that did not return an object for config:\\n${\n              JSON.stringify(config)}`);\n         }\n      }\n      else if (isObject(props))\n      {\n         return props;\n      }\n      else if (props !== void 0)\n      {\n         throw new Error(`TJSSvelteConfigUtil.parseConfig - 'props' is not a function or an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      return {};\n   }\n}\n\nObject.seal(TJSSvelteConfigUtil);\n\nexport { TJSSvelteConfigUtil, TJSSvelteUtil };\n//# sourceMappingURL=index.js.map\n","/**\n * Clamps a value between min / max values.\n *\n * @param {number}   value - Value to clamp.\n *\n * @param {number}   min - Minimum value.\n *\n * @param {number}   max - Maximum value.\n *\n * @returns {number} Clamped value.\n */\nfunction clamp(value = 0, min = 0, max = 0)\n{\n   return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Provides methods for retrieving pseudorandom values and other utilities using {@link Math.random}.\n */\nclass MathRandom\n{\n   /**\n    * Private constructor to prevent instantiation.\n    *\n    * @private\n    */\n   constructor()\n   {\n      throw new Error('This class should not be instantiated.');\n   }\n\n   /**\n    * Returns a random inclusive integer.\n    *\n    * @param {number}   min - Minimum value.\n    *\n    * @param {number}   max - Maximum value.\n    *\n    * @returns {number} Random inclusive integer.\n    */\n   static getInt(min, max)\n   {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n   }\n\n   /**\n    * Returns a random floating point number between min (inclusive) and max (exclusive).\n    *\n    * @param {number}   min - Minimum value\n    *\n    * @param {number}   max - Maximum value.\n    *\n    * @returns {number} Random float.\n    */\n   static getFloat(min, max)\n   {\n      return Math.random() * (max - min) + min;\n   }\n\n   /**\n    * Returns a random boolean.\n    *\n    * @returns {boolean} Random boolean.\n    */\n   static getBoolean()\n   {\n      return Math.random() > 0.5;\n   }\n\n   /**\n    * Shuffles an array using the Fisher-Yates shuffle algorithm. Modifies the input array in place and returns it.\n    *\n    * @template T\n    *\n    * @param {T[]} arr - The array to shuffle.\n    *\n    * @returns {T[]} The shuffled array.\n    */\n   static shuffleArray(arr)\n   {\n      for (let i = arr.length - 1; i > 0; i--)\n      {\n         const j = MathRandom.getInt(0, i);\n         [arr[i], arr[j]] = [arr[j], arr[i]];\n      }\n\n      return arr;\n   }\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\nexport { MathRandom, clamp, degToRad, radToDeg };\n//# sourceMappingURL=index.js.map\n","import { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n *\n * Note: Global debugging can be enabled by setting `A11yHelper.debug = true`.\n */\nclass A11yHelper\n{\n   /**\n    * You can set global focus debugging enabled by setting `A11yHelper.debug = true`.\n    *\n    * @type {boolean}\n    */\n   static #globalDebug = false;\n\n   /**\n    * @returns {boolean} Global debugging enabled.\n    */\n   static get debug() { return this.#globalDebug; }\n\n   /**\n    * @param {boolean}  debug - Global debug enabled\n    */\n   static set debug(debug)\n   {\n      if (typeof debug !== 'boolean') { throw new TypeError(`'debug' is not a boolean.`); }\n\n      this.#globalDebug = debug;\n   }\n\n   /**\n    * Runs a media query to determine if the user / OS configuration is set up for reduced motion / animation.\n    *\n    * @returns {boolean} User prefers reduced motion.\n    */\n   static get prefersReducedMotion()\n   {\n      return globalThis?.matchMedia('(prefers-reduced-motion: reduce)')?.matches ?? false;\n   }\n\n   /**\n    * Apply focus to the HTMLElement / SVGElement targets in a given A11yFocusSource data object. An iterable list\n    * `options.focusEl` can contain HTMLElement / SVGElements or selector strings. If multiple focus targets are\n    * provided in a list then the first valid target found will be focused. If focus target is a string then a lookup\n    * via `document.querySelector` is performed. In this case you should provide a unique selector for the desired\n    * focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource | { focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? this.debug || focusOpts.debug : this.debug;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `,\n                focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target?.nodeType === Node.ELEMENT_NODE && target?.isConnected)\n               {\n                  target?.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element?.nodeType === Node.ELEMENT_NODE && element?.isConnected)\n                  {\n                     element?.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} First focusable child element.\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {Element | Document} [element=document] Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {Array<FocusableElement>} Child keyboard focusable elements.\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements,\n    parentHidden = false, selectors } = {})\n   {\n      if (element?.nodeType !== Node.ELEMENT_NODE && element?.nodeType !== Node.DOCUMENT_NODE)\n      {\n         throw new TypeError(`'element' is not a HTMLElement, SVGElement, or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !CrossWindow.isSet(ignoreElements))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      let allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n\n      if (parentHidden)\n      {\n         allElements = allElements.filter((el) =>\n         {\n            return !this.isParentHidden(el, element);\n         });\n      }\n\n      return allElements;\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent | MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {FocusableElement | string} [options.focusEl] - A specific HTMLElement / SVGElement or selector\n    *        string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !this.isFocusSource(focusEl))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement, SVGElement, or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      const debugEnabled = typeof debug === 'boolean' ? this.debug || debug : this.debug;\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         const result = {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n\n         if (debugEnabled)\n         {\n            console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' without event: `, result);\n         }\n\n         return result;\n      }\n\n      // Perform duck typing on event constructor name.\n      if (event !== void 0 && !CrossWindow.isUserInputEvent(event))\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent, MouseEvent, or PointerEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {Element} */\n      let targetEl;\n\n      if (event)\n      {\n         if (A11yHelper.isFocusable(event.target))\n         {\n            targetEl = event.target;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.target: `, targetEl);\n            }\n         }\n         else if (A11yHelper.isFocusable(event.currentTarget))\n         {\n            targetEl = event.currentTarget;\n            if (debugEnabled)\n            {\n               console.debug(`A11yHelper.getFocusSource debug: 'targetEl' set to event.currentTarget: `, targetEl);\n            }\n         }\n         else\n         {\n            if (debugEnabled)\n            {\n               console.debug(\n                `A11yHelper.getFocusSource debug: 'event.target' / 'event.currentTarget' are not focusable.`);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.target': `, event.target);\n               console.debug(`A11yHelper.getFocusSource debug: 'event.currentTarget': `, event.currentTarget);\n            }\n         }\n\n         if (targetEl)\n         {\n            if (targetEl?.nodeType !== Node.ELEMENT_NODE && typeof targetEl?.focus !== 'function')\n            {\n               throw new TypeError(`A11yHelper.getFocusSource error: 'targetEl' is not an HTMLElement or SVGElement.`);\n            }\n         }\n      }\n\n      const result = { debug };\n\n      // Perform duck typing on event constructor name.\n      if (CrossWindow.isPointerEvent(event))\n      {\n         // Firefox currently (11/24) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            // Always include x / y coordinates and targetEl may not be defined.\n            const rectTarget = targetEl ?? event.target;\n\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n         else\n         {\n            result.source = 'pointer';\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = targetEl ? [targetEl] : [];\n\n            if (focusEl) { result.focusEl.push(focusEl); }\n         }\n      }\n      else\n      {\n         // Always include x / y coordinates and targetEl may not be defined.\n         const rectTarget = targetEl ?? event?.target;\n\n         if (rectTarget)\n         {\n            const rect = rectTarget.getBoundingClientRect();\n            result.source = 'keyboard';\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = targetEl ? [targetEl] : [];\n         }\n\n         if (focusEl) { result.focusEl.push(focusEl); }\n      }\n\n      if (debugEnabled)\n      {\n         console.debug(`A11yHelper.getFocusSource debug: generated 'focusSource' with event: `, result);\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {Element | Document} [element=document] - Optional element to start query.\n    *\n    * @param {FocusableElementOptions} [options] - Optional parameters.\n    *\n    * @returns {FocusableElement} Last focusable child element.\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {unknown} el - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || el?.hidden || !el?.isConnected || el?.nodeType !== Node.ELEMENT_NODE ||\n       typeof el?.focus !== 'function')\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = globalThis.parseInt(el.getAttribute('tabindex'));\n      const tabindexFocusable = Number.isInteger(tabindexAttr) && tabindexAttr >= 0;\n\n      if (contenteditableFocusable || tabindexFocusable || CrossWindow.isFocusableHTMLElement(el))\n      {\n         // Ensure that an anchor element has an `href` attribute.\n         if (anchorHref && !tabindexFocusable && CrossWindow.isHTMLAnchorElement(el) &&\n          typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {Element | string}   data - Either an HTMLElement, SVGElement, or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return typeof data === 'string' || (data?.nodeType === Node.ELEMENT_NODE && typeof data?.focus === 'function');\n   }\n\n   /**\n    * Tests if the given `element` is a Element node and has a `focus` method.\n    *\n    * @param {Element}  element - Element to test for focus method.\n    *\n    * @returns {boolean} Whether the element has a focus method.\n    */\n   static isFocusTarget(element)\n   {\n      return element !== void 0 && element !== null && element?.nodeType === Node.ELEMENT_NODE &&\n       typeof element?.focus === 'function';\n   }\n\n   /**\n    * Perform a parent traversal from the current active element attempting to match the given element to test whether\n    * current active element is within that element.\n    *\n    * @param {Element}  element - An element to match in parent traversal from the active element.\n    *\n    * @returns {boolean} Whether there is focus within the given element.\n    */\n   static isFocusWithin(element)\n   {\n      if (!isObject(element) || element?.hidden || !element?.isConnected) { return false; }\n\n      let active = CrossWindow.getActiveElement(element);\n\n      if (!active) { return false; }\n\n      while (active)\n      {\n         if (active === element) { return true; }\n\n         active = active.parentElement;\n      }\n\n      return false;\n   }\n\n   /**\n    * Traverses the given element's parent elements to check if any parent has `offsetWidth` and `offsetHeight` of 0,\n    * indicating that a parent element is hidden. If a parent element is hidden, the given element is also considered\n    * hidden. This is a reasonably efficient check and can be enabled as a filter step in conjunction with focusable\n    * element detection methods like {@link A11yHelper.getFocusableElements}.\n    *\n    * @param {Element}  element - The starting element to check.\n    *\n    * @param {Element}  [stopElement] - The stopping parent element for traversal. If not defined, `document.body` is\n    *        used as the stopping element.\n    *\n    * @returns {boolean} `true` if a parent element of the given element is hidden; otherwise, `false`.\n    */\n   static isParentHidden(element, stopElement)\n   {\n      if (!CrossWindow.isElement(element)) { throw new TypeError(`'element' is not an Element.`); }\n\n      // Set `stopElement` to `document.body` if undefined.\n      stopElement = stopElement ?? CrossWindow.getDocument(element)?.body;\n\n      if (!CrossWindow.isElement(stopElement)) { throw new TypeError(`'stopElement' must be an Element.`); }\n\n      let current = element.parentElement;\n\n      while (current)\n      {\n         // Stop traversal if `stopElement` is reached.\n         if (current === stopElement) { break; }\n\n         // Check if the current parent is hidden by its size.\n         if (current.offsetWidth === 0 && current.offsetHeight === 0) { return true; }\n\n         current = current.parentElement;\n      }\n\n      // No parent is hidden.\n      return false;\n   }\n}\n\nexport { A11yHelper };\n//# sourceMappingURL=index.js.map\n","// gl-matrix - v4.0.0-beta.3 - A high performance matrix and vector library.\n// @author Brandon Jones\n// @author Colin MacKenzie IV\n// @license MIT (https://github.com/toji/gl-matrix/blob/master/LICENSE.md)\n\n// src/common/index.ts\nvar GLM_EPSILON = 1e-6;\n\n// gl-matrix - v4.0.0-beta.3 - A high performance matrix and vector library.\n// @author Brandon Jones\n// @author Colin MacKenzie IV\n// @license MIT (https://github.com/toji/gl-matrix/blob/master/LICENSE.md)\n\nvar Mat2 = class _Mat2 extends Float32Array {\n  static #IDENTITY_2X2 = new Float32Array([\n    1,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Create a {@link Mat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      default:\n        super(_Mat2.#IDENTITY_2X2);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat2.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat2} into `this`.\n   *\n   * @param a the source vector\n   * @returns `this`\n   * @category Methods\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat2.identity(this)\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  identity() {\n    this.set(_Mat2.#IDENTITY_2X2);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat2} against another one\n   * Equivalent to `Mat2.multiply(this, this, b);`\n   *\n   * @param b - The second operand\n   * @returns `this`\n   * @category Methods\n   */\n  multiply(b) {\n    return _Mat2.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat2.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat2}\n   * Equivalent to `Mat2.transpose(this, this);`\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  transpose() {\n    return _Mat2.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat2}\n   * Equivalent to `Mat4.invert(this, this);`\n   *\n   * @returns `this`\n   * @category Methods\n   */\n  invert() {\n    return _Mat2.invert(this, this);\n  }\n  /**\n   * Scales this {@link Mat2} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat2.scale(this, this, v);`\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   * @category Methods\n   */\n  scale(v) {\n    return _Mat2.scale(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat2} by the given angle around the given axis\n   * Equivalent to `Mat2.rotate(this, this, rad);`\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   * @category Methods\n   */\n  rotate(rad) {\n    return _Mat2.rotate(this, this, rad);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat2}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat2}\n   * @category Static\n   *\n   * @returns A new {@link Mat2}\n   */\n  static create() {\n    return new _Mat2();\n  }\n  /**\n   * Creates a new {@link Mat2} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat2}\n   */\n  static clone(a) {\n    return new _Mat2(a);\n  }\n  /**\n   * Copy the values from one {@link Mat2} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat2} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat2}\n   */\n  static fromValues(...values) {\n    return new _Mat2(...values);\n  }\n  /**\n   * Set the components of a {@link Mat2} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    return out;\n  }\n  /**\n   * Set a {@link Mat2} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a1 = a[1];\n      out[1] = a[2];\n      out[2] = a1;\n    } else {\n      out[0] = a[0];\n      out[1] = a[2];\n      out[2] = a[1];\n      out[3] = a[3];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    let det = a0 * a3 - a2 * a1;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] = a0 * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a0 = a[0];\n    out[0] = a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a0;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    return a[0] * a[3] - a[2] * a[1];\n  }\n  /**\n   * Adds two {@link Mat2}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat2}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat2} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat2} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat2.identity(dest);\n   *   mat2.rotate(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat2.identity(dest);\n   *   mat2.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n  }\n  /**\n   * Multiply each element of a {@link Mat2} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat2}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n   * @category Static\n   *\n   * @param L - the lower triangular matrix\n   * @param D - the diagonal matrix\n   * @param U - the upper triangular matrix\n   * @param a - the input matrix to factorize\n   */\n  static LDU(L, D, U, a) {\n    L[2] = a[2] / a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n  }\n  /**\n   * Returns whether two {@link Mat2}s have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether two {@link Mat2}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3));\n  }\n  /**\n   * Returns a string representation of a {@link Mat2}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat2(${a.join(\", \")})`;\n  }\n};\nMat2.prototype.mul = Mat2.prototype.multiply;\nMat2.mul = Mat2.multiply;\nMat2.sub = Mat2.subtract;\nvar Mat2d = class _Mat2d extends Float32Array {\n  static #IDENTITY_2X3 = new Float32Array([\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n  ]);\n  /**\n   * Create a {@link Mat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 6:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 6);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 6);\n        }\n        break;\n      default:\n        super(_Mat2d.#IDENTITY_2X3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat2d.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat2d.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat2d} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat2d.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat2d.#IDENTITY_2X3);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat2d} against another one\n   * Equivalent to `Mat2d.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat2d.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat2d.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Translate this {@link Mat2d} by the given vector\n   * Equivalent to `Mat2d.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat2d.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat2d} by the given angle around the given axis\n   * Equivalent to `Mat2d.rotate(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotate(rad) {\n    return _Mat2d.rotate(this, this, rad);\n  }\n  /**\n   * Scales this {@link Mat2d} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat2d.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat2d.scale(this, this, v);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat2d}.\n   */\n  static get BYTE_LENGTH() {\n    return 6 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat2d}\n   * @category Static\n   *\n   * @returns A new {@link Mat2d}\n   */\n  static create() {\n    return new _Mat2d();\n  }\n  /**\n   * Creates a new {@link Mat2d} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat2d}\n   */\n  static clone(a) {\n    return new _Mat2d(a);\n  }\n  /**\n   * Copy the values from one {@link Mat2d} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat2d} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat2d}\n   */\n  static fromValues(...values) {\n    return new _Mat2d(...values);\n  }\n  /**\n   * Set the components of a {@link Mat2d} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    return out;\n  }\n  /**\n   * Set a {@link Mat2d} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat2d}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const aa = a[0];\n    const ab = a[1];\n    const ac = a[2];\n    const ad = a[3];\n    const atx = a[4];\n    const aty = a[5];\n    let det = aa * ad - ab * ac;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    return a[0] * a[3] - a[1] * a[2];\n  }\n  /**\n   * Adds two {@link Mat2d}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2d.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat2d}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat2d.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat2d} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat2d} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = a0 * c + a2 * s;\n    out[1] = a1 * c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat2d} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const v0 = v[0];\n    const v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n  }\n  // TODO: Got to fromRotation\n  /**\n   * Creates a {@link Mat2d} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2d} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.rotate(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat2d} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   Mat2d.identity(dest);\n   *   Mat2d.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat2d} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + 1);\n  }\n  /**\n   * Multiply each element of a {@link Mat2d} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat2d}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat2d}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n  }\n  /**\n   * Returns whether two {@link Mat2d}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5));\n  }\n  /**\n   * Returns a string representation of a {@link Mat2d}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat2d(${a.join(\", \")})`;\n  }\n};\nMat2d.mul = Mat2d.multiply;\nMat2d.sub = Mat2d.subtract;\nvar Mat3 = class _Mat3 extends Float32Array {\n  static #IDENTITY_3X3 = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Create a {@link Mat3}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 9:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 9);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 9);\n        }\n        break;\n      default:\n        super(_Mat3.#IDENTITY_3X3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat3.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat3.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat3} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat3.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat3.#IDENTITY_3X3);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat3} against another one\n   * Equivalent to `Mat3.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat3.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat3.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat3}\n   * Equivalent to `Mat3.transpose(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  transpose() {\n    return _Mat3.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat3}\n   * Equivalent to `Mat4.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Mat3.invert(this, this);\n  }\n  /**\n   * Translate this {@link Mat3} by the given vector\n   * Equivalent to `Mat3.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat3.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat3} by the given angle around the given axis\n   * Equivalent to `Mat3.rotate(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotate(rad) {\n    return _Mat3.rotate(this, this, rad);\n  }\n  /**\n   * Scales this {@link Mat3} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat3.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec2} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat3.scale(this, this, v);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat3}.\n   */\n  static get BYTE_LENGTH() {\n    return 9 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat3}\n   * @category Static\n   *\n   * @returns A new {@link Mat3}\n   */\n  static create() {\n    return new _Mat3();\n  }\n  /**\n   * Creates a new {@link Mat3} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat3}\n   */\n  static clone(a) {\n    return new _Mat3(a);\n  }\n  /**\n   * Copy the values from one {@link Mat3} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Create a new {@link Mat3} with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat3}\n   */\n  static fromValues(...values) {\n    return new _Mat3(...values);\n  }\n  /**\n   * Set the components of a {@link Mat3} to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    out[6] = values[6];\n    out[7] = values[7];\n    out[8] = values[8];\n    return out;\n  }\n  /**\n   * Set a {@link Mat3} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a01 = a[1], a02 = a[2], a12 = a[5];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a01;\n      out[5] = a[7];\n      out[6] = a02;\n      out[7] = a12;\n    } else {\n      out[0] = a[0];\n      out[1] = a[3];\n      out[2] = a[6];\n      out[3] = a[1];\n      out[4] = a[4];\n      out[5] = a[7];\n      out[6] = a[2];\n      out[7] = a[5];\n      out[8] = a[8];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2];\n    const a10 = a[3], a11 = a[4], a12 = a[5];\n    const a20 = a[6], a21 = a[7], a22 = a[8];\n    const b01 = a22 * a11 - a12 * a21;\n    const b11 = -a22 * a10 + a12 * a20;\n    const b21 = a21 * a10 - a11 * a20;\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat3}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    out[0] = a11 * a22 - a12 * a21;\n    out[1] = a02 * a21 - a01 * a22;\n    out[2] = a01 * a12 - a02 * a11;\n    out[3] = a12 * a20 - a10 * a22;\n    out[4] = a00 * a22 - a02 * a20;\n    out[5] = a02 * a10 - a00 * a12;\n    out[6] = a10 * a21 - a11 * a20;\n    out[7] = a01 * a20 - a00 * a21;\n    out[8] = a00 * a11 - a01 * a10;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n  }\n  /**\n   * Adds two {@link Mat3}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat3.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Mat3}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22;\n    b0 = b[3];\n    b1 = b[4];\n    b2 = b[5];\n    out[3] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[4] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[5] = b0 * a02 + b1 * a12 + b2 * a22;\n    b0 = b[6];\n    b1 = b[7];\n    b2 = b[8];\n    out[6] = b0 * a00 + b1 * a10 + b2 * a20;\n    out[7] = b0 * a01 + b1 * a11 + b2 * a21;\n    out[8] = b0 * a02 + b1 * a12 + b2 * a22;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat3.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat3} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const x = v[0];\n    const y = v[1];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat3} by the given angle\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotate(out, a, rad) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a10 = a[3];\n    const a11 = a[4];\n    const a12 = a[5];\n    const a20 = a[6];\n    const a21 = a[7];\n    const a22 = a[8];\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n  }\n  /**\n   * Scales the {@link Mat3} by the dimensions in the given {@link Vec2}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec2} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat3.identity(dest);\n   *   mat3.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   *\n   *     mat3.identity(dest);\n   *     mat3.rotate(dest, dest, rad);\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat3} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat3.identity(dest);\n   *   mat3.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values of a {@link Mat2d} into the given\n   * {@link Mat3}.\n   * @category Static\n   *\n   * @param out - the receiving 3x3 matrix\n   * @param a - the source 2x3 matrix\n   * @returns `out`\n   */\n  static fromMat2d(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat3} from the given quaternion\n   * @category Static\n   *\n   * @param out - {@link Mat3} receiving operation result\n   * @param q - {@link Quat} to create matrix from\n   * @returns `out`\n   */\n  static fromQuat(out, q) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n    return out;\n  }\n  /**\n   * Copies the upper-left 3x3 values of a {@link Mat4} into the given\n   * {@link Mat3}.\n   * @category Static\n   *\n   * @param out - the receiving 3x3 matrix\n   * @param a - the source 4x4 matrix\n   * @returns `out`\n   */\n  static fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n  }\n  /**\n   * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n   * @category Static\n   *\n   * @param {mat3} out mat3 receiving operation result\n   * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static normalFromMat4(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat3} normal matrix (transpose inverse) from a {@link Mat4}\n   * This version omits the calculation of the constant factor (1/determinant), so\n   * any normals transformed with it will need to be renormalized.\n   * From https://stackoverflow.com/a/27616419/25968\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out`\n   */\n  static normalFromMat4Fast(out, a) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[4];\n    const by = a[5];\n    const bz = a[6];\n    const cx = a[8];\n    const cy = a[9];\n    const cz = a[10];\n    out[0] = by * cz - cz * cy;\n    out[1] = bz * cx - cx * cz;\n    out[2] = bx * cy - cy * cx;\n    out[3] = cy * az - cz * ay;\n    out[4] = cz * ax - cx * az;\n    out[5] = cx * ay - cy * ax;\n    out[6] = ay * bz - az * by;\n    out[7] = az * bx - ax * bz;\n    out[8] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Generates a 2D projection matrix with the given bounds\n   * @category Static\n   *\n   * @param out mat3 frustum matrix will be written into\n   * @param width Width of your gl context\n   * @param height Height of gl context\n   * @returns `out`\n   */\n  static projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(\n      a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8]\n    );\n  }\n  /**\n   * Multiply each element of a {@link Mat3} by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n  }\n  /**\n   * Adds two {@link Mat3}'s after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat3}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n  }\n  /**\n   * Returns whether two {@link Mat3}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const a8 = a[8];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    const b8 = b[8];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= GLM_EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8));\n  }\n  /**\n   * Returns a string representation of a {@link Mat3}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat3(${a.join(\", \")})`;\n  }\n};\nMat3.prototype.mul = Mat3.prototype.multiply;\nMat3.mul = Mat3.multiply;\nMat3.sub = Mat3.subtract;\nvar Mat4 = class _Mat4 extends Float32Array {\n  static #IDENTITY_4X4 = new Float32Array([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n  ]);\n  /**\n   * Temporary variable to prevent repeated allocations in the algorithms within Mat4.\n   * These are declared as TypedArrays to aid in tree-shaking.\n   */\n  static #TMP_VEC3 = new Float32Array(3);\n  /**\n   * Create a {@link Mat4}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 16:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 16);\n        break;\n      case 1:\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v,\n            v\n          ]);\n        } else {\n          super(v, 0, 16);\n        }\n        break;\n      default:\n        super(_Mat4.#IDENTITY_4X4);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Mat4.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Mat4.str(this);\n  }\n  // ===================\n  // Instance methods\n  // ===================\n  /**\n   * Copy the values from another {@link Mat4} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity matrix\n   * Equivalent to Mat4.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this.set(_Mat4.#IDENTITY_4X4);\n    return this;\n  }\n  /**\n   * Multiplies this {@link Mat4} against another one\n   * Equivalent to `Mat4.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Mat4.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Mat4.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Transpose this {@link Mat4}\n   * Equivalent to `Mat4.transpose(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  transpose() {\n    return _Mat4.transpose(this, this);\n  }\n  /**\n   * Inverts this {@link Mat4}\n   * Equivalent to `Mat4.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Mat4.invert(this, this);\n  }\n  /**\n   * Translate this {@link Mat4} by the given vector\n   * Equivalent to `Mat4.translate(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec3} to translate by\n   * @returns `this`\n   */\n  translate(v) {\n    return _Mat4.translate(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the given axis\n   * Equivalent to `Mat4.rotate(this, this, rad, axis);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `this`\n   */\n  rotate(rad, axis) {\n    return _Mat4.rotate(this, this, rad, axis);\n  }\n  /**\n   * Scales this {@link Mat4} by the dimensions in the given vec3 not using vectorization\n   * Equivalent to `Mat4.scale(this, this, v);`\n   * @category Methods\n   *\n   * @param v - The {@link Vec3} to scale the matrix by\n   * @returns `this`\n   */\n  scale(v) {\n    return _Mat4.scale(this, this, v);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the X axis\n   * Equivalent to `Mat4.rotateX(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateX(rad) {\n    return _Mat4.rotateX(this, this, rad);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the Y axis\n   * Equivalent to `Mat4.rotateY(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateY(rad) {\n    return _Mat4.rotateY(this, this, rad);\n  }\n  /**\n   * Rotates this {@link Mat4} by the given angle around the Z axis\n   * Equivalent to `Mat4.rotateZ(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - the angle to rotate the matrix by\n   * @returns `this`\n   */\n  rotateZ(rad) {\n    return _Mat4.rotateZ(this, this, rad);\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * Equivalent to `Mat4.perspectiveNO(this, fovy, aspect, near, far);`\n   * @category Methods\n   *\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `this`\n   */\n  perspectiveNO(fovy, aspect, near, far) {\n    return _Mat4.perspectiveNO(this, fovy, aspect, near, far);\n  }\n  /**\n   * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * Equivalent to `Mat4.perspectiveZO(this, fovy, aspect, near, far);`\n   * @category Methods\n   *\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `this`\n   */\n  perspectiveZO(fovy, aspect, near, far) {\n    return _Mat4.perspectiveZO(this, fovy, aspect, near, far);\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Equivalent to `Mat4.orthoNO(this, left, right, bottom, top, near, far);`\n   * @category Methods\n   *\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `this`\n   */\n  orthoNO(left, right, bottom, top, near, far) {\n    return _Mat4.orthoNO(this, left, right, bottom, top, near, far);\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Equivalent to `Mat4.orthoZO(this, left, right, bottom, top, near, far);`\n   * @category Methods\n   *\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `this`\n   */\n  orthoZO(left, right, bottom, top, near, far) {\n    return _Mat4.orthoZO(this, left, right, bottom, top, near, far);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Mat4}.\n   */\n  static get BYTE_LENGTH() {\n    return 16 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, identity {@link Mat4}\n   * @category Static\n   *\n   * @returns A new {@link Mat4}\n   */\n  static create() {\n    return new _Mat4();\n  }\n  /**\n   * Creates a new {@link Mat4} initialized with values from an existing matrix\n   * @category Static\n   *\n   * @param a - Matrix to clone\n   * @returns A new {@link Mat4}\n   */\n  static clone(a) {\n    return new _Mat4(a);\n  }\n  /**\n   * Copy the values from one {@link Mat4} to another\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - Matrix to copy\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Create a new mat4 with the given values\n   * @category Static\n   *\n   * @param values - Matrix components\n   * @returns A new {@link Mat4}\n   */\n  static fromValues(...values) {\n    return new _Mat4(...values);\n  }\n  /**\n   * Set the components of a mat4 to the given values\n   * @category Static\n   *\n   * @param out - The receiving matrix\n   * @param values - Matrix components\n   * @returns `out`\n   */\n  static set(out, ...values) {\n    out[0] = values[0];\n    out[1] = values[1];\n    out[2] = values[2];\n    out[3] = values[3];\n    out[4] = values[4];\n    out[5] = values[5];\n    out[6] = values[6];\n    out[7] = values[7];\n    out[8] = values[8];\n    out[9] = values[9];\n    out[10] = values[10];\n    out[11] = values[11];\n    out[12] = values[12];\n    out[13] = values[13];\n    out[14] = values[14];\n    out[15] = values[15];\n    return out;\n  }\n  /**\n   * Set a {@link Mat4} to the identity matrix\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Transpose the values of a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static transpose(out, a) {\n    if (out === a) {\n      const a01 = a[1], a02 = a[2], a03 = a[3];\n      const a12 = a[6], a13 = a[7];\n      const a23 = a[11];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a01;\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a02;\n      out[9] = a12;\n      out[11] = a[14];\n      out[12] = a03;\n      out[13] = a13;\n      out[14] = a23;\n    } else {\n      out[0] = a[0];\n      out[1] = a[4];\n      out[2] = a[8];\n      out[3] = a[12];\n      out[4] = a[1];\n      out[5] = a[5];\n      out[6] = a[9];\n      out[7] = a[13];\n      out[8] = a[2];\n      out[9] = a[6];\n      out[10] = a[10];\n      out[11] = a[14];\n      out[12] = a[3];\n      out[13] = a[7];\n      out[14] = a[11];\n      out[15] = a[15];\n    }\n    return out;\n  }\n  /**\n   * Inverts a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static invert(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n    return out;\n  }\n  /**\n   * Calculates the adjugate of a {@link Mat4}\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the source matrix\n   * @returns `out`\n   */\n  static adjoint(out, a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n    out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n    out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n    out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n    out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n    out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n    out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n    out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n    out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n    out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n    out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n    out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n    out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n    out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n    out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n    out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n    return out;\n  }\n  /**\n   * Calculates the determinant of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - the source matrix\n   * @returns determinant of a\n   */\n  static determinant(a) {\n    const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n    const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n    const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n    const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n    const b0 = a00 * a11 - a01 * a10;\n    const b1 = a00 * a12 - a02 * a10;\n    const b2 = a01 * a12 - a02 * a11;\n    const b3 = a20 * a31 - a21 * a30;\n    const b4 = a20 * a32 - a22 * a30;\n    const b5 = a21 * a32 - a22 * a31;\n    const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n    const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n    const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n    const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n    return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n  }\n  /**\n   * Multiplies two {@link Mat4}s\n   * @category Static\n   *\n   * @param out - The receiving Matrix\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    let b0 = b[0];\n    let b1 = b[1];\n    let b2 = b[2];\n    let b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Translate a {@link Mat4} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    if (a === out) {\n      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n      const a00 = a[0];\n      const a01 = a[1];\n      const a02 = a[2];\n      const a03 = a[3];\n      const a10 = a[4];\n      const a11 = a[5];\n      const a12 = a[6];\n      const a13 = a[7];\n      const a20 = a[8];\n      const a21 = a[9];\n      const a22 = a[10];\n      const a23 = a[11];\n      out[0] = a00;\n      out[1] = a01;\n      out[2] = a02;\n      out[3] = a03;\n      out[4] = a10;\n      out[5] = a11;\n      out[6] = a12;\n      out[7] = a13;\n      out[8] = a20;\n      out[9] = a21;\n      out[10] = a22;\n      out[11] = a23;\n      out[12] = a00 * x + a10 * y + a20 * z + a[12];\n      out[13] = a01 * x + a11 * y + a21 * z + a[13];\n      out[14] = a02 * x + a12 * y + a22 * z + a[14];\n      out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n    return out;\n  }\n  /**\n   * Scales the {@link Mat4} by the dimensions in the given {@link Vec3} not using vectorization\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param v - the {@link Vec3} to scale the matrix by\n   * @returns `out`\n   **/\n  static scale(out, a, v) {\n    const x = v[0];\n    const y = v[1];\n    const z = v[2];\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n  }\n  /**\n   * Rotates a {@link Mat4} by the given angle around the given axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `out` or `null` if axis has a length of 0\n   */\n  static rotate(out, a, rad, axis) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let len = Math.sqrt(x * x + y * y + z * z);\n    if (len < GLM_EPSILON) {\n      return null;\n    }\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const t = 1 - c;\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const b00 = x * x * t + c;\n    const b01 = y * x * t + z * s;\n    const b02 = z * x * t - y * s;\n    const b10 = x * y * t - z * s;\n    const b11 = y * y * t + c;\n    const b12 = z * y * t + x * s;\n    const b20 = x * z * t + y * s;\n    const b21 = y * z * t - x * s;\n    const b22 = z * z * t + c;\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n    if (a !== out) {\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the X axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    if (a !== out) {\n      out[0] = a[0];\n      out[1] = a[1];\n      out[2] = a[2];\n      out[3] = a[3];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Y axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    if (a !== out) {\n      out[4] = a[4];\n      out[5] = a[5];\n      out[6] = a[6];\n      out[7] = a[7];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n  }\n  /**\n   * Rotates a matrix by the given angle around the Z axis\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to rotate\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    if (a !== out) {\n      out[8] = a[8];\n      out[9] = a[9];\n      out[10] = a[10];\n      out[11] = a[11];\n      out[12] = a[12];\n      out[13] = a[13];\n      out[14] = a[14];\n      out[15] = a[15];\n    }\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a vector scaling\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.scale(dest, dest, vec);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param v - Scaling vector\n   * @returns `out`\n   */\n  static fromScaling(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a {@link Mat4} from a given angle around a given axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotate(dest, dest, rad, axis);\n   * ```\n   * @category Static\n   *\n   * @param out - {@link Mat4} receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @param axis - the axis to rotate around\n   * @returns `out` or `null` if `axis` has a length of 0\n   */\n  static fromRotation(out, rad, axis) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let len = Math.sqrt(x * x + y * y + z * z);\n    if (len < GLM_EPSILON) {\n      return null;\n    }\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    const t = 1 - c;\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the X axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateX(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromXRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Y axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateY(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromYRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = 0;\n    out[2] = -s;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from the given angle around the Z axis\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.rotateZ(dest, dest, rad);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param rad - the angle to rotate the matrix by\n   * @returns `out`\n   */\n  static fromZRotation(out, rad) {\n    const s = Math.sin(rad);\n    const c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation and vector translation\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @returns `out`\n   */\n  static fromRotationTranslation(out, q, v) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Sets a {@link Mat4} from a {@link Quat2}.\n   * @category Static\n   *\n   * @param out - Matrix\n   * @param a - Dual Quaternion\n   * @returns `out`\n   */\n  static fromQuat2(out, a) {\n    const bx = -a[0];\n    const by = -a[1];\n    const bz = -a[2];\n    const bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const magnitude = bx * bx + by * by + bz * bz + bw * bw;\n    if (magnitude > 0) {\n      _Mat4.#TMP_VEC3[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n      _Mat4.#TMP_VEC3[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n      _Mat4.#TMP_VEC3[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n    } else {\n      _Mat4.#TMP_VEC3[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n      _Mat4.#TMP_VEC3[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n      _Mat4.#TMP_VEC3[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    }\n    _Mat4.fromRotationTranslation(out, a, _Mat4.#TMP_VEC3);\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat4} normal matrix (transpose inverse) from a {@link Mat4}\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out` or `null` if the matrix is not invertible\n   */\n  static normalFromMat4(out, a) {\n    const a00 = a[0];\n    const a01 = a[1];\n    const a02 = a[2];\n    const a03 = a[3];\n    const a10 = a[4];\n    const a11 = a[5];\n    const a12 = a[6];\n    const a13 = a[7];\n    const a20 = a[8];\n    const a21 = a[9];\n    const a22 = a[10];\n    const a23 = a[11];\n    const a30 = a[12];\n    const a31 = a[13];\n    const a32 = a[14];\n    const a33 = a[15];\n    const b00 = a00 * a11 - a01 * a10;\n    const b01 = a00 * a12 - a02 * a10;\n    const b02 = a00 * a13 - a03 * a10;\n    const b03 = a01 * a12 - a02 * a11;\n    const b04 = a01 * a13 - a03 * a11;\n    const b05 = a02 * a13 - a03 * a12;\n    const b06 = a20 * a31 - a21 * a30;\n    const b07 = a20 * a32 - a22 * a30;\n    const b08 = a20 * a33 - a23 * a30;\n    const b09 = a21 * a32 - a22 * a31;\n    const b10 = a21 * a33 - a23 * a31;\n    const b11 = a22 * a33 - a23 * a32;\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n    if (!det) {\n      return null;\n    }\n    det = 1 / det;\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[3] = 0;\n    out[4] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[7] = 0;\n    out[8] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[9] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a {@link Mat4} normal matrix (transpose inverse) from a {@link Mat4}\n   * This version omits the calculation of the constant factor (1/determinant), so\n   * any normals transformed with it will need to be renormalized.\n   * From https://stackoverflow.com/a/27616419/25968\n   * @category Static\n   *\n   * @param out - Matrix receiving operation result\n   * @param a - Mat4 to derive the normal matrix from\n   * @returns `out`\n   */\n  static normalFromMat4Fast(out, a) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = a[4];\n    const by = a[5];\n    const bz = a[6];\n    const cx = a[8];\n    const cy = a[9];\n    const cz = a[10];\n    out[0] = by * cz - cz * cy;\n    out[1] = bz * cx - cx * cz;\n    out[2] = bx * cy - cy * cx;\n    out[3] = 0;\n    out[4] = cy * az - cz * ay;\n    out[5] = cz * ax - cx * az;\n    out[6] = cx * ay - cy * ax;\n    out[7] = 0;\n    out[8] = ay * bz - az * by;\n    out[9] = az * bx - ax * bz;\n    out[10] = ax * by - ay * bx;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns the translation vector component of a transformation\n   * matrix. If a matrix is built with fromRotationTranslation,\n   * the returned vector will be the same as the translation vector\n   * originally supplied.\n   * @category Static\n   *\n   * @param  {vec3} out Vector to receive translation component\n   * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n  static getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n    return out;\n  }\n  /**\n   * Returns the scaling factor component of a transformation\n   * matrix. If a matrix is built with fromRotationTranslationScale\n   * with a normalized Quaternion parameter, the returned vector will be\n   * the same as the scaling vector\n   * originally supplied.\n   * @category Static\n   *\n   * @param  {vec3} out Vector to receive scaling factor component\n   * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n   * @return {vec3} out\n   */\n  static getScaling(out, mat) {\n    const m11 = mat[0];\n    const m12 = mat[1];\n    const m13 = mat[2];\n    const m21 = mat[4];\n    const m22 = mat[5];\n    const m23 = mat[6];\n    const m31 = mat[8];\n    const m32 = mat[9];\n    const m33 = mat[10];\n    out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    return out;\n  }\n  /**\n   * Returns a quaternion representing the rotational component\n   * of a transformation matrix. If a matrix is built with\n   * fromRotationTranslation, the returned quaternion will be the\n   * same as the quaternion originally supplied.\n   * @category Static\n   *\n   * @param out - Quaternion to receive the rotation component\n   * @param mat - Matrix to be decomposed (input)\n   * @return `out`\n   */\n  static getRotation(out, mat) {\n    _Mat4.getScaling(_Mat4.#TMP_VEC3, mat);\n    const is1 = 1 / _Mat4.#TMP_VEC3[0];\n    const is2 = 1 / _Mat4.#TMP_VEC3[1];\n    const is3 = 1 / _Mat4.#TMP_VEC3[2];\n    const sm11 = mat[0] * is1;\n    const sm12 = mat[1] * is2;\n    const sm13 = mat[2] * is3;\n    const sm21 = mat[4] * is1;\n    const sm22 = mat[5] * is2;\n    const sm23 = mat[6] * is3;\n    const sm31 = mat[8] * is1;\n    const sm32 = mat[9] * is2;\n    const sm33 = mat[10] * is3;\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1) * 2;\n      out[3] = 0.25 * S;\n      out[0] = (sm23 - sm32) / S;\n      out[1] = (sm31 - sm13) / S;\n      out[2] = (sm12 - sm21) / S;\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n      out[3] = (sm23 - sm32) / S;\n      out[0] = 0.25 * S;\n      out[1] = (sm12 + sm21) / S;\n      out[2] = (sm31 + sm13) / S;\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n      out[3] = (sm31 - sm13) / S;\n      out[0] = (sm12 + sm21) / S;\n      out[1] = 0.25 * S;\n      out[2] = (sm23 + sm32) / S;\n    } else {\n      S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n      out[3] = (sm12 - sm21) / S;\n      out[0] = (sm31 + sm13) / S;\n      out[1] = (sm23 + sm32) / S;\n      out[2] = 0.25 * S;\n    }\n    return out;\n  }\n  /**\n   * Decomposes a transformation matrix into its rotation, translation\n   * and scale components. Returns only the rotation component\n   * @category Static\n   *\n   * @param out_r - Quaternion to receive the rotation component\n   * @param out_t - Vector to receive the translation vector\n   * @param out_s - Vector to receive the scaling factor\n   * @param mat - Matrix to be decomposed (input)\n   * @returns `out_r`\n   */\n  static decompose(out_r, out_t, out_s, mat) {\n    out_t[0] = mat[12];\n    out_t[1] = mat[13];\n    out_t[2] = mat[14];\n    const m11 = mat[0];\n    const m12 = mat[1];\n    const m13 = mat[2];\n    const m21 = mat[4];\n    const m22 = mat[5];\n    const m23 = mat[6];\n    const m31 = mat[8];\n    const m32 = mat[9];\n    const m33 = mat[10];\n    out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n    out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n    out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n    const is1 = 1 / out_s[0];\n    const is2 = 1 / out_s[1];\n    const is3 = 1 / out_s[2];\n    const sm11 = m11 * is1;\n    const sm12 = m12 * is2;\n    const sm13 = m13 * is3;\n    const sm21 = m21 * is1;\n    const sm22 = m22 * is2;\n    const sm23 = m23 * is3;\n    const sm31 = m31 * is1;\n    const sm32 = m32 * is2;\n    const sm33 = m33 * is3;\n    const trace = sm11 + sm22 + sm33;\n    let S = 0;\n    if (trace > 0) {\n      S = Math.sqrt(trace + 1) * 2;\n      out_r[3] = 0.25 * S;\n      out_r[0] = (sm23 - sm32) / S;\n      out_r[1] = (sm31 - sm13) / S;\n      out_r[2] = (sm12 - sm21) / S;\n    } else if (sm11 > sm22 && sm11 > sm33) {\n      S = Math.sqrt(1 + sm11 - sm22 - sm33) * 2;\n      out_r[3] = (sm23 - sm32) / S;\n      out_r[0] = 0.25 * S;\n      out_r[1] = (sm12 + sm21) / S;\n      out_r[2] = (sm31 + sm13) / S;\n    } else if (sm22 > sm33) {\n      S = Math.sqrt(1 + sm22 - sm11 - sm33) * 2;\n      out_r[3] = (sm31 - sm13) / S;\n      out_r[0] = (sm12 + sm21) / S;\n      out_r[1] = 0.25 * S;\n      out_r[2] = (sm23 + sm32) / S;\n    } else {\n      S = Math.sqrt(1 + sm33 - sm11 - sm22) * 2;\n      out_r[3] = (sm12 - sm21) / S;\n      out_r[0] = (sm31 + sm13) / S;\n      out_r[1] = (sm23 + sm32) / S;\n      out_r[2] = 0.25 * S;\n    }\n    return out_r;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale\n   * This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   *   mat4.scale(dest, scale);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @param s - Scaling vector\n   * @returns `out`\n   */\n  static fromRotationTranslationScale(out, q, v, s) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const sx = s[0];\n    const sy = s[1];\n    const sz = s[2];\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the\n   * given origin. This is equivalent to (but much faster than):\n   * ```js\n   *   mat4.identity(dest);\n   *   mat4.translate(dest, vec);\n   *   mat4.translate(dest, origin);\n   *   let quatMat = mat4.create();\n   *   quat4.toMat4(quat, quatMat);\n   *   mat4.multiply(dest, quatMat);\n   *   mat4.scale(dest, scale)\n   *   mat4.translate(dest, negativeOrigin);\n   * ```\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Rotation quaternion\n   * @param v - Translation vector\n   * @param s - Scaling vector\n   * @param o - The origin vector around which to scale and rotate\n   * @returns `out`\n   */\n  static fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    const sx = s[0];\n    const sy = s[1];\n    const sz = s[2];\n    const ox = o[0];\n    const oy = o[1];\n    const oz = o[2];\n    const out0 = (1 - (yy + zz)) * sx;\n    const out1 = (xy + wz) * sx;\n    const out2 = (xz - wy) * sx;\n    const out4 = (xy - wz) * sy;\n    const out5 = (1 - (xx + zz)) * sy;\n    const out6 = (yz + wx) * sy;\n    const out8 = (xz + wy) * sz;\n    const out9 = (yz - wx) * sz;\n    const out10 = (1 - (xx + yy)) * sz;\n    out[0] = out0;\n    out[1] = out1;\n    out[2] = out2;\n    out[3] = 0;\n    out[4] = out4;\n    out[5] = out5;\n    out[6] = out6;\n    out[7] = 0;\n    out[8] = out8;\n    out[9] = out9;\n    out[10] = out10;\n    out[11] = 0;\n    out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n    out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n    out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @category Static\n   *\n   * @param out - mat4 receiving operation result\n   * @param q - Quaternion to create matrix from\n   * @returns `out`\n   */\n  static fromQuat(out, q) {\n    const x = q[0];\n    const y = q[1];\n    const z = q[2];\n    const w = q[3];\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const yx = y * x2;\n    const yy = y * y2;\n    const zx = z * x2;\n    const zy = z * y2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a frustum matrix with the given bounds\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far -  Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static frustumNO(out, left, right, bottom, top, near, far = Infinity) {\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.frustumNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.frustumNO} or {@link Mat4.frustumZO} explicitly\n   */\n  static frustum(out, left, right, bottom, top, near, far = Infinity) {\n    return out;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Generates a frustum matrix with the given bounds\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static frustumZO(out, left, right, bottom, top, near, far = Infinity) {\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    out[0] = near * 2 * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = near * 2 * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = far * nf;\n      out[14] = far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -near;\n    }\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n   * which matches WebGL/OpenGL's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static perspectiveNO(out, fovy, aspect, near, far = Infinity) {\n    const f = 1 / Math.tan(fovy / 2);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = (far + near) * nf;\n      out[14] = 2 * far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -2 * near;\n    }\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.perspectiveNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.perspectiveNO} or {@link Mat4.perspectiveZO} explicitly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static perspective(out, fovy, aspect, near, far = Infinity) {\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n   * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n   * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n   * Passing null/undefined/no value for far will generate infinite projection matrix.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fovy - Vertical field of view in radians\n   * @param aspect - Aspect ratio. typically viewport width/height\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum, can be null or Infinity\n   * @returns `out`\n   */\n  static perspectiveZO(out, fovy, aspect, near, far = Infinity) {\n    const f = 1 / Math.tan(fovy / 2);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[15] = 0;\n    if (far != null && far !== Infinity) {\n      const nf = 1 / (near - far);\n      out[10] = far * nf;\n      out[14] = far * near * nf;\n    } else {\n      out[10] = -1;\n      out[14] = -near;\n    }\n    return out;\n  }\n  /**\n   * Generates a perspective projection matrix with the given field of view. This is primarily useful for generating\n   * projection matrices to be used with the still experimental WebVR API.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param fov - Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   * @deprecated\n   */\n  static perspectiveFromFieldOfView(out, fov, near, far) {\n    const upTan = Math.tan(fov.upDegrees * Math.PI / 180);\n    const downTan = Math.tan(fov.downDegrees * Math.PI / 180);\n    const leftTan = Math.tan(fov.leftDegrees * Math.PI / 180);\n    const rightTan = Math.tan(fov.rightDegrees * Math.PI / 180);\n    const xScale = 2 / (leftTan + rightTan);\n    const yScale = 2 / (upTan + downTan);\n    out[0] = xScale;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = yScale;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = (upTan - downTan) * yScale * 0.5;\n    out[10] = far / (near - far);\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = far * near / (near - far);\n    out[15] = 0;\n    return out;\n  }\n  /**\n   * Generates an orthogonal projection matrix with the given bounds. The near / far clip planes correspond to a\n   * normalized device coordinate Z range of [-1, 1], which matches WebGL / OpenGLs clip volume.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   */\n  static orthoNO(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right);\n    const bt = 1 / (bottom - top);\n    const nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.orthoNO}\n   * @category Static\n   * @deprecated Use {@link Mat4.orthoNO} or {@link Mat4.orthoZO} explicitly\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static ortho(out, left, right, bottom, top, near, far) {\n    return out;\n  }\n  /**\n   * Generates a orthogonal projection matrix with the given bounds. The near / far clip planes correspond to a\n   * normalized device coordinate Z range of [0, 1], which matches WebGPU / Vulkan / DirectX / Metal's clip volume.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param left - Left bound of the frustum\n   * @param right - Right bound of the frustum\n   * @param bottom - Bottom bound of the frustum\n   * @param top - Top bound of the frustum\n   * @param near - Near bound of the frustum\n   * @param far - Far bound of the frustum\n   * @returns `out`\n   */\n  static orthoZO(out, left, right, bottom, top, near, far) {\n    const lr = 1 / (left - right);\n    const bt = 1 / (bottom - top);\n    const nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = near * nf;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a look-at matrix with the given eye position, focal point, and up axis. If you want a matrix that\n   * actually makes an object look at another object, you should use targetTo instead.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param eye - Position of the viewer\n   * @param center - Point the viewer is looking at\n   * @param up - vec3 pointing up\n   * @returns `out`\n   */\n  static lookAt(out, eye, center, up) {\n    const eyex = eye[0];\n    const eyey = eye[1];\n    const eyez = eye[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    const centerx = center[0];\n    const centery = center[1];\n    const centerz = center[2];\n    if (Math.abs(eyex - centerx) < GLM_EPSILON && Math.abs(eyey - centery) < GLM_EPSILON && Math.abs(eyez - centerz) < GLM_EPSILON) {\n      return _Mat4.identity(out);\n    }\n    let z0 = eyex - centerx;\n    let z1 = eyey - centery;\n    let z2 = eyez - centerz;\n    let len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n    let x0 = upy * z2 - upz * z1;\n    let x1 = upz * z0 - upx * z2;\n    let x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n      x0 = 0;\n      x1 = 0;\n      x2 = 0;\n    } else {\n      len = 1 / len;\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n    let y0 = z1 * x2 - z2 * x1;\n    let y1 = z2 * x0 - z0 * x2;\n    let y2 = z0 * x1 - z1 * x0;\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n      y0 = 0;\n      y1 = 0;\n      y2 = 0;\n    } else {\n      len = 1 / len;\n      y0 *= len;\n      y1 *= len;\n      y2 *= len;\n    }\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Generates a matrix that makes something look at something else.\n   * @category Static\n   *\n   * @param out - mat4 frustum matrix will be written into\n   * @param eye - Position of the viewer\n   * @param target - Point the viewer is looking at\n   * @param up - vec3 pointing up\n   * @returns `out`\n   */\n  static targetTo(out, eye, target, up) {\n    const eyex = eye[0];\n    const eyey = eye[1];\n    const eyez = eye[2];\n    const upx = up[0];\n    const upy = up[1];\n    const upz = up[2];\n    let z0 = eyex - target[0];\n    let z1 = eyey - target[1];\n    let z2 = eyez - target[2];\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      z0 *= len;\n      z1 *= len;\n      z2 *= len;\n    }\n    let x0 = upy * z2 - upz * z1;\n    let x1 = upz * z0 - upx * z2;\n    let x2 = upx * z1 - upy * z0;\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n      x0 *= len;\n      x1 *= len;\n      x2 *= len;\n    }\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n  }\n  /**\n   * Returns Frobenius norm of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - the matrix to calculate Frobenius norm of\n   * @returns Frobenius norm\n   */\n  static frob(a) {\n    return Math.sqrt(\n      a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + a[6] * a[6] + a[7] * a[7] + a[8] * a[8] + a[9] * a[9] + a[10] * a[10] + a[11] * a[11] + a[12] * a[12] + a[13] * a[13] + a[14] * a[14] + a[15] * a[15]\n    );\n  }\n  /**\n   * Adds two {@link Mat4}'s\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n  }\n  /**\n   * Subtracts matrix b from matrix a\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n  }\n  /**\n   * Alias for {@link Mat4.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiply each element of the matrix by a scalar.\n   * @category Static\n   *\n   * @param out - the receiving matrix\n   * @param a - the matrix to scale\n   * @param b - amount to scale the matrix's elements by\n   * @returns `out`\n   */\n  static multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n  }\n  /**\n   * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b's elements by before adding\n   * @returns `out`\n   */\n  static multiplyScalarAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    out[4] = a[4] + b[4] * scale;\n    out[5] = a[5] + b[5] * scale;\n    out[6] = a[6] + b[6] * scale;\n    out[7] = a[7] + b[7] * scale;\n    out[8] = a[8] + b[8] * scale;\n    out[9] = a[9] + b[9] * scale;\n    out[10] = a[10] + b[10] * scale;\n    out[11] = a[11] + b[11] * scale;\n    out[12] = a[12] + b[12] * scale;\n    out[13] = a[13] + b[13] * scale;\n    out[14] = a[14] + b[14] * scale;\n    out[15] = a[15] + b[15] * scale;\n    return out;\n  }\n  /**\n   * Returns whether two {@link Mat4}s have exactly the same elements in the same position (when compared with ===).\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n  }\n  /**\n   * Returns whether two {@link Mat4}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first matrix.\n   * @param b - The second matrix.\n   * @returns True if the matrices are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const a8 = a[8];\n    const a9 = a[9];\n    const a10 = a[10];\n    const a11 = a[11];\n    const a12 = a[12];\n    const a13 = a[13];\n    const a14 = a[14];\n    const a15 = a[15];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    const b8 = b[8];\n    const b9 = b[9];\n    const b10 = b[10];\n    const b11 = b[11];\n    const b12 = b[12];\n    const b13 = b[13];\n    const b14 = b[14];\n    const b15 = b[15];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= GLM_EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= GLM_EPSILON * Math.max(1, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= GLM_EPSILON * Math.max(1, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= GLM_EPSILON * Math.max(1, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= GLM_EPSILON * Math.max(1, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= GLM_EPSILON * Math.max(1, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= GLM_EPSILON * Math.max(1, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= GLM_EPSILON * Math.max(1, Math.abs(a15), Math.abs(b15));\n  }\n  /**\n   * Returns a string representation of a {@link Mat4}\n   * @category Static\n   *\n   * @param a - matrix to represent as a string\n   * @returns string representation of the matrix\n   */\n  static str(a) {\n    return `Mat4(${a.join(\", \")})`;\n  }\n};\nMat4.prototype.mul = Mat4.prototype.multiply;\nMat4.sub = Mat4.subtract;\nMat4.mul = Mat4.multiply;\nMat4.frustum = Mat4.frustumNO;\nMat4.perspective = Mat4.perspectiveNO;\nMat4.ortho = Mat4.orthoNO;\nvar Vec3 = class _Vec3 extends Float32Array {\n  /**\n   * Create a {@link Vec3}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 3:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 3);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v]);\n        } else {\n          super(v, 0, 3);\n        }\n        break;\n      }\n      default:\n        super(3);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the vector. Equivalent to `this[2];`\n   * @category Vector Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The b component of the vector. Equivalent to `this[2];`\n   * @category Color Components\n   */\n  get b() {\n    return this[2];\n  }\n  set b(value) {\n    this[2] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec3.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * The squared magnitude (length) of `this`.\n   * Equivalent to `Vec3.squaredMagnitude(this);`\n   *\n   * @category Accessors\n   */\n  get squaredMagnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredMagnitude}\n   *\n   * @category Accessors\n   */\n  get sqrMag() {\n    return this.squaredMagnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec3.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec3.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec3} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  /**\n   * Adds a {@link Vec3} to `this`.\n   * Equivalent to `Vec3.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    this[2] += b[2];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec3} from `this`.\n   * Equivalent to `Vec3.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    this[2] -= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec3}.\n   * Equivalent to `Vec3.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    this[2] *= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec3}.\n   * Equivalent to `Vec3.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    this[2] /= b[2];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec3.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec3.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    this[2] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec3.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    this[2] += b[2] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec3} and `this`.\n   * Equivalent to `Vec3.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec3.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec3.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec3} and `this`.\n   * Equivalent to `Vec3.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec3.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec3.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec3.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    this[2] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec3.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    this[2] = 1 / this[2];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to its absolute value.\n   * Equivalent to `Vec3.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    this[2] = Math.abs(this[2]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec3}.\n   * Equivalent to `Vec3.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1] + this[2] * b[2];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec3.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec3.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec3}.\n   */\n  static get BYTE_LENGTH() {\n    return 3 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty vec3\n   * @category Static\n   *\n   * @returns a new 3D vector\n   */\n  static create() {\n    return new _Vec3();\n  }\n  /**\n   * Creates a new vec3 initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - vector to clone\n   * @returns a new 3D vector\n   */\n  static clone(a) {\n    return new _Vec3(a);\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec3}\n   * @category Static\n   *\n   * @param a - Vector to calculate magnitude of\n   * @returns Magnitude of a\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec3.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   *\n   * @param a - vector to calculate length of\n   * @returns length of a\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec3.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec3.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Creates a new vec3 initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @returns a new 3D vector\n   */\n  static fromValues(x, y, z) {\n    return new _Vec3(x, y, z);\n  }\n  /**\n   * Copy the values from one vec3 to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n  }\n  /**\n   * Set the components of a vec3 to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @returns `out`\n   */\n  static set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec3}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Multiplies two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Divides two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec3.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return [0, 0, 0];\n  }\n  /**\n   * Math.ceil the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n  }\n  /**\n   * symmetric round the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to round\n   * @returns `out`\n   */\n  /*\n    static round(out: Vec3Like, a: Readonly<Vec3Like>): Vec3Like {\n    out[0] = glMatrix.round(a[0]);\n    out[1] = glMatrix.round(a[1]);\n    out[2] = glMatrix.round(a[2]);\n    return out;\n  }*/\n  /**\n   * Scales a vec3 by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param scale - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    return out;\n  }\n  /**\n   * Adds two vec3's after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns distance between a and b\n   */\n  static distance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n  }\n  /**\n   * Alias for {@link Vec3.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns squared distance between a and b\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredDistance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared length of a vec3\n   * @category Static\n   *\n   * @param a - vector to calculate squared length of\n   * @returns squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    return x * x + y * y + z * z;\n  }\n  /**\n   * Alias for {@link Vec3.squaredLength}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrLen(a, b) {\n    return 0;\n  }\n  /**\n   * Negates the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    out[2] = 1 / a[2];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec3}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    out[2] = Math.abs(a[2]);\n    return out;\n  }\n  /**\n   * Normalize a vec3\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two vec3's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  /**\n   * Computes the cross product of two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static cross(out, a, b) {\n    const ax = a[0], ay = a[1], az = a[2];\n    const bx = b[0], by = b[1], bz = b[2];\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two vec3's\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static slerp(out, a, b, t) {\n    const angle = Math.acos(Math.min(Math.max(_Vec3.dot(a, b), -1), 1));\n    const sinTotal = Math.sin(angle);\n    const ratioA = Math.sin((1 - t) * angle) / sinTotal;\n    const ratioB = Math.sin(t * angle) / sinTotal;\n    out[0] = ratioA * a[0] + ratioB * b[0];\n    out[1] = ratioA * a[1] + ratioB * b[1];\n    out[2] = ratioA * a[2] + ratioB * b[2];\n    return out;\n  }\n  /**\n   * Performs a hermite interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static hermite(out, a, b, c, d, t) {\n    const factorTimes2 = t * t;\n    const factor1 = factorTimes2 * (2 * t - 3) + 1;\n    const factor2 = factorTimes2 * (t - 2) + t;\n    const factor3 = factorTimes2 * (t - 1);\n    const factor4 = factorTimes2 * (3 - 2 * t);\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Performs a bezier interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static bezier(out, a, b, c, d, t) {\n    const inverseFactor = 1 - t;\n    const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n    const factorTimes2 = t * t;\n    const factor1 = inverseFactorTimesTwo * inverseFactor;\n    const factor2 = 3 * t * inverseFactorTimesTwo;\n    const factor3 = 3 * factorTimes2 * inverseFactor;\n    const factor4 = factorTimes2 * t;\n    out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n    out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n    out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n   * @returns `out`\n   */\n  /*\n      static random(out: Vec3Like, scale) {\n      scale = scale === undefined ? 1.0 : scale;\n  \n      let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n      let z = glMatrix.RANDOM() * 2.0 - 1.0;\n      let zScale = Math.sqrt(1.0 - z * z) * scale;\n  \n      out[0] = Math.cos(r) * zScale;\n      out[1] = Math.sin(r) * zScale;\n      out[2] = z * scale;\n      return out;\n    }*/\n  /**\n   * Transforms the vec3 with a mat4.\n   * 4th vector component is implicitly '1'\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - matrix to transform with\n   * @returns `out`\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0], y = a[1], z = a[2];\n    const w = m[3] * x + m[7] * y + m[11] * z + m[15] || 1;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a mat3.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - the 3x3 matrix to transform with\n   * @returns `out`\n   */\n  static transformMat3(out, a, m) {\n    const x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n  }\n  /**\n   * Transforms the vec3 with a quat\n   * Can also be used for dual quaternions. (Multiply it with the real part)\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param q - quaternion to transform with\n   * @returns `out`\n   */\n  static transformQuat(out, a, q) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const w2 = q[3] * 2;\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const uvx = qy * z - qz * y;\n    const uvy = qz * x - qx * z;\n    const uvz = qx * y - qy * x;\n    const uuvx = (qy * uvz - qz * uvy) * 2;\n    const uuvy = (qz * uvx - qx * uvz) * 2;\n    const uuvz = (qx * uvy - qy * uvx) * 2;\n    out[0] = x + uvx * w2 + uuvx;\n    out[1] = y + uvy * w2 + uuvy;\n    out[2] = z + uvz * w2 + uuvz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the x-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateX(out, a, b, rad) {\n    const by = b[1];\n    const bz = b[2];\n    const py = a[1] - by;\n    const pz = a[2] - bz;\n    out[0] = a[0];\n    out[1] = py * Math.cos(rad) - pz * Math.sin(rad) + by;\n    out[2] = py * Math.sin(rad) + pz * Math.cos(rad) + bz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the y-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateY(out, a, b, rad) {\n    const bx = b[0];\n    const bz = b[2];\n    const px = a[0] - bx;\n    const pz = a[2] - bz;\n    out[0] = pz * Math.sin(rad) + px * Math.cos(rad) + bx;\n    out[1] = a[1];\n    out[2] = pz * Math.cos(rad) - px * Math.sin(rad) + bz;\n    return out;\n  }\n  /**\n   * Rotate a 3D vector around the z-axis\n   * @category Static\n   *\n   * @param out - The receiving vec3\n   * @param a - The vec3 point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotateZ(out, a, b, rad) {\n    const bx = b[0];\n    const by = b[1];\n    const px = a[0] - bx;\n    const py = a[1] - by;\n    out[0] = px * Math.cos(rad) - py * Math.sin(rad) + bx;\n    out[1] = px * Math.sin(rad) + py * Math.cos(rad) + by;\n    out[2] = b[2];\n    return out;\n  }\n  /**\n   * Get the angle between two 3D vectors\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns The angle in radians\n   */\n  static angle(a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz));\n    const cosine = mag && _Vec3.dot(a, b) / mag;\n    return Math.acos(Math.min(Math.max(cosine, -1), 1));\n  }\n  /**\n   * Set the components of a vec3 to zero\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a vector\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Vec3(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2));\n  }\n};\nVec3.prototype.sub = Vec3.prototype.subtract;\nVec3.prototype.mul = Vec3.prototype.multiply;\nVec3.prototype.div = Vec3.prototype.divide;\nVec3.prototype.dist = Vec3.prototype.distance;\nVec3.prototype.sqrDist = Vec3.prototype.squaredDistance;\nVec3.sub = Vec3.subtract;\nVec3.mul = Vec3.multiply;\nVec3.div = Vec3.divide;\nVec3.dist = Vec3.distance;\nVec3.sqrDist = Vec3.squaredDistance;\nVec3.sqrLen = Vec3.squaredLength;\nVec3.mag = Vec3.magnitude;\nVec3.length = Vec3.magnitude;\nVec3.len = Vec3.magnitude;\nvar Vec4 = class _Vec4 extends Float32Array {\n  /**\n   * Create a {@link Vec4}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      }\n      default:\n        super(4);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the vector. Equivalent to `this[2];`\n   * @category Vector Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  /**\n   * The w component of the vector. Equivalent to `this[3];`\n   * @category Vector Components\n   */\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The b component of the vector. Equivalent to `this[2];`\n   * @category Color Components\n   */\n  get b() {\n    return this[2];\n  }\n  set b(value) {\n    this[2] = value;\n  }\n  /**\n   * The a component of the vector. Equivalent to `this[3];`\n   * @category Color Components\n   */\n  get a() {\n    return this[3];\n  }\n  set a(value) {\n    this[3] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec4.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    const w = this[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Vec4.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec4.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec4.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec4} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  /**\n   * Adds a {@link Vec4} to `this`.\n   * Equivalent to `Vec4.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    this[2] += b[2];\n    this[3] += b[3];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec4} from `this`.\n   * Equivalent to `Vec4.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    this[2] -= b[2];\n    this[3] -= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec4}.\n   * Equivalent to `Vec4.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    this[2] *= b[2];\n    this[3] *= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec4}.\n   * Equivalent to `Vec4.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    this[2] /= b[2];\n    this[3] /= b[3];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec4.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec4.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    this[2] *= b;\n    this[3] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec4.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    this[2] += b[2] * scale;\n    this[3] += b[3] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec4} and `this`.\n   * Equivalent to `Vec4.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec4.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec4.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec4} and `this`.\n   * Equivalent to `Vec4.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec4.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec4.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec4.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    this[2] *= -1;\n    this[3] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec4.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    this[2] = 1 / this[2];\n    this[3] = 1 / this[3];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to it's absolute value.\n   * Equivalent to `Vec4.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    this[2] = Math.abs(this[2]);\n    this[3] = Math.abs(this[3]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec4}.\n   * Equivalent to `Vec4.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1] + this[2] * b[2] + this[3] * b[3];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec4.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec4.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec4}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty {@link Vec4}\n   * @category Static\n   *\n   * @returns a new 4D vector\n   */\n  static create() {\n    return new _Vec4();\n  }\n  /**\n   * Creates a new {@link Vec4} initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - vector to clone\n   * @returns a new 4D vector\n   */\n  static clone(a) {\n    return new _Vec4(a);\n  }\n  /**\n   * Creates a new {@link Vec4} initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns a new 4D vector\n   */\n  static fromValues(x, y, z, w) {\n    return new _Vec4(x, y, z, w);\n  }\n  /**\n   * Copy the values from one {@link Vec4} to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec4} to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns `out`\n   */\n  static set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec4}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return out;\n  }\n  /**\n   * Multiplies two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Divides two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec4.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return out;\n  }\n  /**\n   * Math.ceil the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    out[2] = Math.ceil(a[2]);\n    out[3] = Math.ceil(a[3]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    out[2] = Math.floor(a[2]);\n    out[3] = Math.floor(a[3]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n  }\n  /**\n   * Math.round the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to round\n   * @returns `out`\n   */\n  static round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    out[2] = Math.round(a[2]);\n    out[3] = Math.round(a[3]);\n    return out;\n  }\n  /**\n   * Scales a {@link Vec4} by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param scale - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    out[3] = a[3] * scale;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec4}'s after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param scale - the amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    out[2] = a[2] + b[2] * scale;\n    out[3] = a[3] + b[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns distance between a and b\n   */\n  static distance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    const w = b[3] - a[3];\n    return Math.hypot(x, y, z, w);\n  }\n  /**\n   * Alias for {@link Vec4.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns squared distance between a and b\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    const z = b[2] - a[2];\n    const w = b[3] - a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Alias for {@link Vec4.squaredDistance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to calculate length of\n   * @returns length of `a`\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec4.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec4.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec4.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to calculate squared length of\n   * @returns squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    return x * x + y * y + z * z + w * w;\n  }\n  /**\n   * Alias for {@link Vec4.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    out[2] = 1 / a[2];\n    out[3] = 1 / a[3];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec4}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    out[2] = Math.abs(a[2]);\n    out[3] = Math.abs(a[3]);\n    return out;\n  }\n  /**\n   * Normalize a {@link Vec4}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Vec4}'s\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Returns the cross-product of three vectors in a 4-dimensional space\n   * @category Static\n   *\n   * @param out the receiving vector\n   * @param u - the first vector\n   * @param v - the second vector\n   * @param w - the third vector\n   * @returns result\n   */\n  static cross(out, u, v, w) {\n    const a = v[0] * w[1] - v[1] * w[0];\n    const b = v[0] * w[2] - v[2] * w[0];\n    const c = v[0] * w[3] - v[3] * w[0];\n    const d = v[1] * w[2] - v[2] * w[1];\n    const e = v[1] * w[3] - v[3] * w[1];\n    const f = v[2] * w[3] - v[3] * w[2];\n    const g = u[0];\n    const h = u[1];\n    const i = u[2];\n    const j = u[3];\n    out[0] = h * f - i * e + j * d;\n    out[1] = -(g * f) + i * c - j * b;\n    out[2] = g * e - h * c + j * a;\n    out[3] = -(g * d) + h * b - i * a;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Vec4}'s\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n  }\n  /**\n   * Generates a random vector with the given scale\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param [scale] - Length of the resulting vector. If ommitted, a unit vector will be returned\n   * @returns `out`\n   */\n  /*\n      static random(out: Vec4Like, scale): Vec4Like {\n      scale = scale || 1.0;\n  \n      // Marsaglia, George. Choosing a Point from the Surface of a\n      // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n      // http://projecteuclid.org/euclid.aoms/1177692644;\n      var v1, v2, v3, v4;\n      var s1, s2;\n      do {\n        v1 = glMatrix.RANDOM() * 2 - 1;\n        v2 = glMatrix.RANDOM() * 2 - 1;\n        s1 = v1 * v1 + v2 * v2;\n      } while (s1 >= 1);\n      do {\n        v3 = glMatrix.RANDOM() * 2 - 1;\n        v4 = glMatrix.RANDOM() * 2 - 1;\n        s2 = v3 * v3 + v4 * v4;\n      } while (s2 >= 1);\n  \n      var d = Math.sqrt((1 - s1) / s2);\n      out[0] = scale * v1;\n      out[1] = scale * v2;\n      out[2] = scale * v3 * d;\n      out[3] = scale * v4 * d;\n      return out;\n    }*/\n  /**\n   * Transforms the {@link Vec4} with a {@link Mat4}.\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param m - matrix to transform with\n   * @returns `out`\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec4} with a {@link Quat}\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to transform\n   * @param q - quaternion to transform with\n   * @returns `out`\n   */\n  static transformQuat(out, a, q) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec4} to zero\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n  }\n  /**\n   * Returns a string representation of a {@link Vec4}\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Vec4(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3));\n  }\n};\nVec4.prototype.sub = Vec4.prototype.subtract;\nVec4.prototype.mul = Vec4.prototype.multiply;\nVec4.prototype.div = Vec4.prototype.divide;\nVec4.prototype.dist = Vec4.prototype.distance;\nVec4.prototype.sqrDist = Vec4.prototype.squaredDistance;\nVec4.sub = Vec4.subtract;\nVec4.mul = Vec4.multiply;\nVec4.div = Vec4.divide;\nVec4.dist = Vec4.distance;\nVec4.sqrDist = Vec4.squaredDistance;\nVec4.sqrLen = Vec4.squaredLength;\nVec4.mag = Vec4.magnitude;\nVec4.length = Vec4.magnitude;\nVec4.len = Vec4.magnitude;\nvar Quat = class _Quat extends Float32Array {\n  static #DEFAULT_ANGLE_ORDER = \"zyx\";\n  // Temporary variables to prevent repeated allocations in the algorithms within Quat.\n  // These are declared as TypedArrays to aid in tree-shaking.\n  static #TMP_QUAT1 = new Float32Array(4);\n  static #TMP_QUAT2 = new Float32Array(4);\n  static #TMP_MAT3 = new Float32Array(9);\n  static #TMP_VEC3 = new Float32Array(3);\n  static #X_UNIT_VEC3 = new Float32Array([1, 0, 0]);\n  static #Y_UNIT_VEC3 = new Float32Array([0, 1, 0]);\n  /**\n   * Create a {@link Quat}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 4:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 4);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v]);\n        } else {\n          super(v, 0, 4);\n        }\n        break;\n      }\n      default:\n        super(4);\n        this[3] = 1;\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the quaternion. Equivalent to `this[0];`\n   * @category Quaternion Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the quaternion. Equivalent to `this[1];`\n   * @category Quaternion Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  /**\n   * The z component of the quaternion. Equivalent to `this[2];`\n   * @category Quaternion Components\n   */\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = value;\n  }\n  /**\n   * The w component of the quaternion. Equivalent to `this[3];`\n   * @category Quaternion Components\n   */\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    this[3] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Quat.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    const w = this[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Quat.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Quat.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Quat} into `this`.\n   * @category Methods\n   *\n   * @param a the source quaternion\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  /**\n   * Set `this` to the identity quaternion\n   * Equivalent to Quat.identity(this)\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  identity() {\n    this[0] = 0;\n    this[1] = 0;\n    this[2] = 0;\n    this[3] = 1;\n    return this;\n  }\n  /**\n   * Multiplies `this` by a {@link Quat}.\n   * Equivalent to `Quat.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    return _Quat.multiply(this, this, b);\n  }\n  /**\n   * Alias for {@link Quat.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Rotates `this` by the given angle about the X axis\n   * Equivalent to `Quat.rotateX(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateX(rad) {\n    return _Quat.rotateX(this, this, rad);\n  }\n  /**\n   * Rotates `this` by the given angle about the Y axis\n   * Equivalent to `Quat.rotateY(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateY(rad) {\n    return _Quat.rotateY(this, this, rad);\n  }\n  /**\n   * Rotates `this` by the given angle about the Z axis\n   * Equivalent to `Quat.rotateZ(this, this, rad);`\n   * @category Methods\n   *\n   * @param rad - angle (in radians) to rotate\n   * @returns `this`\n   */\n  rotateZ(rad) {\n    return _Quat.rotateZ(this, this, rad);\n  }\n  /**\n   * Inverts `this`\n   * Equivalent to `Quat.invert(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    return _Quat.invert(this, this);\n  }\n  /**\n   * Scales `this` by a scalar number\n   * Equivalent to `Quat.scale(this, this, scale);`\n   * @category Methods\n   *\n   * @param scale - amount to scale the vector by\n   * @returns `this`\n   */\n  scale(scale) {\n    this[0] *= scale;\n    this[1] *= scale;\n    this[2] *= scale;\n    this[3] *= scale;\n    return this;\n  }\n  /**\n   * Calculates the dot product of `this` and another {@link Quat}\n   * Equivalent to `Quat.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - the second operand\n   * @returns dot product of `this` and b\n   */\n  dot(b) {\n    return _Quat.dot(this, b);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Quat}.\n   */\n  static get BYTE_LENGTH() {\n    return 4 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new identity quat\n   * @category Static\n   *\n   * @returns a new quaternion\n   */\n  static create() {\n    return new _Quat();\n  }\n  /**\n   * Set a quat to the identity quaternion\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n  }\n  /**\n   * Sets a quat from the given angle and rotation axis,\n   * then returns it.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param axis - the axis around which to rotate\n   * @param rad - the angle in radians\n   * @returns `out`\n   **/\n  static setAxisAngle(out, axis, rad) {\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n  }\n  /**\n   * Gets the rotation axis and angle for a given\n   *  quaternion. If a quaternion is created with\n   *  setAxisAngle, this method will return the same\n   *  values as provided in the original parameter list\n   *  OR functionally equivalent values.\n   * Example: The quaternion formed by axis [0, 0, 1] and\n   *  angle -90 is the same as the quaternion formed by\n   *  [0, 0, 1] and 270. This method favors the latter.\n   * @category Static\n   *\n   * @param out_axis - Vector receiving the axis of rotation\n   * @param q - Quaternion to be decomposed\n   * @return Angle, in radians, of the rotation\n   */\n  static getAxisAngle(out_axis, q) {\n    const rad = Math.acos(q[3]) * 2;\n    const s = Math.sin(rad / 2);\n    if (s > GLM_EPSILON) {\n      out_axis[0] = q[0] / s;\n      out_axis[1] = q[1] / s;\n      out_axis[2] = q[2] / s;\n    } else {\n      out_axis[0] = 1;\n      out_axis[1] = 0;\n      out_axis[2] = 0;\n    }\n    return rad;\n  }\n  /**\n   * Gets the angular distance between two unit quaternions\n   * @category Static\n   *\n   * @param  {ReadonlyQuat} a     Origin unit quaternion\n   * @param  {ReadonlyQuat} b     Destination unit quaternion\n   * @return {Number}     Angle, in radians, between the two quaternions\n   */\n  static getAngle(a, b) {\n    const dotproduct = _Quat.dot(a, b);\n    return Math.acos(2 * dotproduct * dotproduct - 1);\n  }\n  /**\n   * Multiplies two quaternions.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = b[0];\n    const by = b[1];\n    const bz = b[2];\n    const bw = b[3];\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the X axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bx = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Y axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const by = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n  }\n  /**\n   * Rotates a quaternion by the given angle about the Z axis\n   * @category Static\n   *\n   * @param out - quat receiving operation result\n   * @param a - quat to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    rad *= 0.5;\n    const ax = a[0];\n    const ay = a[1];\n    const az = a[2];\n    const aw = a[3];\n    const bz = Math.sin(rad);\n    const bw = Math.cos(rad);\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n  }\n  /**\n   * Calculates the W component of a quat from the X, Y, and Z components.\n   * Assumes that quaternion is 1 unit in length.\n   * Any existing W component will be ignored.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate W component of\n   * @returns `out`\n   */\n  static calculateW(out, a) {\n    const x = a[0], y = a[1], z = a[2];\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1 - x * x - y * y - z * z));\n    return out;\n  }\n  /**\n   * Calculate the exponential of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @returns `out`\n   */\n  static exp(out, a) {\n    const x = a[0], y = a[1], z = a[2], w = a[3];\n    const r = Math.sqrt(x * x + y * y + z * z);\n    const et = Math.exp(w);\n    const s = r > 0 ? et * Math.sin(r) / r : 0;\n    out[0] = x * s;\n    out[1] = y * s;\n    out[2] = z * s;\n    out[3] = et * Math.cos(r);\n    return out;\n  }\n  /**\n   * Calculate the natural logarithm of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @returns `out`\n   */\n  static ln(out, a) {\n    const x = a[0], y = a[1], z = a[2], w = a[3];\n    const r = Math.sqrt(x * x + y * y + z * z);\n    const t = r > 0 ? Math.atan2(r, w) / r : 0;\n    out[0] = x * t;\n    out[1] = y * t;\n    out[2] = z * t;\n    out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n    return out;\n  }\n  /**\n   * Calculate the scalar power of a unit quaternion.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate the exponential of\n   * @param b - amount to scale the quaternion by\n   * @returns `out`\n   */\n  static pow(out, a, b) {\n    _Quat.ln(out, a);\n    _Quat.scale(out, out, b);\n    _Quat.exp(out, out);\n    return out;\n  }\n  /**\n   * Performs a spherical linear interpolation between two quat\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static slerp(out, a, b, t) {\n    const ax = a[0], ay = a[1], az = a[2], aw = a[3];\n    let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n    let scale0;\n    let scale1;\n    let cosom = ax * bx + ay * by + az * bz + aw * bw;\n    if (cosom < 0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    }\n    if (1 - cosom > GLM_EPSILON) {\n      const omega = Math.acos(cosom);\n      const sinom = Math.sin(omega);\n      scale0 = Math.sin((1 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      scale0 = 1 - t;\n      scale1 = t;\n    }\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    return out;\n  }\n  /**\n   * Generates a random unit quaternion\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @returns `out`\n   */\n  /* static random(out: QuatLike): QuatLike {\n      // Implementation of http://planning.cs.uiuc.edu/node198.html\n      // TODO: Calling random 3 times is probably not the fastest solution\n      let u1 = glMatrix.RANDOM();\n      let u2 = glMatrix.RANDOM();\n      let u3 = glMatrix.RANDOM();\n  \n      let sqrt1MinusU1 = Math.sqrt(1 - u1);\n      let sqrtU1 = Math.sqrt(u1);\n  \n      out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n      out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n      out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n      out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n      return out;\n    }*/\n  /**\n   * Calculates the inverse of a quat\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate inverse of\n   * @returns `out`\n   */\n  static invert(out, a) {\n    const a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    const invDot = dot ? 1 / dot : 0;\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a quat\n   * If the quaternion is normalized, this function is faster than `quat.inverse` and produces the same result.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quat to calculate conjugate of\n   * @returns `out`\n   */\n  static conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given 3x3 rotation matrix.\n   *\n   * NOTE: The resultant quaternion is not normalized, so you should be sure\n   * to re-normalize the quaternion yourself where necessary.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param m - rotation matrix\n   * @returns `out`\n   */\n  static fromMat3(out, m) {\n    const fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n    if (fTrace > 0) {\n      fRoot = Math.sqrt(fTrace + 1);\n      out[3] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[0] = (m[5] - m[7]) * fRoot;\n      out[1] = (m[6] - m[2]) * fRoot;\n      out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n      let i = 0;\n      if (m[4] > m[0]) {\n        i = 1;\n      }\n      if (m[8] > m[i * 3 + i]) {\n        i = 2;\n      }\n      const j = (i + 1) % 3;\n      const k = (i + 2) % 3;\n      fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1);\n      out[i] = 0.5 * fRoot;\n      fRoot = 0.5 / fRoot;\n      out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n      out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n      out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n    return out;\n  }\n  /**\n   * Creates a quaternion from the given euler angle x, y, z.\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param x - Angle to rotate around X axis in degrees.\n   * @param y - Angle to rotate around Y axis in degrees.\n   * @param z - Angle to rotate around Z axis in degrees.\n   * @param {'xyz'|'xzy'|'yxz'|'yzx'|'zxy'|'zyx'} order - Intrinsic order for conversion, default is zyx.\n   * @returns `out`\n   */\n  static fromEuler(out, x, y, z, order = _Quat.#DEFAULT_ANGLE_ORDER) {\n    const halfToRad = 0.5 * Math.PI / 180;\n    x *= halfToRad;\n    y *= halfToRad;\n    z *= halfToRad;\n    const sx = Math.sin(x);\n    const cx = Math.cos(x);\n    const sy = Math.sin(y);\n    const cy = Math.cos(y);\n    const sz = Math.sin(z);\n    const cz = Math.cos(z);\n    switch (order) {\n      case \"xyz\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"xzy\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      case \"yxz\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      case \"yzx\":\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"zxy\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n        break;\n      case \"zyx\":\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        break;\n      default:\n        throw new Error(`Unknown angle order ${order}`);\n    }\n    return out;\n  }\n  /**\n   * Returns a string representation of a quatenion\n   * @category Static\n   *\n   * @param a - vector to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Quat(${a.join(\", \")})`;\n  }\n  /**\n   * Creates a new quat initialized with values from an existing quaternion\n   * @category Static\n   *\n   * @param a - quaternion to clone\n   * @returns a new quaternion\n   */\n  static clone(a) {\n    return new _Quat(a);\n  }\n  /**\n   * Creates a new quat initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns a new quaternion\n   */\n  static fromValues(x, y, z, w) {\n    return new _Quat(x, y, z, w);\n  }\n  /**\n   * Copy the values from one quat to another\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the source quaternion\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Quat} to the given values\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param x - X component\n   * @param y - Y component\n   * @param z - Z component\n   * @param w - W component\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static set(out, x, y, z, w) {\n    return out;\n  }\n  /**\n   * Adds two {@link Quat}'s\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static add(out, a, b) {\n    return out;\n  }\n  /**\n   * Alias for {@link Quat.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Scales a quat by a scalar number\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - the vector to scale\n   * @param b - amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, scale) {\n    out[0] = a[0] * scale;\n    out[1] = a[1] * scale;\n    out[2] = a[2] * scale;\n    out[3] = a[3] * scale;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two quat's\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  /**\n   * Performs a linear interpolation between two quat's\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static lerp(out, a, b, t) {\n    return out;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Quat}\n   * @category Static\n   *\n   * @param a - quaternion to calculate length of\n   * @returns length of `a`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static magnitude(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mag(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Quat}\n   * @category Static\n   *\n   * @param a - quaternion to calculate squared length of\n   * @returns squared length of a\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static squaredLength(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Normalize a {@link Quat}\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - quaternion to normalize\n   * @returns `out`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static normalize(out, a) {\n    return out;\n  }\n  /**\n   * Returns whether the quaternions have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first quaternion.\n   * @param b - The second quaternion.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static exactEquals(a, b) {\n    return false;\n  }\n  /**\n   * Returns whether the quaternions have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are equal, false otherwise.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static equals(a, b) {\n    return false;\n  }\n  /**\n   * Sets a quaternion to represent the shortest rotation from one\n   * vector to another.\n   *\n   * Both vectors are assumed to be unit length.\n   * @category Static\n   *\n   * @param out - the receiving quaternion.\n   * @param a - the initial vector\n   * @param b - the destination vector\n   * @returns `out`\n   */\n  static rotationTo(out, a, b) {\n    const dot = Vec3.dot(a, b);\n    if (dot < -0.999999) {\n      Vec3.cross(_Quat.#TMP_VEC3, _Quat.#X_UNIT_VEC3, a);\n      if (Vec3.mag(_Quat.#TMP_VEC3) < 1e-6) {\n        Vec3.cross(_Quat.#TMP_VEC3, _Quat.#Y_UNIT_VEC3, a);\n      }\n      Vec3.normalize(_Quat.#TMP_VEC3, _Quat.#TMP_VEC3);\n      _Quat.setAxisAngle(out, _Quat.#TMP_VEC3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      Vec3.cross(_Quat.#TMP_VEC3, a, b);\n      out[0] = _Quat.#TMP_VEC3[0];\n      out[1] = _Quat.#TMP_VEC3[1];\n      out[2] = _Quat.#TMP_VEC3[2];\n      out[3] = 1 + dot;\n      return _Quat.normalize(out, out);\n    }\n  }\n  /**\n   * Performs a spherical linear interpolation with two control points\n   * @category Static\n   *\n   * @param out - the receiving quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param c - the third operand\n   * @param d - the fourth operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static sqlerp(out, a, b, c, d, t) {\n    _Quat.slerp(_Quat.#TMP_QUAT1, a, d, t);\n    _Quat.slerp(_Quat.#TMP_QUAT2, b, c, t);\n    _Quat.slerp(out, _Quat.#TMP_QUAT1, _Quat.#TMP_QUAT2, 2 * t * (1 - t));\n    return out;\n  }\n  /**\n   * Sets the specified quaternion with values corresponding to the given\n   * axes. Each axis is a vec3 and is expected to be unit length and\n   * perpendicular to all other specified axes.\n   * @category Static\n   *\n   * @param out - The receiving quaternion\n   * @param view - the vector representing the viewing direction\n   * @param right - the vector representing the local `right` direction\n   * @param up - the vector representing the local `up` direction\n   * @returns `out`\n   */\n  static setAxes(out, view, right, up) {\n    _Quat.#TMP_MAT3[0] = right[0];\n    _Quat.#TMP_MAT3[3] = right[1];\n    _Quat.#TMP_MAT3[6] = right[2];\n    _Quat.#TMP_MAT3[1] = up[0];\n    _Quat.#TMP_MAT3[4] = up[1];\n    _Quat.#TMP_MAT3[7] = up[2];\n    _Quat.#TMP_MAT3[2] = -view[0];\n    _Quat.#TMP_MAT3[5] = -view[1];\n    _Quat.#TMP_MAT3[8] = -view[2];\n    return _Quat.normalize(out, _Quat.fromMat3(out, _Quat.#TMP_MAT3));\n  }\n};\nQuat.set = Vec4.set;\nQuat.add = Vec4.add;\nQuat.lerp = Vec4.lerp;\nQuat.normalize = Vec4.normalize;\nQuat.squaredLength = Vec4.squaredLength;\nQuat.sqrLen = Vec4.squaredLength;\nQuat.exactEquals = Vec4.exactEquals;\nQuat.equals = Vec4.equals;\nQuat.magnitude = Vec4.magnitude;\nQuat.prototype.mul = Quat.prototype.multiply;\nQuat.mul = Quat.multiply;\nQuat.mag = Quat.magnitude;\nQuat.length = Quat.magnitude;\nQuat.len = Quat.magnitude;\nvar Quat2 = class _Quat2 extends Float32Array {\n  // Temporary variables to prevent repeated allocations in the algorithms within Quat2.\n  // These are declared as TypedArrays to aid in tree-shaking.\n  static #TMP_QUAT = new Float32Array(4);\n  static #TMP_VEC3 = new Float32Array(3);\n  /**\n   * Create a {@link Quat2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 8:\n        super(values);\n        break;\n      case 2:\n        super(values[0], values[1], 8);\n        break;\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v, v, v, v, v, v, v]);\n        } else {\n          super(v, 0, 8);\n        }\n        break;\n      }\n      default:\n        super(8);\n        this[3] = 1;\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  /**\n   * A string representation of `this`\n   * Equivalent to `Quat2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Quat2.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Quat2} into `this`.\n   * @category Methods\n   *\n   * @param a the source dual quaternion\n   * @returns `this`\n   */\n  copy(a) {\n    super.set(a);\n    return this;\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Quat2}.\n   */\n  static get BYTE_LENGTH() {\n    return 8 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new identity {@link Quat2}\n   * @category Static\n   *\n   * @returns a new dual quaternion [real -> rotation, dual -> translation]\n   */\n  static create() {\n    return new _Quat2();\n  }\n  /**\n   * Creates a {@link Quat2} quat initialized with values from an existing quaternion\n   * @category Static\n   *\n   * @param a - dual quaternion to clone\n   * @returns a new dual quaternion\n   */\n  static clone(a) {\n    return new _Quat2(a);\n  }\n  /**\n   * Creates a new {@link Quat2}  initialized with the given values\n   * @category Static\n   *\n   * @param x1 - 1st X component\n   * @param y1 - 1st Y component\n   * @param z1 - 1st Z component\n   * @param w1 - 1st W component\n   * @param x2 - 2nd X component\n   * @param y2 - 2nd Y component\n   * @param z2 - 2nd Z component\n   * @param w2 - 2nd W component\n   * @returns a new dual quaternion\n   */\n  static fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n    return new _Quat2(x1, y1, z1, w1, x2, y2, z2, w2);\n  }\n  /**\n   * Creates a new {@link Quat2} from the given values (quat and translation)\n   * @category Static\n   *\n   * @param x1 - X component (rotation)\n   * @param y1 - Y component (rotation)\n   * @param z1 - Z component (rotation)\n   * @param w1 - W component (rotation)\n   * @param x2 - X component (translation)\n   * @param y2 - Y component (translation)\n   * @param z2 - Z component (translation)\n   * @returns a new dual quaternion\n   */\n  static fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n    const ax = x2 * 0.5;\n    const ay = y2 * 0.5;\n    const az = z2 * 0.5;\n    return new _Quat2(\n      x1,\n      y1,\n      z1,\n      w1,\n      ax * w1 + ay * z1 - az * y1,\n      ay * w1 + az * x1 - ax * z1,\n      az * w1 + ax * y1 - ay * x1,\n      -ax * x1 - ay * y1 - az * z1\n    );\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion and a translation\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param q - a normalized quaternion\n   * @param t - translation vector\n   * @returns `out`\n   */\n  static fromRotationTranslation(out, q, t) {\n    const ax = t[0] * 0.5;\n    const ay = t[1] * 0.5;\n    const az = t[2] * 0.5;\n    const bx = q[0];\n    const by = q[1];\n    const bz = q[2];\n    const bw = q[3];\n    out[0] = bx;\n    out[1] = by;\n    out[2] = bz;\n    out[3] = bw;\n    out[4] = ax * bw + ay * bz - az * by;\n    out[5] = ay * bw + az * bx - ax * bz;\n    out[6] = az * bw + ax * by - ay * bx;\n    out[7] = -ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a translation\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param t - translation vector\n   * @returns `out`\n   */\n  static fromTranslation(out, t) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = t[0] * 0.5;\n    out[5] = t[1] * 0.5;\n    out[6] = t[2] * 0.5;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param q - a normalized quaternion\n   * @returns `out`\n   */\n  static fromRotation(out, q) {\n    out[0] = q[0];\n    out[1] = q[1];\n    out[2] = q[2];\n    out[3] = q[3];\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Sets a {@link Quat2} from a quaternion\n   * @category Static\n   *\n   * @param out - dual quaternion receiving operation result\n   * @param a - the matrix\n   * @returns `out`\n   */\n  static fromMat4(out, a) {\n    Mat4.getRotation(_Quat2.#TMP_QUAT, a);\n    Mat4.getTranslation(_Quat2.#TMP_VEC3, a);\n    return _Quat2.fromRotationTranslation(out, _Quat2.#TMP_QUAT, _Quat2.#TMP_VEC3);\n  }\n  /**\n   * Copy the values from one {@link Quat2} to another\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the source dual quaternion\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Set a {@link Quat2} to the identity dual quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @returns `out`\n   */\n  static identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    return out;\n  }\n  /**\n   * Set the components of a {@link Quat2} to the given values\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param x1 - 1st X component\n   * @param y1 - 1st Y component\n   * @param z1 - 1st Z component\n   * @param w1 - 1st W component\n   * @param x2 - 2nd X component\n   * @param y2 - 2nd Y component\n   * @param z2 - 2nd Z component\n   * @param w2 - 2nd W component\n   * @returns `out`\n   */\n  static set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n    out[0] = x1;\n    out[1] = y1;\n    out[2] = z1;\n    out[3] = w1;\n    out[4] = x2;\n    out[5] = y2;\n    out[6] = z2;\n    out[7] = w2;\n    return out;\n  }\n  /**\n   * Gets the real part of a dual quat\n   * @category Static\n   *\n   * @param out - real part\n   * @param a - Dual Quaternion\n   * @return `out`\n   */\n  static getReal(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Gets the dual part of a dual quat\n   * @category Static\n   *\n   * @param out - dual part\n   * @param a - Dual Quaternion\n   * @return `out`\n   */\n  static getDual(out, a) {\n    out[0] = a[4];\n    out[1] = a[5];\n    out[2] = a[6];\n    out[3] = a[7];\n    return out;\n  }\n  /**\n   * Set the real component of a {@link Quat2} to the given quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - a quaternion representing the real part\n   * @return `out`\n   */\n  static setReal(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n  }\n  /**\n   * Set the dual component of a {@link Quat2} to the given quaternion\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - a quaternion representing the dual part\n   * @return `out`\n   */\n  static setDual(out, a) {\n    out[4] = a[0];\n    out[5] = a[1];\n    out[6] = a[2];\n    out[7] = a[3];\n    return out;\n  }\n  /**\n   * Gets the translation of a normalized {@link Quat2}\n   * @category Static\n   *\n   * @param out - the receiving translation vector\n   * @param a - Dual Quaternion to be decomposed\n   * @return `out`\n   */\n  static getTranslation(out, a) {\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const bx = -a[0];\n    const by = -a[1];\n    const bz = -a[2];\n    const bw = a[3];\n    out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n    return out;\n  }\n  /**\n   * Translates a {@link Quat2} by the given vector\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to translate\n   * @param v - vector to translate by\n   * @returns `out`\n   */\n  static translate(out, a, v) {\n    const ax1 = a[0];\n    const ay1 = a[1];\n    const az1 = a[2];\n    const aw1 = a[3];\n    const bx1 = v[0] * 0.5;\n    const by1 = v[1] * 0.5;\n    const bz1 = v[2] * 0.5;\n    const ax2 = a[4];\n    const ay2 = a[5];\n    const az2 = a[6];\n    const aw2 = a[7];\n    out[0] = ax1;\n    out[1] = ay1;\n    out[2] = az1;\n    out[3] = aw1;\n    out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n    out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n    out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n    out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the X axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateX(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateX(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the Y axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateY(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateY(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around the Z axis\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param rad - angle (in radians) to rotate\n   * @returns `out`\n   */\n  static rotateZ(out, a, rad) {\n    let bx = -a[0];\n    let by = -a[1];\n    let bz = -a[2];\n    let bw = a[3];\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n    const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n    const az1 = az * bw + aw * bz + ax * by - ay * bx;\n    const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n    Quat.rotateZ(out, a, rad);\n    bx = out[0];\n    by = out[1];\n    bz = out[2];\n    bw = out[3];\n    out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} by a given quaternion (a * q)\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param q - quaternion to rotate by\n   * @returns `out`\n   */\n  static rotateByQuatAppend(out, a, q) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n    ax = a[4];\n    ay = a[5];\n    az = a[6];\n    aw = a[7];\n    out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n    out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n    out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n    out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} by a given quaternion (q * a)\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param q - quaternion to rotate by\n   * @param a - the dual quaternion to rotate\n   * @returns `out`\n   */\n  static rotateByQuatPrepend(out, q, a) {\n    const qx = q[0];\n    const qy = q[1];\n    const qz = q[2];\n    const qw = q[3];\n    let bx = a[0];\n    let by = a[1];\n    let bz = a[2];\n    let bw = a[3];\n    out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n    bx = a[4];\n    by = a[5];\n    bz = a[6];\n    bw = a[7];\n    out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n    out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n    out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n    out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n    return out;\n  }\n  /**\n   * Rotates a {@link Quat2} around a given axis. Does the normalization automatically\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the dual quaternion to rotate\n   * @param axis - the axis to rotate around\n   * @param rad - how far the rotation should be\n   * @returns `out`\n   */\n  static rotateAroundAxis(out, a, axis, rad) {\n    if (Math.abs(rad) < GLM_EPSILON) {\n      return _Quat2.copy(out, a);\n    }\n    const axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n    rad *= 0.5;\n    const s = Math.sin(rad);\n    const bx = s * axis[0] / axisLength;\n    const by = s * axis[1] / axisLength;\n    const bz = s * axis[2] / axisLength;\n    const bw = Math.cos(rad);\n    const ax1 = a[0];\n    const ay1 = a[1];\n    const az1 = a[2];\n    const aw1 = a[3];\n    out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n    out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n    out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n    out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n    const ax = a[4];\n    const ay = a[5];\n    const az = a[6];\n    const aw = a[7];\n    out[4] = ax * bw + aw * bx + ay * bz - az * by;\n    out[5] = ay * bw + aw * by + az * bx - ax * bz;\n    out[6] = az * bw + aw * bz + ax * by - ay * bx;\n    out[7] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n  }\n  /**\n   * Adds two {@link Quat2}s\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    return out;\n  }\n  /**\n   * Multiplies two {@link Quat2}s\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns {quat2} out\n   */\n  static multiply(out, a, b) {\n    const ax0 = a[0];\n    const ay0 = a[1];\n    const az0 = a[2];\n    const aw0 = a[3];\n    const bx1 = b[4];\n    const by1 = b[5];\n    const bz1 = b[6];\n    const bw1 = b[7];\n    const ax1 = a[4];\n    const ay1 = a[5];\n    const az1 = a[6];\n    const aw1 = a[7];\n    const bx0 = b[0];\n    const by0 = b[1];\n    const bz0 = b[2];\n    const bw0 = b[3];\n    out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n    out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n    out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n    out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n    out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n    out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n    out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n    out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n    return out;\n  }\n  /**\n   * Alias for {@link Quat2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return out;\n  }\n  /**\n   * Scales a {@link Quat2} by a scalar value\n   * @category Static\n   *\n   * @param out - the receiving dual quaterion\n   * @param a - the dual quaternion to scale\n   * @param b - scalar value to scale the dual quaterion by\n   * @returns `out`\n   */\n  static scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Quat2}s (The dot product of the real parts)\n   * @category Static\n   *\n   * @param a - the first operand\n   * @param b - the second operand\n   * @returns dot product of a and b\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dot(a, b) {\n    return 0;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Quat2}s\n   * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when `t = 0.5`)\n   * @category Static\n   *\n   * @param out - the receiving dual quat\n   * @param a - the first operand\n   * @param b - the second operand\n   * @param t - interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const mt = 1 - t;\n    if (_Quat2.dot(a, b) < 0) {\n      t = -t;\n    }\n    out[0] = a[0] * mt + b[0] * t;\n    out[1] = a[1] * mt + b[1] * t;\n    out[2] = a[2] * mt + b[2] * t;\n    out[3] = a[3] * mt + b[3] * t;\n    out[4] = a[4] * mt + b[4] * t;\n    out[5] = a[5] * mt + b[5] * t;\n    out[6] = a[6] * mt + b[6] * t;\n    out[7] = a[7] * mt + b[7] * t;\n    return out;\n  }\n  /**\n   * Calculates the inverse of a {@link Quat2}. If they are normalized, conjugate is cheaper\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quat to calculate inverse of\n   * @returns `out`\n   */\n  static invert(out, a) {\n    const sqlen = _Quat2.squaredLength(a);\n    out[0] = -a[0] / sqlen;\n    out[1] = -a[1] / sqlen;\n    out[2] = -a[2] / sqlen;\n    out[3] = a[3] / sqlen;\n    out[4] = -a[4] / sqlen;\n    out[5] = -a[5] / sqlen;\n    out[6] = -a[6] / sqlen;\n    out[7] = a[7] / sqlen;\n    return out;\n  }\n  /**\n   * Calculates the conjugate of a {@link Quat2}. If the dual quaternion is normalized, this function is faster than\n   * {@link Quat2.invert} and produces the same result.\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quaternion to calculate conjugate of\n   * @returns `out`\n   */\n  static conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    out[4] = -a[4];\n    out[5] = -a[5];\n    out[6] = -a[6];\n    out[7] = a[7];\n    return out;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to calculate length of\n   * @returns length of `a`\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static magnitude(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Quat2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Quat2.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to calculate squared length of\n   * @returns squared length of a\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static squaredLength(a) {\n    return 0;\n  }\n  /**\n   * Alias for {@link Quat2.squaredLength}\n   * @category Static\n   */\n  static sqrLen(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Normalize a {@link Quat2}\n   * @category Static\n   *\n   * @param out - the receiving dual quaternion\n   * @param a - dual quaternion to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    let magnitude = _Quat2.squaredLength(a);\n    if (magnitude > 0) {\n      magnitude = Math.sqrt(magnitude);\n      const a0 = a[0] / magnitude;\n      const a1 = a[1] / magnitude;\n      const a2 = a[2] / magnitude;\n      const a3 = a[3] / magnitude;\n      const b0 = a[4];\n      const b1 = a[5];\n      const b2 = a[6];\n      const b3 = a[7];\n      const a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n      out[0] = a0;\n      out[1] = a1;\n      out[2] = a2;\n      out[3] = a3;\n      out[4] = (b0 - a0 * a_dot_b) / magnitude;\n      out[5] = (b1 - a1 * a_dot_b) / magnitude;\n      out[6] = (b2 - a2 * a_dot_b) / magnitude;\n      out[7] = (b3 - a3 * a_dot_b) / magnitude;\n    }\n    return out;\n  }\n  /**\n   * Returns a string representation of a {@link Quat2}\n   * @category Static\n   *\n   * @param a - dual quaternion to represent as a string\n   * @returns string representation of the vector\n   */\n  static str(a) {\n    return `Quat2(${a.join(\", \")})`;\n  }\n  /**\n   * Returns whether the {@link Quat2}s have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first dual quaternion.\n   * @param b - The second dual quaternion.\n   * @returns True if the dual quaternions are equal, false otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n  }\n  /**\n   * Returns whether the {@link Quat2}s have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first dual quaternion.\n   * @param b - The second dual quaternion.\n   * @returns True if the dual quaternions are equal, false otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const a2 = a[2];\n    const a3 = a[3];\n    const a4 = a[4];\n    const a5 = a[5];\n    const a6 = a[6];\n    const a7 = a[7];\n    const b0 = b[0];\n    const b1 = b[1];\n    const b2 = b[2];\n    const b3 = b[3];\n    const b4 = b[4];\n    const b5 = b[5];\n    const b6 = b[6];\n    const b7 = b[7];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= GLM_EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= GLM_EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= GLM_EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= GLM_EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= GLM_EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= GLM_EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7));\n  }\n};\nQuat2.dot = Quat.dot;\nQuat2.squaredLength = Quat.squaredLength;\nQuat2.sqrLen = Quat.squaredLength;\nQuat2.mag = Quat.magnitude;\nQuat2.length = Quat.magnitude;\nQuat2.len = Quat.magnitude;\nQuat2.mul = Quat2.multiply;\nvar Vec2 = class _Vec2 extends Float32Array {\n  /**\n   * Create a {@link Vec2}.\n   *\n   * @category Constructor\n   */\n  constructor(...values) {\n    switch (values.length) {\n      case 2: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, values[1]]);\n        } else {\n          super(v, values[1], 2);\n        }\n        break;\n      }\n      case 1: {\n        const v = values[0];\n        if (typeof v === \"number\") {\n          super([v, v]);\n        } else {\n          super(v, 0, 2);\n        }\n        break;\n      }\n      default:\n        super(2);\n        break;\n    }\n  }\n  // ============\n  // Accessors\n  // ============\n  // Getters and setters to make component access read better.\n  // These are likely to be a little bit slower than direct array access.\n  /**\n   * The x component of the vector. Equivalent to `this[0];`\n   * @category Vector Components\n   */\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = value;\n  }\n  /**\n   * The y component of the vector. Equivalent to `this[1];`\n   * @category Vector Components\n   */\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = value;\n  }\n  // Alternate set of getters and setters in case this is being used to define\n  // a color.\n  /**\n   * The r component of the vector. Equivalent to `this[0];`\n   * @category Color Components\n   */\n  get r() {\n    return this[0];\n  }\n  set r(value) {\n    this[0] = value;\n  }\n  /**\n   * The g component of the vector. Equivalent to `this[1];`\n   * @category Color Components\n   */\n  get g() {\n    return this[1];\n  }\n  set g(value) {\n    this[1] = value;\n  }\n  /**\n   * The magnitude (length) of this.\n   * Equivalent to `Vec2.magnitude(this);`\n   *\n   * Magnitude is used because the `length` attribute is already defined by\n   * TypedArrays to mean the number of elements in the array.\n   *\n   * @category Accessors\n   */\n  get magnitude() {\n    return Math.hypot(this[0], this[1]);\n  }\n  /**\n   * Alias for {@link Vec2.magnitude}\n   *\n   * @category Accessors\n   */\n  get mag() {\n    return this.magnitude;\n  }\n  /**\n   * The squared magnitude (length) of `this`.\n   * Equivalent to `Vec2.squaredMagnitude(this);`\n   *\n   * @category Accessors\n   */\n  get squaredMagnitude() {\n    const x = this[0];\n    const y = this[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.squaredMagnitude}\n   *\n   * @category Accessors\n   */\n  get sqrMag() {\n    return this.squaredMagnitude;\n  }\n  /**\n   * A string representation of `this`\n   * Equivalent to `Vec2.str(this);`\n   *\n   * @category Accessors\n   */\n  get str() {\n    return _Vec2.str(this);\n  }\n  // ===================\n  // Instances methods\n  // ===================\n  /**\n   * Copy the values from another {@link Vec2} into `this`.\n   * @category Methods\n   *\n   * @param a the source vector\n   * @returns `this`\n   */\n  copy(a) {\n    this.set(a);\n    return this;\n  }\n  // Instead of zero(), use a.fill(0) for instances;\n  /**\n   * Adds a {@link Vec2} to `this`.\n   * Equivalent to `Vec2.add(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @returns `this`\n   */\n  add(b) {\n    this[0] += b[0];\n    this[1] += b[1];\n    return this;\n  }\n  /**\n   * Subtracts a {@link Vec2} from `this`.\n   * Equivalent to `Vec2.subtract(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to subtract from `this`\n   * @returns `this`\n   */\n  subtract(b) {\n    this[0] -= b[0];\n    this[1] -= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.subtract}\n   * @category Methods\n   */\n  sub(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Multiplies `this` by a {@link Vec2}.\n   * Equivalent to `Vec2.multiply(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to multiply `this` by\n   * @returns `this`\n   */\n  multiply(b) {\n    this[0] *= b[0];\n    this[1] *= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.multiply}\n   * @category Methods\n   */\n  mul(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Divides `this` by a {@link Vec2}.\n   * Equivalent to `Vec2.divide(this, this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to divide `this` by\n   * @returns `this`\n   */\n  divide(b) {\n    this[0] /= b[0];\n    this[1] /= b[1];\n    return this;\n  }\n  /**\n   * Alias for {@link Vec2.divide}\n   * @category Methods\n   */\n  div(b) {\n    return this;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Scales `this` by a scalar number.\n   * Equivalent to `Vec2.scale(this, this, b);`\n   * @category Methods\n   *\n   * @param b - Amount to scale `this` by\n   * @returns `this`\n   */\n  scale(b) {\n    this[0] *= b;\n    this[1] *= b;\n    return this;\n  }\n  /**\n   * Calculates `this` scaled by a scalar value then adds the result to `this`.\n   * Equivalent to `Vec2.scaleAndAdd(this, this, b, scale);`\n   * @category Methods\n   *\n   * @param b - The vector to add to `this`\n   * @param scale - The amount to scale `b` by before adding\n   * @returns `this`\n   */\n  scaleAndAdd(b, scale) {\n    this[0] += b[0] * scale;\n    this[1] += b[1] * scale;\n    return this;\n  }\n  /**\n   * Calculates the Euclidean distance between another {@link Vec2} and `this`.\n   * Equivalent to `Vec2.distance(this, b);`\n   * @category Methods\n   *\n   * @param b - The vector to calculate the distance to\n   * @returns Distance between `this` and `b`\n   */\n  distance(b) {\n    return _Vec2.distance(this, b);\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Methods\n   */\n  dist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared Euclidean distance between another {@link Vec2} and `this`.\n   * Equivalent to `Vec2.squaredDistance(this, b);`\n   * @category Methods\n   *\n   * @param b The vector to calculate the squared distance to\n   * @returns Squared distance between `this` and `b`\n   */\n  squaredDistance(b) {\n    return _Vec2.squaredDistance(this, b);\n  }\n  /**\n   * Alias for {@link Vec2.squaredDistance}\n   * @category Methods\n   */\n  sqrDist(b) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Negates the components of `this`.\n   * Equivalent to `Vec2.negate(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  negate() {\n    this[0] *= -1;\n    this[1] *= -1;\n    return this;\n  }\n  /**\n   * Inverts the components of `this`.\n   * Equivalent to `Vec2.inverse(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  invert() {\n    this[0] = 1 / this[0];\n    this[1] = 1 / this[1];\n    return this;\n  }\n  /**\n   * Sets each component of `this` to it's absolute value.\n   * Equivalent to `Vec2.abs(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  abs() {\n    this[0] = Math.abs(this[0]);\n    this[1] = Math.abs(this[1]);\n    return this;\n  }\n  /**\n   * Calculates the dot product of this and another {@link Vec2}.\n   * Equivalent to `Vec2.dot(this, b);`\n   * @category Methods\n   *\n   * @param b - The second operand\n   * @returns Dot product of `this` and `b`\n   */\n  dot(b) {\n    return this[0] * b[0] + this[1] * b[1];\n  }\n  /**\n   * Normalize `this`.\n   * Equivalent to `Vec2.normalize(this, this);`\n   * @category Methods\n   *\n   * @returns `this`\n   */\n  normalize() {\n    return _Vec2.normalize(this, this);\n  }\n  // ===================\n  // Static accessors\n  // ===================\n  /**\n   * @category Static\n   *\n   * @returns The number of bytes in a {@link Vec2}.\n   */\n  static get BYTE_LENGTH() {\n    return 2 * Float32Array.BYTES_PER_ELEMENT;\n  }\n  // ===================\n  // Static methods\n  // ===================\n  /**\n   * Creates a new, empty {@link Vec2}\n   * @category Static\n   *\n   * @returns A new 2D vector\n   */\n  static create() {\n    return new _Vec2();\n  }\n  /**\n   * Creates a new {@link Vec2} initialized with values from an existing vector\n   * @category Static\n   *\n   * @param a - Vector to clone\n   * @returns A new 2D vector\n   */\n  static clone(a) {\n    return new _Vec2(a);\n  }\n  /**\n   * Creates a new {@link Vec2} initialized with the given values\n   * @category Static\n   *\n   * @param x - X component\n   * @param y - Y component\n   * @returns A new 2D vector\n   */\n  static fromValues(x, y) {\n    return new _Vec2(x, y);\n  }\n  /**\n   * Copy the values from one {@link Vec2} to another\n   * @category Static\n   *\n   * @param out - the receiving vector\n   * @param a - The source vector\n   * @returns `out`\n   */\n  static copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n  }\n  /**\n   * Set the components of a {@link Vec2} to the given values\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param x - X component\n   * @param y - Y component\n   * @returns `out`\n   */\n  static set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n  }\n  /**\n   * Adds two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n  }\n  /**\n   * Subtracts vector b from vector a\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.subtract}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sub(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Multiplies two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.multiply}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static mul(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Divides two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n  }\n  /**\n   * Alias for {@link Vec2.divide}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static div(out, a, b) {\n    return [0, 0];\n  }\n  /**\n   * Math.ceil the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to ceil\n   * @returns `out`\n   */\n  static ceil(out, a) {\n    out[0] = Math.ceil(a[0]);\n    out[1] = Math.ceil(a[1]);\n    return out;\n  }\n  /**\n   * Math.floor the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to floor\n   * @returns `out`\n   */\n  static floor(out, a) {\n    out[0] = Math.floor(a[0]);\n    out[1] = Math.floor(a[1]);\n    return out;\n  }\n  /**\n   * Returns the minimum of two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static min(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Returns the maximum of two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static max(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n  }\n  /**\n   * Math.round the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to round\n   * @returns `out`\n   */\n  static round(out, a) {\n    out[0] = Math.round(a[0]);\n    out[1] = Math.round(a[1]);\n    return out;\n  }\n  /**\n   * Scales a {@link Vec2} by a scalar number\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to scale\n   * @param b - Amount to scale the vector by\n   * @returns `out`\n   */\n  static scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n  }\n  /**\n   * Adds two Vec2's after scaling the second operand by a scalar value\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @param scale - The amount to scale b by before adding\n   * @returns `out`\n   */\n  static scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + b[0] * scale;\n    out[1] = a[1] + b[1] * scale;\n    return out;\n  }\n  /**\n   * Calculates the Euclidean distance between two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns distance between `a` and `b`\n   */\n  static distance(a, b) {\n    return Math.hypot(b[0] - a[0], b[1] - a[1]);\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static dist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the squared Euclidean distance between two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns Squared distance between `a` and `b`\n   */\n  static squaredDistance(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.distance}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrDist(a, b) {\n    return 0;\n  }\n  /**\n   * Calculates the magnitude (length) of a {@link Vec2}\n   * @category Static\n   *\n   * @param a - Vector to calculate magnitude of\n   * @returns Magnitude of a\n   */\n  static magnitude(a) {\n    const x = a[0];\n    const y = a[1];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   */\n  static mag(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n   *\n   * @param a - vector to calculate length of\n   * @returns length of a\n   */\n  // Length conflicts with Function.length\n  static length(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Alias for {@link Vec2.magnitude}\n   * @category Static\n   * @deprecated Use {@link Vec2.mag}\n   */\n  static len(a) {\n    return 0;\n  }\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  /**\n   * Calculates the squared length of a {@link Vec2}\n   * @category Static\n   *\n   * @param a - Vector to calculate squared length of\n   * @returns Squared length of a\n   */\n  static squaredLength(a) {\n    const x = a[0];\n    const y = a[1];\n    return x * x + y * y;\n  }\n  /**\n   * Alias for {@link Vec2.squaredLength}\n   * @category Static\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static sqrLen(a, b) {\n    return 0;\n  }\n  /**\n   * Negates the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to negate\n   * @returns `out`\n   */\n  static negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n  }\n  /**\n   * Returns the inverse of the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to invert\n   * @returns `out`\n   */\n  static inverse(out, a) {\n    out[0] = 1 / a[0];\n    out[1] = 1 / a[1];\n    return out;\n  }\n  /**\n   * Returns the absolute value of the components of a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to compute the absolute values of\n   * @returns `out`\n   */\n  static abs(out, a) {\n    out[0] = Math.abs(a[0]);\n    out[1] = Math.abs(a[1]);\n    return out;\n  }\n  /**\n   * Normalize a {@link Vec2}\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - Vector to normalize\n   * @returns `out`\n   */\n  static normalize(out, a) {\n    const x = a[0];\n    const y = a[1];\n    let len = x * x + y * y;\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n  }\n  /**\n   * Calculates the dot product of two {@link Vec2}s\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns Dot product of `a` and `b`\n   */\n  static dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  /**\n   * Computes the cross product of two {@link Vec2}s\n   * Note that the cross product must by definition produce a 3D vector.\n   * For this reason there is also not instance equivalent for this function.\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns `out`\n   */\n  static cross(out, a, b) {\n    const z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n  }\n  /**\n   * Performs a linear interpolation between two {@link Vec2}s\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @param a - The first operand\n   * @param b - The second operand\n   * @param t - Interpolation amount, in the range [0-1], between the two inputs\n   * @returns `out`\n   */\n  static lerp(out, a, b, t) {\n    const ax = a[0];\n    const ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat2}\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat2(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat2d}\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat2d(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat3}\n   * 3rd vector component is implicitly '1'\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat3(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n  }\n  /**\n   * Transforms the {@link Vec2} with a {@link Mat4}\n   * 3rd vector component is implicitly '0'\n   * 4th vector component is implicitly '1'\n   *\n   * @param out - The receiving vector\n   * @param a - The vector to transform\n   * @param m - Matrix to transform with\n   * @returns `out`\n   * @category Static\n   */\n  static transformMat4(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n  }\n  /**\n   * Rotate a 2D vector\n   * @category Static\n   *\n   * @param out - The receiving {@link Vec2}\n   * @param a - The {@link Vec2} point to rotate\n   * @param b - The origin of the rotation\n   * @param rad - The angle of rotation in radians\n   * @returns `out`\n   */\n  static rotate(out, a, b, rad) {\n    const p0 = a[0] - b[0];\n    const p1 = a[1] - b[1];\n    const sinC = Math.sin(rad);\n    const cosC = Math.cos(rad);\n    out[0] = p0 * cosC - p1 * sinC + b[0];\n    out[1] = p0 * sinC + p1 * cosC + b[1];\n    return out;\n  }\n  /**\n   * Get the angle between two 2D vectors\n   * @category Static\n   *\n   * @param a - The first operand\n   * @param b - The second operand\n   * @returns The angle in radians\n   */\n  static angle(a, b) {\n    const x1 = a[0];\n    const y1 = a[1];\n    const x2 = b[0];\n    const y2 = b[1];\n    const mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2);\n    const cosine = mag && (x1 * x2 + y1 * y2) / mag;\n    return Math.acos(Math.min(Math.max(cosine, -1), 1));\n  }\n  /**\n   * Set the components of a {@link Vec2} to zero\n   * @category Static\n   *\n   * @param out - The receiving vector\n   * @returns `out`\n   */\n  static zero(out) {\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n  }\n  /**\n   * Returns whether the vectors have exactly the same elements in the same position (when compared with ===)\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns `true` if the vectors components are ===, `false` otherwise.\n   */\n  static exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n  }\n  /**\n   * Returns whether the vectors have approximately the same elements in the same position.\n   * @category Static\n   *\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns `true` if the vectors are approximately equal, `false` otherwise.\n   */\n  static equals(a, b) {\n    const a0 = a[0];\n    const a1 = a[1];\n    const b0 = b[0];\n    const b1 = b[1];\n    return Math.abs(a0 - b0) <= GLM_EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= GLM_EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1));\n  }\n  /**\n   * Returns a string representation of a vector\n   * @category Static\n   *\n   * @param a - Vector to represent as a string\n   * @returns String representation of the vector\n   */\n  static str(a) {\n    return `Vec2(${a.join(\", \")})`;\n  }\n};\nVec2.prototype.sub = Vec2.prototype.subtract;\nVec2.prototype.mul = Vec2.prototype.multiply;\nVec2.prototype.div = Vec2.prototype.divide;\nVec2.prototype.dist = Vec2.prototype.distance;\nVec2.prototype.sqrDist = Vec2.prototype.squaredDistance;\nVec2.sub = Vec2.subtract;\nVec2.mul = Vec2.multiply;\nVec2.div = Vec2.divide;\nVec2.dist = Vec2.distance;\nVec2.sqrDist = Vec2.squaredDistance;\nVec2.sqrLen = Vec2.squaredLength;\nVec2.mag = Vec2.magnitude;\nVec2.length = Vec2.magnitude;\nVec2.len = Vec2.magnitude;\n\nexport { Mat2, Mat2d, Mat3, Mat4, Quat, Quat2, Vec2, Vec3, Vec4 };\n//# sourceMappingURL=index.js.map\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\nexport { lerp };\n//# sourceMappingURL=index.js.map\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import * as svelteEasingFunc from 'svelte/easing';\n\n/**\n * Defines a read-only list of Svelte easing function names.\n *\n * @type {Readonly<import('./types').EasingFunctionName[]>}\n */\nconst easingList = Object.freeze([\n   'backIn',\n   'backInOut',\n   'backOut',\n   'bounceIn',\n   'bounceInOut',\n   'bounceOut',\n   'circIn',\n   'circInOut',\n   'circOut',\n   'cubicIn',\n   'cubicInOut',\n   'cubicOut',\n   'elasticIn',\n   'elasticInOut',\n   'elasticOut',\n   'expoIn',\n   'expoInOut',\n   'expoOut',\n   'linear',\n   'quadIn',\n   'quadInOut',\n   'quadOut',\n   'quartIn',\n   'quartInOut',\n   'quartOut',\n   'quintIn',\n   'quintInOut',\n   'quintOut',\n   'sineIn',\n   'sineInOut',\n   'sineOut'\n]);\n\n/**\n * @type {Readonly<{ [key in import('./types').EasingFunctionName]: import('#runtime/svelte/easing').EasingFunction }>}\n */\nconst easingFunc = svelteEasingFunc;\n\n/**\n * Performs a lookup for standard Svelte easing functions by name. For convenience if passing in a function it is\n * returned verbatim.\n *\n * @param {import('./types').EasingReference} easingRef - The name of a standard Svelte easing function or a supplied\n *        easing function.\n *\n * @param {object}   [options] - Optional parameters.\n *\n * @param {import('./types').EasingFunctionName | false} [options.default='linear'] - A default easing function by\n *        name to return. When specified as `false` no default fallback easing function is selected. The default value\n *        is `linear`.\n *\n * @returns {import('#runtime/svelte/easing').EasingFunction} The requested easing function.\n */\nfunction getEasingFunc(easingRef, options)\n{\n   if (typeof easingRef === 'function') { return easingRef; }\n\n   const easingFn = easingFunc[easingRef];\n\n   return easingFn ? easingFn : easingFunc[options?.default ?? 'linear'];\n}\n\nexport { easingFunc, easingList, getEasingFunc };\n//# sourceMappingURL=index.js.map\n","import { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides resources for parsing style strings.\n */\nclass StyleParse\n{\n   static #regexPixels = /(\\d+)\\s*px/;\n\n   /**\n    * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n    *\n    * @param {string}   value - Value to parse.\n    *\n    * @returns {number|undefined} The integer component of a pixel string.\n    */\n   static pixels(value)\n   {\n      if (typeof value !== 'string') { return void 0; }\n\n      const isPixels = this.#regexPixels.test(value);\n      const number = parseInt(value);\n\n      return isPixels && Number.isFinite(number) ? number : void 0;\n   }\n\n   /**\n    * Returns the pixel value for `1rem` based on the root document element. You may apply an optional multiplier.\n    *\n    * @param {number} [multiplier=1] - Optional multiplier to apply to `rem` pixel value; default: 1.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Document} [options.targetDocument=document] The target DOM {@link Document} if different from the main\n    *        browser global `document`.\n    *\n    * @returns {number} The pixel value for `1rem` with or without a multiplier based on the root document element.\n    */\n   static remPixels(multiplier = 1, { targetDocument = document } = {})\n   {\n      return targetDocument?.documentElement ?\n       multiplier * parseFloat(globalThis.getComputedStyle(targetDocument.documentElement).fontSize) : void 0;\n   }\n}\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of TJSStyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of TJSStyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via\n * the 'version' option. This version number is assigned to the associated style element. When a TJSStyleManager\n * instance is created and there is an existing instance with a version that is lower than the current instance all CSS\n * rules are removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link TJSStyleManager.setProperty} and\n * {@link TJSStyleManager.setProperties} to `false` when loading initial values.\n */\nclass TJSStyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      if (Object.prototype.toString.call(document) !== '[object HTMLDocument]')\n      {\n         throw new TypeError(`TJSStyleManager error: 'document' is not an instance of HTMLDocument.`);\n      }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing TJSStyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {TJSStyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new TJSStyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {{ [key: string]: string }}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nexport { StyleParse, TJSStyleManager };\n//# sourceMappingURL=index.js.map\n","/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns time of last `requestAnimationFrame` callback.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime;\n\n   // Await count of `rAF` callbacks.\n   for (;--cntr >= 0;) { currentTime = await new Promise((resolve) => requestAnimationFrame(resolve)); }\n\n   return currentTime;\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { radToDeg, degToRad, clamp } from '@typhonjs-fvtt/runtime/math/util';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { A11yHelper } from '@typhonjs-fvtt/runtime/util/a11y';\nimport { hasSetter, isIterable, isObject, isPlainObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { Mat4, Vec3 } from '@typhonjs-fvtt/runtime/math/gl-matrix';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { getEasingFunc } from '@typhonjs-fvtt/runtime/svelte/easing';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { writable } from 'svelte/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/util/animate';\n\n/**\n * Provides an action to apply a TJSPosition instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {import('..').TJSPosition | import('../types').TJSPositionTypes.Positionable}   position - A position or\n *        positionable instance.\n *\n * @returns {(import('svelte/action').ActionReturn<\n *    import('..').TJSPosition |\n *    import('../types').TJSPositionTypes.Positionable\n * >)} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   /**\n    * Find actual position instance checking for a Positionable instance.\n    *\n    * @type {import('..').TJSPosition}\n    */\n   let actualPosition = position?.position ?? position;\n\n   if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         const newActualPosition = newPosition?.position ?? newPosition;\n\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newActualPosition === actualPosition && newActualPosition.parent === actualPosition.parent) { return; }\n\n         if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = void 0; }\n\n         actualPosition = newActualPosition;\n\n         if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(actualPosition, 'parent')) { actualPosition.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given\n * {@link TJSPosition} instance provided. When the attached boolean store state changes the draggable\n * action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {import('./types').Action.DraggableOptions} options - Draggable action options.\n *\n * @returns {import('svelte/action').ActionReturn<Partial<import('./types').Action.DraggableOptions>>} Action lifecycle\n *          functions.\n */\nfunction draggable(node, { position, enabled = true, button = 0, storeDragging = void 0, tween = false,\n tweenOptions = { duration: 1, ease: 'cubicOut' }, hasTargetClassList, ignoreTargetClassList })\n{\n   if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList))\n   {\n      throw new TypeError(`'hasTargetClassList' is not iterable.`);\n   }\n\n   if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList))\n   {\n      throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n   }\n\n   /**\n    * Used for direct call to `position.set`.\n    *\n    * @type {{top: number, left: number}}\n    */\n   const positionData = { left: 0, top: 0 };\n\n   /**\n    * Find actual position instance checking for a Positionable instance.\n    *\n    * @type {import('..').TJSPosition}\n    */\n   let actualPosition = position?.position ?? position;\n\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {import('../animation/types').AnimationAPI.QuickToCallback}\n    */\n   let quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\n\n   /**\n    * Event handlers associated with this action, so they may be later unregistered.\n    *\n    *  @type {{ [p: string]: [string, EventListener, boolean] }}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', /** @type {EventListener} */ onDragPointerDown, false],\n      dragMove: ['pointermove', /** @type {EventListener} */ onDragPointerChange, false],\n      dragUp: ['pointerup', /** @type {EventListener} */ onDragPointerUp, false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (enabled)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      // Do not process if the position system is not enabled.\n      if (!actualPosition.enabled) { return; }\n\n      // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\n      // class.\n      if (ignoreTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target))\n      {\n         for (const targetClass of ignoreTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass)) { return; }\n         }\n      }\n\n      // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\n      // matching class from the list.\n      if (hasTargetClassList !== void 0 && A11yHelper.isFocusTarget(event.target))\n      {\n         let foundTarget = false;\n\n         for (const targetClass of hasTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass))\n            {\n               foundTarget = true;\n               break;\n            }\n         }\n\n         if (!foundTarget) { return; }\n      }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = actualPosition.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (tween)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         positionData.left = newLeft;\n         positionData.top = newTop;\n\n         actualPosition.set(positionData);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of enabled being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (options.position !== void 0)\n         {\n            // Find actual position instance checking for a Positionable instance.\n            const newPosition = options.position?.position ?? options.position;\n            if (newPosition !== actualPosition)\n            {\n               actualPosition = newPosition;\n               quickTo = actualPosition.animate.quickTo(['top', 'left'], tweenOptions);\n            }\n         }\n\n         if (typeof options.enabled === 'boolean')\n         {\n            enabled = options.enabled;\n            if (enabled) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (typeof options.tween === 'boolean') { tween = options.tween; }\n\n         if (isObject(options.tweenOptions))\n         {\n            tweenOptions = options.tweenOptions;\n            quickTo.options(tweenOptions);\n         }\n\n         if (options.hasTargetClassList !== void 0)\n         {\n            if (!isIterable(options.hasTargetClassList))\n            {\n               throw new TypeError(`'hasTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               hasTargetClassList = options.hasTargetClassList;\n            }\n         }\n\n         if (options.ignoreTargetClassList !== void 0)\n         {\n            if (!isIterable(options.ignoreTargetClassList))\n            {\n               throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               ignoreTargetClassList = options.ignoreTargetClassList;\n            }\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\n/**\n * Provides an instance of the {@link draggable} action options support / Readable store to make updating / setting\n * draggable options much easier. When subscribing to the options instance returned by {@link draggable.options} the\n * Subscriber handler receives the entire instance.\n *\n * @implements {import('./types').Action.DraggableOptionsStore}\n */\nclass DraggableOptionsStore\n{\n   /** @type {boolean} */\n   #initialTween;\n\n   /**\n    * @type {import('../animation/types').AnimationAPI.QuickTweenOptions}\n    */\n   #initialTweenOptions;\n\n   /** @type {boolean} */\n   #tween;\n\n   /**\n    * @type {import('../animation/types').AnimationAPI.QuickTweenOptions}\n    */\n   #tweenOptions = { duration: 1, ease: 'cubicOut' };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<import('./types').Action.DraggableOptionsStore>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.tween = false] - Tween enabled.\n    *\n    * @param {import('../animation/types').AnimationAPI.QuickTweenOptions}   [opts.tweenOptions] - Quick tween options.\n    */\n   constructor({ tween = false, tweenOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'tween', {\n         get: () => { return this.#tween; },\n         set: (newTween) =>\n         {\n            if (typeof newTween !== 'boolean') { throw new TypeError(`'tween' is not a boolean.`); }\n\n            this.#tween = newTween;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'tweenOptions', {\n         get: () => { return this.#tweenOptions; },\n         set: (newTweenOptions) =>\n         {\n            if (!isObject(newTweenOptions))\n            {\n               throw new TypeError(`'tweenOptions' is not an object.`);\n            }\n\n            if (newTweenOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newTweenOptions.duration))\n               {\n                  throw new TypeError(`'tweenOptions.duration' is not a finite number.`);\n               }\n\n               if (newTweenOptions.duration < 0)\n               {\n                  this.#tweenOptions.duration = 0;\n               }\n               else\n               {\n                  this.#tweenOptions.duration = newTweenOptions.duration;\n               }\n            }\n\n            if (newTweenOptions.ease !== void 0)\n            {\n               const easeFn = getEasingFunc(newTweenOptions.ease);\n\n               if (typeof easeFn !== 'function')\n               {\n                  throw new TypeError(`'tweenOptions.ease' is not a function or Svelte easing function name.`);\n               }\n\n               this.#tweenOptions.ease = newTweenOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (tween !== void 0) { this.tween = tween; }\n      if (tweenOptions !== void 0) { this.tweenOptions = tweenOptions; }\n\n      this.#initialTween = this.#tween;\n      this.#initialTweenOptions = Object.assign({}, this.#tweenOptions);\n   }\n\n   /**\n    * @returns {number} Get tween duration.\n    */\n   get tweenDuration() { return this.#tweenOptions.duration; }\n\n   /**\n    * @returns {import('#runtime/svelte/easing').EasingReference} Get easing function or easing function name.\n    */\n   get tweenEase() { return this.#tweenOptions.ease; }\n\n   /**\n    * @param {number}   duration - Set tween duration.\n    */\n   set tweenDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { duration = 0; }\n\n      this.#tweenOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {import('#runtime/svelte/easing').EasingReference} ease - Set easing function by name or direct function.\n    */\n   set tweenEase(ease)\n   {\n      const easeFn = getEasingFunc(ease);\n\n      if (typeof easeFn !== 'function')\n      {\n         throw new TypeError(`'ease' is not a function or Svelte easing function name.`);\n      }\n\n      this.#tweenOptions.ease = ease;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to initial values.\n    */\n   reset()\n   {\n      this.#tween = this.#initialTween;\n      this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets tween enabled state to initial value.\n    */\n   resetTween()\n   {\n      this.#tween = this.#initialTween;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets tween options to initial values.\n    */\n   resetTweenOptions()\n   {\n      this.#tweenOptions = Object.assign({}, this.#initialTweenOptions);\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Store subscribe method.\n    *\n    * @param {import('svelte/store').Subscriber<import('./types').Action.DraggableOptionsStore>} handler - Callback\n    *        function that is invoked on update / changes. Receives the DraggableOptionsStore instance.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptionsStore instance.\n *\n * @param {({\n *    tween?: boolean,\n *    tweenOptions?: import('../animation/types').AnimationAPI.QuickTweenOptions\n * })} options - Initial options for DraggableOptionsStore.\n *\n * @returns {import('./types').Action.DraggableOptionsStore} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptionsStore(options);\n\n/**\n * Provides a basic animation implementation for TJSPosition animation.\n *\n * @implements {import('#runtime/util/animate').BasicAnimation}\n */\nclass AnimationControl\n{\n   /** @type {import('./types-local').AnimationData} */\n   #animationData;\n\n   /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>} */\n   #finishedPromise;\n\n   /** @type {boolean} */\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {import('./types-local').AnimationData | null}  [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}        [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (isObject(animationData)) { animationData.control = this; }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<import('#runtime/util/animate').BasicAnimationState>} Animation finished Promise.\n    */\n   get finished()\n   {\n      if (!CrossWindow.isPromise(this.#finishedPromise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve({ cancelled: false });\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n\n/**\n * Provides animation management and scheduling allowing all TJSPosition instances to utilize one micro-task.\n */\nclass AnimationManager\n{\n   /**\n    * Cancels all animations except `quickTo` animations.\n    *\n    * @type {import('./types-local').AnimationCancelFunction}\n    */\n   static cancelFn = (data) => data.quickTo !== true;\n\n   /**\n    * Cancels all animations.\n    *\n    * @type {import('./types-local').AnimationCancelFunction}\n    */\n   static cancelAllFn = () => true;\n\n   /**\n    * Defines the options used for {@link TJSPosition.set}.\n    *\n    * @type {Readonly<{immediateElementUpdate: boolean}>}\n    */\n   static #tjsPositionSetOptions = Object.freeze({ immediateElementUpdate: true });\n\n   /**\n    * @type {import('./types-local').AnimationData[]}\n    */\n   static #activeList = [];\n\n   /**\n    * Provides the `this` context for {@link AnimationManager.animate} to be scheduled on rAF.\n    *\n    * @type {Function}\n    */\n   static #animateBound = (timeFrame) => this.animate(timeFrame);\n\n   /**\n    * @type {import('./types-local').AnimationData[]}\n    */\n   static #pendingList = [];\n\n   /**\n    * Tracks whether a requestAnimationFrame callback is pending via {@link AnimationManager.add};\n    *\n    * @type {boolean}\n    */\n   static #rafPending = false;\n\n   /**\n    * Time of last `rAF` callback.\n    *\n    * @type {number}\n    */\n   static #timeFrame;\n\n   /**\n    * Time of `performance.now()` at last `rAF` callback.\n    *\n    * @type {number}\n    */\n   static #timeNow;\n\n   /**\n    * @returns {number} Time of last `rAF` callback.\n    */\n   static get timeFrame()\n   {\n      return this.#timeFrame;\n   }\n\n   /**\n    * @returns {number} Time of `performance.now()` at last `rAF` callback.\n    */\n   static get timeNow()\n   {\n      return this.#timeNow;\n   }\n\n   /**\n    * Add animation data.\n    *\n    * @param {import('./types-local').AnimationData}   data -\n    */\n   static add(data)\n   {\n      if (data.cancelled)\n      {\n         this.#cleanupData(data);\n         return;\n      }\n\n      AnimationManager.#pendingList.push(data);\n\n      // If there is no rAF pending schedule one now.\n      if (!AnimationManager.#rafPending)\n      {\n         AnimationManager.#rafPending = true;\n         globalThis.requestAnimationFrame(this.#animateBound);\n      }\n   }\n\n   /**\n    * Manage all animation.\n    *\n    * @param {DOMHighResTimeStamp} timeFrame - rAF callback time.\n    */\n   static animate(timeFrame)\n   {\n      AnimationManager.#rafPending = false;\n\n      AnimationManager.#timeNow = globalThis.performance.now();\n      AnimationManager.#timeFrame = timeFrame;\n\n      // Early out of the continual rAF callback when there are no current animations scheduled.\n      if (AnimationManager.#activeList.length === 0 && AnimationManager.#pendingList.length === 0) { return; }\n\n      if (AnimationManager.#pendingList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.#pendingList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n            {\n               AnimationManager.#pendingList.splice(cntr, 1);\n               this.#cleanupData(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Set any transform origin for the animation.\n               if (data.transformOrigin) { data.position.set({ transformOrigin: data.transformOrigin }); }\n\n               data.start = AnimationManager.#timeFrame;\n\n               // Remove from new list and add to active list.\n               AnimationManager.#pendingList.splice(cntr, 1);\n               AnimationManager.#activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.#activeList.splice(cntr, 1);\n            this.#cleanupData(data);\n            continue;\n         }\n\n         data.current = timeFrame - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\n\n            AnimationManager.#activeList.splice(cntr, 1);\n            this.#cleanupData(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData, AnimationManager.#tjsPositionSetOptions);\n      }\n\n      globalThis.requestAnimationFrame(this.#animateBound);\n   }\n\n   /**\n    * Cancels all animations for given TJSPosition instance.\n    *\n    * @param {import('../').TJSPosition} position - TJSPosition instance.\n    *\n    * @param {import('./types-local').AnimationCancelFunction} [cancelFn] - An optional function to control cancelling\n    *        animations.\n    */\n   static cancel(position, cancelFn = AnimationManager.cancelFn)\n   {\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n         if (data.position === position && cancelFn(data))\n         {\n            AnimationManager.#activeList.splice(cntr, 1);\n            data.cancelled = true;\n            this.#cleanupData(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#pendingList[cntr];\n         if (data.position === position && cancelFn(data))\n         {\n            AnimationManager.#pendingList.splice(cntr, 1);\n            data.cancelled = true;\n            this.#cleanupData(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n         data.cancelled = true;\n         this.#cleanupData(data);\n      }\n\n      for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#pendingList[cntr];\n         data.cancelled = true;\n         this.#cleanupData(data);\n      }\n\n      AnimationManager.#activeList.length = 0;\n      AnimationManager.#pendingList.length = 0;\n   }\n\n   /**\n    * @param {import('./types-local').AnimationData}  data - Animation data to cleanup.\n    */\n   static #cleanupData(data)\n   {\n      // Update state.\n      data.active = false;\n      data.finished = true;\n\n      // Reset any transform origin for the animation to initial value.\n      if (data.transformOriginInitial) { data.position.set({ transformOrigin: data.transformOriginInitial }); }\n\n      if (typeof data.cleanup === 'function') { data.cleanup(data); }\n\n      if (typeof data.resolve === 'function') { data.resolve({ cancelled: data.cancelled }); }\n\n      // Remove retained data if not a `quickTo` animation.\n      if (!data.quickTo)\n      {\n         data.cleanup = void 0;\n         data.control = void 0;\n         data.destination = void 0;\n         data.el = void 0;\n         data.ease = void 0;\n         data.initial = void 0;\n         data.interpolate = void 0;\n         data.keys = void 0;\n         data.newData = void 0;\n         data.position = void 0;\n         data.resolve = void 0;\n      }\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given TJSPosition instance.\n    *\n    * @param {import('../index.js').TJSPosition} position - TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation[]} All scheduled AnimationControl instances for the\n    *          given TJSPosition instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#activeList[cntr];\n         if (data.position === position) { results.push(data.control); }\n      }\n\n      for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.#pendingList[cntr];\n         if (data.position === position) { results.push(data.control); }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns the status of any scheduled or pending animations for the given {@link TJSPosition} instance.\n    *\n    * @param {import('../index.js').TJSPosition} position - TJSPosition instance.\n    *\n    * @param {import('./types').AnimationAPI.ScheduleOptions} [options] - Scheduling options.\n    *\n    * @returns {boolean} True if scheduled / false if not.\n    */\n   static isScheduled(position, { active = true, pending = true } = {})\n   {\n      if (active)\n      {\n         for (let cntr = AnimationManager.#activeList.length; --cntr >= 0;)\n         {\n            if (AnimationManager.#activeList[cntr].position === position) { return true; }\n         }\n      }\n\n      if (pending)\n      {\n         for (let cntr = AnimationManager.#pendingList.length; --cntr >= 0;)\n         {\n            if (AnimationManager.#pendingList[cntr].position === position) { return true; }\n         }\n      }\n\n      return false;\n   }\n}\n\n/**\n * Defines stored positional data.\n *\n * @implements {import('./types').Data.TJSPositionData}\n */\nclass TJSPositionData\n{\n   /**\n    * @param {object} [opts] - Options.\n    *\n    * @param {number | 'auto' | 'inherit' | null} [opts.height] -\n    *\n    * @param {number | null} [opts.left] -\n    *\n    * @param {number | null} [opts.maxHeight] -\n    *\n    * @param {number | null} [opts.maxWidth] -\n    *\n    * @param {number | null} [opts.minHeight] -\n    *\n    * @param {number | null} [opts.minWidth] -\n    *\n    * @param {number | null} [opts.rotateX] -\n    *\n    * @param {number | null} [opts.rotateY] -\n    *\n    * @param {number | null} [opts.rotateZ] -\n    *\n    * @param {number | null} [opts.scale] -\n    *\n    * @param {number | null} [opts.translateX] -\n    *\n    * @param {number | null} [opts.translateY] -\n    *\n    * @param {number | null} [opts.translateZ] -\n    *\n    * @param {number | null} [opts.top] -\n    *\n    * @param {import('../transform/types').TransformAPI.TransformOrigin | null} [opts.transformOrigin] -\n    *\n    * @param {number | 'auto' | 'inherit' | null} [opts.width] -\n    *\n    * @param {number | null} [opts.zIndex] -\n    *\n    * @param {number | null} [opts.rotation] - Alias for `rotateZ`.\n    */\n   constructor({ height = void 0, left = void 0, maxHeight = void 0, maxWidth = void 0, minHeight = void 0,\n    minWidth = void 0, rotateX = void 0, rotateY = void 0, rotateZ = void 0, scale = void 0, translateX = void 0,\n     translateY = void 0, translateZ = void 0, top = void 0, transformOrigin = void 0, width = void 0, zIndex = void 0,\n      rotation = void 0 } = {})\n   {\n      /** @type {number | 'auto' | 'inherit' | null} */\n      this.height = height;\n\n      /** @type {number | null} */\n      this.left = left;\n\n      /** @type {number | null} */\n      this.maxHeight = maxHeight;\n\n      /** @type {number | null} */\n      this.maxWidth = maxWidth;\n\n      /** @type {number | null} */\n      this.minHeight = minHeight;\n\n      /** @type {number | null} */\n      this.minWidth = minWidth;\n\n      /** @type {number | null} */\n      this.rotateX = rotateX;\n\n      /** @type {number | null} */\n      this.rotateY = rotateY;\n\n      /** @type {number | null} */\n      this.rotateZ = rotateZ;\n\n      /** @type {number | null} */\n      this.scale = scale;\n\n      /** @type {number | null} */\n      this.top = top;\n\n      /** @type {import('../transform/types').TransformAPI.TransformOrigin | null} */\n      this.transformOrigin = transformOrigin;\n\n      /** @type {number | null} */\n      this.translateX = translateX;\n\n      /** @type {number | null} */\n      this.translateY = translateY;\n\n      /** @type {number | null} */\n      this.translateZ = translateZ;\n\n      /** @type {number | 'auto' | 'inherit' | null} */\n      this.width = width;\n\n      /** @type {number | null} */\n      this.zIndex = zIndex;\n\n      // Aliases -----------------------------------------------------------------------------------------------------\n\n      /** @type {number | null} */\n      this.rotation = rotation; // Alias for `rotateZ`.\n   }\n}\n\n/**\n * Various internal utilities to work with {@link TJSPositionData}.\n */\nclass TJSPositionDataUtil\n{\n   /**\n    * Stores the TJSPositionData properties that can be animated.\n    *\n    * @type {ReadonlySet<string>}\n    */\n   static #animateKeys = Object.freeze(new Set([\n      // Main keys\n      'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n      'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n      // Aliases\n      'rotation'\n   ]));\n\n   /**\n    * Stores the TJSPositionData property aliases that can be animated.\n    *\n    * @type {Readonly<Map<string, string>>}\n    */\n   static #animateKeyAliases = Object.freeze(new Map([['rotation', 'rotateZ']]));\n\n   /**\n    * Provides numeric defaults for all parameters. This is used by {@link TJSPosition.get} to optionally\n    * provide numeric defaults.\n    *\n    * @type {{ [key: string]: number | null }}\n    */\n   static #numericDefaults = Object.freeze({\n      // Other keys\n      height: 0,\n      left: 0,\n      maxHeight: null,\n      maxWidth: null,\n      minHeight: null,\n      minWidth: null,\n      top: 0,\n      transformOrigin: null,\n      width: 0,\n      zIndex: null,\n\n      rotateX: 0,\n      rotateY: 0,\n      rotateZ: 0,\n      scale: 1,\n      translateX: 0,\n      translateY: 0,\n      translateZ: 0,\n\n      rotation: 0\n   });\n\n   /**\n    * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n    * {@link TJSPositionData} instance is created.\n    *\n    * @param {Partial<import('./types').Data.TJSPositionData>}  source - The source instance to copy from.\n    *\n    * @param {import('./types').Data.TJSPositionData}  [target] - Target TJSPositionData like object; if one\n    *        is not provided a new instance is created.\n    *\n    * @returns {import('./types').Data.TJSPositionData} The target instance with all TJSPositionData fields.\n    */\n   static copyData(source, target = new TJSPositionData())\n   {\n      target.height = source.height ?? null;\n      target.left = source.left ?? null;\n      target.maxHeight = source.maxHeight ?? null;\n      target.maxWidth = source.maxWidth ?? null;\n      target.minHeight = source.minHeight ?? null;\n      target.minWidth = source.minWidth ?? null;\n      target.rotateX = source.rotateX ?? null;\n      target.rotateY = source.rotateY ?? null;\n      target.rotateZ = source.rotateZ ?? null;\n      target.scale = source.scale ?? null;\n      target.top = source.top ?? null;\n      target.transformOrigin = source.transformOrigin ?? null;\n      target.translateX = source.translateX ?? null;\n      target.translateY = source.translateY ?? null;\n      target.translateZ = source.translateZ ?? null;\n      target.width = source.width ?? null;\n      target.zIndex = source.zIndex ?? null;\n\n      return target;\n   }\n\n   /**\n    * Returns the non-aliased animation key.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key / possibly aliased key.\n    *\n    * @returns {import('../animation/types').AnimationAPI.AnimationKey} Actual non-aliased animation key.\n    */\n   static getAnimationKey(key)\n   {\n      return this.#animateKeyAliases.get(key) ?? key;\n   }\n\n   /**\n    * Queries an object by the given key or otherwise returns any numeric default.\n    *\n    * @param {object}   data - An object to query for the given animation key.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey}   key - Animation key.\n    *\n    * @param {boolean}  [aliased=false] - When use non-aliased key.\n    *\n    * @returns {*|number|null} Data at key or numeric default.\n    */\n   static getDataOrDefault(data, key, aliased = false)\n   {\n      if (aliased) { key = this.#animateKeyAliases.get(key) ?? key; }\n\n      return data[key] ?? this.#numericDefaults[key];\n   }\n\n   /**\n    * Tests if the given key is an animation key.\n    *\n    * @param {unknown}   key - A potential animation key.\n    *\n    * @returns {key is import('../animation/types').AnimationAPI.AnimationKey} Is animation key.\n    */\n   static isAnimationKey(key)\n   {\n      return this.#animateKeys.has(key);\n   }\n\n   /**\n    * Sets numeric defaults for a {@link TJSPositionData} like object.\n    *\n    * @param {object}   data - A TJSPositionData like object.\n    */\n   static setNumericDefaults(data)\n   {\n      // Transform keys\n      if (data.rotateX === null) { data.rotateX = 0; }\n      if (data.rotateY === null) { data.rotateY = 0; }\n      if (data.rotateZ === null) { data.rotateZ = 0; }\n      if (data.translateX === null) { data.translateX = 0; }\n      if (data.translateY === null) { data.translateY = 0; }\n      if (data.translateZ === null) { data.translateZ = 0; }\n      if (data.scale === null) { data.scale = 1; }\n\n      // Aliases\n      if (data.rotation === null) { data.rotation = 0; }\n   }\n}\n\n/**\n * Converts {@link TJSPositionData} properties defined as strings to number values. The string values can be defined\n * as relative adjustments with a leading operator. Various unit formats are supported as well.\n */\nclass ConvertStringData\n{\n   /**\n    * Animation keys for different processing categories.\n    *\n    * @type {{numPx: Readonly<Set<string>>, percentParent: Readonly<Set<string>>}}\n    */\n   static #animKeyTypes = {\n      // Animation keys that can be specified in `px` converted to a number.\n      numPx: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n       'translateX', 'translateY', 'translateZ'])),\n\n      // Animation keys that can be specified in percentage of parent element constraint.\n      percentParent: Object.freeze(new Set(['left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width',\n       'height'])),\n\n      // Only rotation animation keys can be specified in `rad` / `turn` converted to a number.\n      rotationRadTurn: Object.freeze(new Set(['rotateX', 'rotateY', 'rotateZ', 'rotation']))\n   };\n\n   /**\n    * Parses string data values. Relative values must start with leading values '+=', '-=', or '*=' followed by a\n    * float / numeric value. IE `+=45` or for percentage '+=10%'. Also handles exact percent value such as `10` or\n    * `10%`. Percentage values are based on the current value, parent element constraints, or constraints of the type\n    * of value like rotation being bound by 360 degrees.\n    *\n    * TODO: In the future support more specific CSS unit types.\n    *\n    * @type {RegExp}\n    */\n   static #regexStringData = /^(?<operation>[-+*]=)?(?<value>-?\\d*\\.?\\d+)(?<unit>%|%~|px|rad|turn)?$/;\n\n   /**\n    * Stores the results for match groups from `regexStringData`;\n    *\n    * @type {import('./types-local').StringMatch}\n    */\n   static #matchResults = Object.seal({\n      operation: void 0,\n      value: void 0,\n      unit: void 0\n   });\n\n   /**\n    * Converts any relative string values for animatable keys to actual updates performed against current data.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - position data.\n    *\n    * @param {import('../data/types').Data.TJSPositionData}   position - The source position data.\n    *\n    * @param {HTMLElement} el - Target positioned element.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataRelative} Converted data.\n    */\n   static process(data, position, el)\n   {\n      /** @type {number} */\n      let parentClientHeight = void 0, parentClientWidth = void 0;\n\n      for (const key in data)\n      {\n         // Key is animatable / numeric.\n         if (TJSPositionDataUtil.isAnimationKey(key))\n         {\n            const value = data[key];\n\n            if (typeof value !== 'string') { continue; }\n\n            // Ignore 'auto' and 'inherit' string values.\n            if (value === 'auto' || value === 'inherit') { continue; }\n\n            /** @type {import('../animation/types').AnimationAPI.AnimationKey} */\n            const animKey = key;\n\n            const regexResults = this.#regexStringData.exec(value);\n\n            // Additional state indicating a particular key is handled.\n            let handled = false;\n\n            if (regexResults)\n            {\n               const results = this.#matchResults;\n\n               results.operation = regexResults.groups.operation;\n               results.value = parseFloat(regexResults.groups.value);\n               results.unit = regexResults.groups.unit;\n\n               // Retrieve current value, but if null use the numeric default.\n               const current = TJSPositionDataUtil.getDataOrDefault(position, key, true);\n\n               switch (results.unit)\n               {\n                  // Animation keys that support percentage changes including constraints against the parent element.\n                  case '%':\n                  {\n                     // Cache parent client width / height on first parent percent based key.\n                     if (this.#animKeyTypes.percentParent.has(key))\n                     {\n                        if (!Number.isFinite(parentClientHeight) && el?.parentElement?.isConnected)\n                        {\n                           parentClientHeight = el.parentElement.clientHeight;\n                           parentClientWidth = el.parentElement.clientWidth;\n                        }\n\n                        if (parentClientHeight === void 0 || parentClientWidth === void 0)\n                        {\n                           console.warn(\n                            `TJSPosition - ConvertStringData warning: could not determine parent constraints for key '${\n                             key}' with value '${value}'.`);\n                           data[key] = void 0;\n                           continue;\n                        }\n                     }\n\n                     handled = this.#handlePercent(animKey, current, data, position, el, results,\n                      parentClientHeight, parentClientWidth);\n\n                     break;\n                  }\n\n                  // Animation keys that support percentage changes from current values.\n                  case '%~':\n                     handled = this.#handleRelativePercent(animKey, current, data, position, el, results);\n                     break;\n\n                  // Animation keys that support `px` / treat as raw number.\n                  case 'px':\n                     handled = this.#animKeyTypes.numPx.has(key) ?\n                      this.#applyResultsValue(animKey, current, data, results) : false;\n                     break;\n\n                  // Only rotation animation keys support `rad` / `turn`.\n                  case 'rad':\n                  case 'turn':\n                     handled = this.#animKeyTypes.rotationRadTurn.has(key) ?\n                      this.#handleRotationRadTurn(animKey, current, data, position, el, results) : false;\n                     break;\n\n                  // No units / treat as raw number.\n                  default:\n                     handled = this.#applyResultsValue(animKey, current, data, results);\n                     break;\n               }\n            }\n\n            if (!regexResults || !handled)\n            {\n               console.warn(\n                `TJSPosition - ConvertStringData warning: malformed key '${key}' with value '${value}'.`);\n               data[key] = void 0;\n            }\n         }\n      }\n\n      return data;\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Provides the common update to source data after `results.value` has been converted to the proper value\n    * respectively.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #applyResultsValue(key, current, data, results)\n   {\n      if (!results.operation)\n      {\n         data[key] = results.value;\n         return true;\n      }\n\n      switch (results.operation)\n      {\n         case '-=':\n            data[key] = current - results.value;\n            break;\n\n         case '+=':\n            data[key] = current + results.value;\n            break;\n\n         case '*=':\n            data[key] = current * results.value;\n            break;\n\n         default:\n            return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Handles the `%` unit type where values are adjusted against the parent element client width / height or in the\n    * case of rotation the percentage of 360 degrees.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - Current position data.\n    *\n    * @param {HTMLElement} el - Positioned element.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @param {number}  parentClientHeight - Parent element client height.\n    *\n    * @param {number}  parentClientWidth - Parent element client width.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #handlePercent(key, current, data, position, el, results, parentClientHeight, parentClientWidth)\n   {\n      switch (key)\n      {\n         // Calculate value; take into account keys that calculate parent client width.\n         case 'left':\n         case 'maxWidth':\n         case 'minWidth':\n         case 'width':\n         case 'translateX':\n            results.value = parentClientWidth * (results.value / 100);\n            break;\n\n         // Calculate value; take into account keys that calculate parent client height.\n         case 'top':\n         case 'maxHeight':\n         case 'minHeight':\n         case 'height':\n         case 'translateY':\n            results.value = parentClientHeight * (results.value / 100);\n            break;\n\n         // Calculate value; convert percentage into degrees\n         case 'rotateX':\n         case 'rotateY':\n         case 'rotateZ':\n         case 'rotation':\n            results.value = 360 * (results.value / 100);\n            break;\n\n         default:\n            return false;\n      }\n\n      return this.#applyResultsValue(key, current, data, results);\n   }\n\n   /**\n    * Handles the `%~` unit type where values are adjusted against the current value for the given key.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - Current position data.\n    *\n    * @param {HTMLElement} el - Positioned element.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #handleRelativePercent(key, current, data, position, el, results)\n   {\n      // Normalize percentage.\n      results.value = results.value / 100;\n\n      if (!results.operation)\n      {\n         data[key] = current * results.value;\n         return true;\n      }\n\n      switch (results.operation)\n      {\n         case '-=':\n            data[key] = current - (current * results.value);\n            break;\n\n         case '+=':\n            data[key] = current + (current * results.value);\n            break;\n\n         case '*=':\n            data[key] = current * (current * results.value);\n            break;\n\n         default:\n            return false;\n      }\n\n      return true;\n   }\n\n   /**\n    * Handles the `rad` / `turn` unit types for rotation animation keys.\n    *\n    * @param {import('../animation/types').AnimationAPI.AnimationKey} key - Animation key.\n    *\n    * @param {number}   current - Current value\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative}  data - Source data to convert.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - Current position data.\n    *\n    * @param {HTMLElement} el - Positioned element.\n    *\n    * @param {import('./types-local').StringMatch}  results - Match results.\n    *\n    * @returns {boolean} Adjustment successful.\n    */\n   static #handleRotationRadTurn(key, current, data, position, el, results)\n   {\n      // Convert radians / turn into degrees.\n      switch (results.unit)\n      {\n         case 'rad':\n            results.value = radToDeg(results.value);\n            break;\n\n         case 'turn':\n            results.value = 360 * results.value;\n            break;\n      }\n\n      return this.#applyResultsValue(key, current, data, results);\n   }\n}\n\n/**\n * Provides the output data for {@link TransformAPI.getData}.\n *\n * @implements {import('./types').TransformAPI.TransformData}\n */\nclass TJSTransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screen space clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {import('#runtime/math/gl-matrix').Vec3[]}\n    */\n   #corners = [Vec3.create(), Vec3.create(), Vec3.create(), Vec3.create()];\n\n   /**\n    * Stores the current gl-matrix Mat4 data.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4}\n    */\n   #mat4 = Mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4[]}\n    */\n   #originTranslations = [Mat4.create(), Mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Vec3[]} The transformed corner points as Vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/**\n * @implements {import('./types').TransformAPI}\n */\nclass TJSTransforms\n{\n   /**\n    * Stores transform data.\n    *\n    * @type {Partial<import('../data/types').Data.TJSPositionData>}\n    */\n   #data = {};\n\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   /**\n    * Defines the keys of TJSPositionData that are transform keys.\n    *\n    * @type {string[]}\n    */\n   static #transformKeys = Object.freeze([\n    'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'\n   ]);\n\n   /**\n    * Defines bitwise keys for transforms used in {@link TJSTransforms.getMat4}.\n    *\n    * @type {object}\n    */\n   static #transformKeysBitwise = Object.freeze({\n      rotateX: 1,\n      rotateY: 2,\n      rotateZ: 4,\n      scale: 8,\n      translateX: 16,\n      translateY: 32,\n      translateZ: 64\n   });\n\n   /**\n    * Defines the default transform origin.\n    *\n    * @type {Readonly<import('./types').TransformAPI.TransformOrigin>}\n    */\n   static #transformOriginDefault = 'top left';\n\n   /**\n    * Defines the valid transform origins.\n    *\n    * @type {Readonly<import('./types').TransformAPI.TransformOrigin[]>}\n    */\n   static #transformOrigins = Object.freeze(['top left', 'top center', 'top right', 'center left', 'center',\n    'center right', 'bottom left', 'bottom center', 'bottom right']);\n\n   /**\n    * Defines a valid Set of transform origins.\n    *\n    * @type {ReadonlySet<import('./types').TransformAPI.TransformOrigin>}\n    */\n   static #transformOriginsSet = Object.freeze(new Set(this.#transformOrigins));\n\n   // Temporary variables --------------------------------------------------------------------------------------------\n\n   /** @type {import('#runtime/math/gl-matrix').Mat4} */\n   static #mat4Result = Mat4.create();\n\n   /** @type {import('#runtime/math/gl-matrix').Mat4} */\n   static #mat4Temp = Mat4.create();\n\n   /** @type {import('#runtime/math/gl-matrix').Vec3} */\n   static #vec3Temp = Vec3.create();\n\n   /** @type {number[]} */\n   static #vectorScale = [1, 1, 1];\n\n   /** @type {number[]} */\n   static #vectorTranslate = [0, 0, 0];\n\n   /**\n    * Returns a list of supported transform origins.\n    *\n    * @returns {Readonly<import('./types').TransformAPI.TransformOrigin[]>} The supported transform origin strings.\n    */\n   static get transformOrigins()\n   {\n      return this.#transformOrigins;\n   }\n\n   /**\n    * Returns whether the given string is a {@link TransformAPI.TransformOrigin}.\n    *\n    * @param {unknown}  origin - A potential transform origin string.\n    *\n    * @returns {origin is import('./types').TransformAPI.TransformOrigin}\n    */\n   static isTransformOrigin(origin)\n   {\n      return this.#transformOriginsSet.has(origin);\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this.#data.rotateX = value;\n      }\n      else\n      {\n         if (this.#data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this.#data.rotateY = value;\n      }\n      else\n      {\n         if (this.#data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this.#data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this.#data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this.#data.scale = value;\n      }\n      else\n      {\n         if (this.#data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this.#data.translateX = value;\n      }\n\n      else\n      {\n         if (this.#data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this.#data.translateY = value;\n      }\n\n      else\n      {\n         if (this.#data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this.#data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this.#data.translateZ = value;\n      }\n\n      else\n      {\n         if (this.#data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this.#data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this.#data)\n   {\n      return `matrix3d(${this.getMat4(data, TJSTransforms.#mat4Result).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this.#data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, TJSTransforms.#mat4Result).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given\n    * {@link TJSPositionData} instance with the applied local transform data.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} position - The position data to process.\n    *\n    * @param {import('./types').TransformAPI.TransformData} [output] - Optional TJSTransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {import('./types').TransformAPI.TransformData} The output TJSTransformData instance.\n    */\n   getData(position, output = new TJSTransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.marginLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = TJSTransforms.#getOriginTranslation(position.transformOrigin, width, height, output.originTranslations);\n\n         if (TJSTransforms.#transformOriginDefault === position.transformOrigin)\n         {\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            Vec3.transformMat4(rect[0], rect[0], translate[0]);\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            Vec3.transformMat4(rect[1], rect[1], translate[0]);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            Vec3.transformMat4(rect[2], rect[2], translate[0]);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            Vec3.transformMat4(rect[3], rect[3], translate[0]);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n            Vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         Mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {import('../data/types').Data.TJSPositionData}   [data] - TJSPositionData instance or local transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4(data = this.#data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.scale;\n               TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data[key];\n               Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n               break;\n\n            case 'translateX':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateX;\n               TJSTransforms.#vectorTranslate[0] = data.translateX;\n               TJSTransforms.#vectorTranslate[1] = 0;\n               TJSTransforms.#vectorTranslate[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n               break;\n\n            case 'translateY':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateY;\n               TJSTransforms.#vectorTranslate[0] = 0;\n               TJSTransforms.#vectorTranslate[1] = data.translateY;\n               TJSTransforms.#vectorTranslate[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n               break;\n\n            case 'translateZ':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.translateZ;\n               TJSTransforms.#vectorTranslate[0] = 0;\n               TJSTransforms.#vectorTranslate[1] = 0;\n               TJSTransforms.#vectorTranslate[2] = data.translateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this.#data)\n      {\n         for (let cntr = 0; cntr < TJSTransforms.#transformKeys.length; cntr++)\n         {\n            const key = TJSTransforms.#transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n                  break;\n\n               case 'translateX':\n                  TJSTransforms.#vectorTranslate[0] = data[key];\n                  TJSTransforms.#vectorTranslate[1] = 0;\n                  TJSTransforms.#vectorTranslate[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                  break;\n\n               case 'translateY':\n                  TJSTransforms.#vectorTranslate[0] = 0;\n                  TJSTransforms.#vectorTranslate[1] = data[key];\n                  TJSTransforms.#vectorTranslate[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                  break;\n\n               case 'translateZ':\n                  TJSTransforms.#vectorTranslate[0] = 0;\n                  TJSTransforms.#vectorTranslate[1] = 0;\n                  TJSTransforms.#vectorTranslate[2] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {Partial<import('../data/types').Data.TJSPositionData>}   [data] - TJSPositionData instance or local\n    *        transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4Ortho(data = this.#data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      TJSTransforms.#vectorTranslate[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      TJSTransforms.#vectorTranslate[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      TJSTransforms.#vectorTranslate[2] = data.translateZ ?? 0;\n      Mat4.multiply(matrix, matrix, Mat4.fromTranslation(TJSTransforms.#mat4Temp, TJSTransforms.#vectorTranslate));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         TJSTransforms.#vectorScale[0] = TJSTransforms.#vectorScale[1] = data.scale;\n         Mat4.multiply(matrix, matrix, Mat4.fromScaling(TJSTransforms.#mat4Temp, TJSTransforms.#vectorScale));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= TJSTransforms.#transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this.#data)\n      {\n         for (let cntr = 0; cntr < TJSTransforms.#transformKeys.length; cntr++)\n         {\n            const key = TJSTransforms.#transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & TJSTransforms.#transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(TJSTransforms.#mat4Temp, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {import('../data/types').Data.TJSPositionData} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given TJSPositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of TJSTransforms.#transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (TJSTransforms.#transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this.#data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this.#data[key];\n            }\n         }\n      }\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n    * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n    * translation.\n    *\n    * This method is used internally, but may be useful if you need the origin translation matrices to transform\n    * bespoke points based on any `transformOrigin` set in {@link TJSPositionData}.\n    *\n    * @param {string}   transformOrigin - The transform origin attribute from TJSPositionData.\n    *\n    * @param {number}   width - The TJSPositionData width or validation data width when 'auto'.\n    *\n    * @param {number}   height - The TJSPositionData height or validation data height when 'auto'.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4[]}   output - Output Mat4 array.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4[]} Output Mat4 array.\n    */\n   static #getOriginTranslation(transformOrigin, width, height, output)\n   {\n      const vector = TJSTransforms.#vec3Temp;\n\n      switch (transformOrigin)\n      {\n         case 'top left':\n            vector[0] = vector[1] = 0;\n            Mat4.fromTranslation(output[0], vector);\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'top center':\n            vector[0] = -width * 0.5;\n            vector[1] = 0;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'top right':\n            vector[0] = -width;\n            vector[1] = 0;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'center left':\n            vector[0] = 0;\n            vector[1] = -height * 0.5;\n            Mat4.fromTranslation(output[0], vector);\n            vector[1] = height * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         // By default, null / no transform is 'center'.\n         case null:\n         case 'center':\n            vector[0] = -width * 0.5;\n            vector[1] = -height * 0.5;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width * 0.5;\n            vector[1] = height * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'center right':\n            vector[0] = -width;\n            vector[1] = -height * 0.5;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width;\n            vector[1] = height * 0.5;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'bottom left':\n            vector[0] = 0;\n            vector[1] = -height;\n            Mat4.fromTranslation(output[0], vector);\n            vector[1] = height;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'bottom center':\n            vector[0] = -width * 0.5;\n            vector[1] = -height;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width * 0.5;\n            vector[1] = height;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         case 'bottom right':\n            vector[0] = -width;\n            vector[1] = -height;\n            Mat4.fromTranslation(output[0], vector);\n            vector[0] = width;\n            vector[1] = height;\n            Mat4.fromTranslation(output[1], vector);\n            break;\n\n         // No valid transform origin parameter; set identity.\n         default:\n            Mat4.identity(output[0]);\n            Mat4.identity(output[1]);\n            break;\n      }\n\n      return output;\n   }\n}\n\nclass AnimationScheduler\n{\n   /**\n    * Used to copy data from a TJSPosition instance.\n    *\n    * @type {import('../data/types').Data.TJSPositionData}\n    */\n   static #data = {};\n\n   static #getEaseOptions = Object.freeze({ default: false });\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {import('../').TJSPosition} position -\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {import('#runtime/svelte/easing').EasingFunction}    ease -\n    *\n    * @param {import('#runtime/math/interpolate').InterpolateFunction}    [interpolate=lerp] -\n    *\n    * @param {import('../transform/types').TransformAPI.TransformOrigin}  [transformOrigin] -\n    *\n    * @param {import('../transform/types').TransformAPI.TransformOrigin}  [transformOriginInitial] -\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] -\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static #addAnimation(position, initial, destination, duration, el, delay, ease, interpolate = lerp, transformOrigin,\n    transformOriginInitial, cleanup)\n   {\n      // Set initial data for transform values that are often null by default.\n      TJSPositionDataUtil.setNumericDefaults(initial);\n      TJSPositionDataUtil.setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({}, initial);\n\n      // Nothing to animate, so return now.\n      // TODO handle in respective animation controls.\n\n      if (keys.length === 0) { return null; }\n\n      /** @type {import('./types-local').AnimationData} */\n      const animationData = {\n         active: true,\n         cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position,\n         resolve: void 0,\n         start: void 0,\n         transformOrigin,\n         transformOriginInitial,\n         quickTo: false\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and make active w/ AnimationManager.\n         setTimeout(() => animationData.active = true, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} options - Tween options.\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] - Custom animation cleanup function.\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static from(position, fromData, options = {}, cleanup)\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return null;\n      }\n\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n\n      // Handle any defined scheduling strategy.\n      if (strategy !== void 0)\n      {\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationScheduler.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationScheduler.from error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, this.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationScheduler.from error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      position.get(this.#data);\n\n      // Determine if any transform origin for the animation is valid.\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n\n      // Given a valid transform origin store the initial transform origin to be restored.\n      const transformOriginInitial = transformOrigin !== void 0 ? this.#data.transformOrigin : void 0;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         // Must use actual key from any aliases.\n         const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n         if (this.#data[animKey] !== void 0 && fromData[key] !== this.#data[animKey])\n         {\n            initial[key] = fromData[key];\n            destination[key] = this.#data[animKey];\n         }\n      }\n\n      ConvertStringData.process(initial, this.#data, el);\n\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\n       transformOriginInitial, cleanup);\n   }\n\n   /**\n    * Provides a tween from given position data to the given position.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The ending position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} options - Tween options.\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] - Custom animation cleanup function.\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static fromTo(position, fromData, toData, options = {}, cleanup)\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return null;\n      }\n\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n\n      // Handle any defined scheduling strategy.\n      if (strategy !== void 0)\n      {\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationScheduler.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, this.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationScheduler.fromTo error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      position.get(this.#data);\n\n      // Determine if any transform origin for the animation is valid.\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n\n      // Given a valid transform origin store the initial transform origin to be restored.\n      const transformOriginInitial = transformOrigin !== void 0 ? this.#data.transformOrigin : void 0;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(`AnimationScheduler.fromTo warning: skipping key ('${\n             key}') from 'fromData' as it is missing in 'toData'.`);\n\n            continue;\n         }\n\n         // Must use actual key from any aliases.\n         const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n         if (this.#data[animKey] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      ConvertStringData.process(initial, this.#data, el);\n      ConvertStringData.process(destination, this.#data, el);\n\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\n       transformOriginInitial, cleanup);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The destination position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} options - Tween options.\n    *\n    * @param {import('./types-local').AnimationCleanupFunction} [cleanup] - Custom animation cleanup function.\n    *\n    * @returns {import('./AnimationControl').AnimationControl | null} An AnimationControl instance or null if none\n    *          created.\n    */\n   static to(position, toData, options = {}, cleanup)\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationScheduler.to error: 'toData' is not an object.`);\n      }\n\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.  TODO: THIS IS REFERENCING APPLICATION OPTIONS.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return null;\n      }\n\n      let { delay = 0, duration = 1, ease = 'cubicOut', strategy, transformOrigin } = options;\n\n      // Handle any defined scheduling strategy.\n      if (strategy !== void 0)\n      {\n         if (this.#handleStrategy(position, strategy) === null) { return null; }\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationScheduler.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationScheduler.to error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, this.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationScheduler.to error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      position.get(this.#data);\n\n      // Determine if any transform origin for the animation is valid.\n      transformOrigin = TJSTransforms.isTransformOrigin(transformOrigin) ? transformOrigin : void 0;\n\n      // Given a valid transform origin store the initial transform origin to be restored.\n      const transformOriginInitial = transformOrigin !== void 0 ? this.#data.transformOrigin : void 0;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         // Must use actual key from any aliases.\n         const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n         if (this.#data[animKey] !== void 0 && toData[key] !== this.#data[animKey])\n         {\n            destination[key] = toData[key];\n            initial[key] = this.#data[animKey];\n         }\n      }\n\n      ConvertStringData.process(destination, this.#data, el);\n\n      return this.#addAnimation(position, initial, destination, duration, el, delay, ease, lerp, transformOrigin,\n       transformOriginInitial, cleanup);\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Handle any defined scheduling strategy allowing existing scheduled animations for the same position instance\n    * to be controlled.\n    *\n    * @param {import('../').TJSPosition} position - The target position instance.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions.strategy} strategy - A scheduling strategy to apply.\n    *\n    * @returns {undefined | null} Returns null to abort scheduling current animation.\n    */\n   static #handleStrategy(position, strategy)\n   {\n      switch (strategy)\n      {\n         case 'cancel':\n            if (AnimationManager.isScheduled(position)) { AnimationManager.cancel(position); }\n            break;\n\n         case 'cancelAll':\n            if (AnimationManager.isScheduled(position))\n            {\n               AnimationManager.cancel(position, AnimationManager.cancelAllFn);\n            }\n            break;\n\n         case 'exclusive':\n            if (AnimationManager.isScheduled(position)) { return null; }\n            break;\n\n         default:\n            console.warn(`AnimationScheduler error: 'strategy' is not 'cancel', 'cancelAll', or 'exclusive'.`);\n            return null;\n      }\n   }\n}\n\n/**\n * @implements {import('./types').AnimationAPI}\n */\nclass AnimationAPI\n{\n   static #getEaseOptions = Object.freeze({ default: false });\n\n   /** @type {import('../data/types').Data.TJSPositionData} */\n   #data;\n\n   /** @type {import('../').TJSPosition} */\n   #position;\n\n   /**\n    * @param {import('../').TJSPosition}       position -\n    *\n    * @param {import('../data/types').Data.TJSPositionData}   data -\n    */\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Returns if there are scheduled animations whether active or pending for this TJSPosition instance.\n    *\n    * @returns {boolean} Are there scheduled animations.\n    */\n   get isScheduled()\n   {\n      return AnimationManager.isScheduled(this.#position);\n   }\n\n   /**\n    * Cancels all animation instances for this TJSPosition instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position, AnimationManager.cancelAllFn);\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation[]} All currently scheduled animation controls for\n    *          this TJSPosition instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} [options] - Optional tween parameters.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   from(fromData, options)\n   {\n      const animationControl = AnimationScheduler.from(this.#position, fromData, options);\n      return animationControl ? animationControl : AnimationControl.voidControl;\n   }\n\n   /**\n    * Provides a tween from given position data to the given position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} fromData - The starting position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The ending position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} [options] - Optional tween parameters.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, options)\n   {\n      const animationControl = AnimationScheduler.fromTo(this.#position, fromData, toData, options);\n      return animationControl ? animationControl : AnimationControl.voidControl;\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {import('../data/types').Data.TJSPositionDataRelative} toData - The destination position.\n    *\n    * @param {import('./types').AnimationAPI.TweenOptions} [options] - Optional tween parameters.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   to(toData, options)\n   {\n      const animationControl = AnimationScheduler.to(this.#position, toData, options);\n      return animationControl ? animationControl : AnimationControl.voidControl;\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<import('./types').AnimationAPI.AnimationKey>}  keys - The keys for quickTo.\n    *\n    * @param {import('./types').AnimationAPI.QuickTweenOptions} [options] - Optional quick tween parameters.\n    *\n    * @returns {import('./types').AnimationAPI.QuickToCallback} quick-to tween function.\n    */\n   quickTo(keys, options = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      let { duration = 1, ease = 'cubicOut' } = options;\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      ease = getEasingFunc(ease, AnimationAPI.#getEaseOptions);\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(\n          `AnimationAPI.quickTo error: 'ease' is not a function or valid Svelte easing function name.`);\n      }\n\n      // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key ('${key}') is not a string.`);\n         }\n\n         if (!TJSPositionDataUtil.isAnimationKey(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         // Must use actual key from any aliases.\n         const value = TJSPositionDataUtil.getDataOrDefault(data, key, true);\n\n         if (value !== null)\n         {\n            destination[key] = value;\n            initial[key] = value;\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({}, initial);\n\n      /** @type {import('./types-local').AnimationData} */\n      const animationData = {\n         active: true,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate: lerp,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0,\n         quickTo: true\n      };\n\n      const quickToCB = /** @type {import('./types').AnimationAPI.QuickToCallback} */ (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n\n            // Must use actual key from any aliases.\n            const animKey = TJSPositionDataUtil.getAnimationKey(key);\n\n            if (data[animKey] !== void 0) { initial[key] = data[animKey]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         // Set initial data for transform values that are often null by default.\n         TJSPositionDataUtil.setNumericDefaults(initial);\n         TJSPositionDataUtil.setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n         animationData.el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n         ConvertStringData.process(destination, data, animationData.el);\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.cancelled = false;\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = globalThis.performance.now();\n\n            animationData.cancelled = false;\n            animationData.current = 0;\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.timeNow - now);\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      quickToCB.options = (optionsCB) => // eslint-disable-line no-shadow\n      {\n         let { duration, ease } = optionsCB;\n\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         ease = getEasingFunc(ease, AnimationAPI.#getEaseOptions);\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(\n             `AnimationAPI.quickTo.options error: 'ease' is not a function or valid Svelte easing function name.`);\n         }\n\n         // TODO: In the future potentially support more interpolation functions besides `lerp`.\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * Provides a implementation for a TJSPosition animation for a group of TJSPosition instances.\n *\n * @implements {import('#runtime/util/animate').BasicAnimation}\n */\nclass AnimationGroupControl\n{\n   /** @type {Set<import('./AnimationControl').AnimationControl>} */\n   #animationControls;\n\n   /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {Set<import('./AnimationControl').AnimationControl>} animationControls - An array of AnimationControl\n    *        instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<import('#runtime/util/animate').BasicAnimationState>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (!CrossWindow.isPromise(this.#finishedPromise))\n      {\n         if (animationControls === null || animationControls === void 0 || animationControls.size === 0)\n         {\n            this.#finishedPromise = /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>} */\n             Promise.resolve({ cancelled: false });\n         }\n         else\n         {\n            /** @type {Promise<import('#runtime/util/animate').BasicAnimationState>[]} */\n            const promises = [];\n\n            for (const animationControl of animationControls) { promises.push(animationControl.finished); }\n\n            this.#finishedPromise = Promise.allSettled(promises).then((results) => {\n               // Check if any promises were rejected or resolved with `cancelled: true`.\n               const anyCancelled = results.some((result) => result.status === 'rejected' ||\n                (result.status === 'fulfilled' && result.value.cancelled));\n\n               // Return a single BasicAnimationState based on the aggregation of individual results.\n               return { cancelled: anyCancelled };\n            });\n         }\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return false; }\n\n      for (const animationControl of animationControls)\n      {\n         if (animationControl.isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return true; }\n\n      for (const animationControl of animationControls)\n      {\n         if (!animationControl.isFinished) { return false; }\n      }\n\n      return true;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0 || animationControls.size === 0) { return; }\n\n      for (const animationControl of animationControls) { animationControl.cancel(); }\n   }\n}\n\n/**\n * Provides a public API for grouping multiple {@link TJSPosition} animations together with the\n * AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the TJSPosition static / group Animation API `instanceof`\n * checks are not done against TJSPosition. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#getPosition}.\n *\n * @see AnimationAPI\n *\n * @implements {import('./types').AnimationGroupAPI}\n */\nclass AnimationGroupAPI\n{\n   /**\n    * Returns the TJSPosition instance for the possible given positionable by checking the instance by checking for\n    * AnimationAPI.\n    *\n    * @param {import('../').TJSPosition | import('../types').TJSPositionTypes.Positionable} positionable - Possible\n    *        position group entry.\n    *\n    * @returns {import('../').TJSPosition | null} Returns actual TJSPosition instance.\n    */\n   static #getPosition(positionable)\n   {\n      if (!isObject(positionable)) { return null; }\n\n      if (positionable.animate instanceof AnimationAPI) { return positionable; }\n\n      if (positionable.position?.animate instanceof AnimationAPI) { return positionable.position; }\n\n      return null;\n   }\n\n   /**\n    * Cancels any animation for given PositionGroup data.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - The position group to cancel.\n    */\n   static cancel(positionGroup)\n   {\n      if (isIterable(positionGroup))\n      {\n         let index = -1;\n\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No TJSPosition instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all TJSPosition animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position group data.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @returns {{\n    *    position: import('../').TJSPosition,\n    *    entry: import('../types').TJSPositionTypes.Positionable | undefined,\n    *    controls: import('#runtime/util/animate').BasicAnimation[]\n    * }[]} Results array.\n    */\n   static getScheduled(positionGroup)\n   {\n      const results = [];\n\n      if (isIterable(positionGroup))\n      {\n         let index = -1;\n\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found at index: ${\n                index}.`);\n\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, entry: actualPosition !== entry ? entry : void 0, controls });\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No TJSPosition instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({\n            position: actualPosition,\n            entry: actualPosition !== positionGroup ? positionGroup : void 0,\n            controls\n         });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides a type guard to test in the given key is an {@link AnimationAPI.AnimationKey}.\n    *\n    * @param {unknown}  key - A key value to test.\n    *\n    * @returns {key is import('./types').AnimationAPI.AnimationKey} Whether the given key is an animation key.\n    */\n   static isAnimationKey(key)\n   {\n      return TJSPositionDataUtil.isAnimationKey(key);\n   }\n\n   /**\n    * Returns the status _for the entire position group_ specified if all position instances of the group are scheduled.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {import('./types').AnimationAPI.ScheduleOptions} [options] - Options.\n    *\n    * @returns {boolean} True if all are scheduled / false if just one position instance in the group is not scheduled.\n    */\n   static isScheduled(positionGroup, options)\n   {\n      if (isIterable(positionGroup))\n      {\n         let index = -1;\n\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found at index: ${index}.`);\n\n               continue;\n            }\n\n            if (!AnimationManager.isScheduled(actualPosition, options)) { return false; }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.isScheduled warning: No TJSPosition instance found.`);\n            return false;\n         }\n\n         if (!AnimationManager.isScheduled(actualPosition, options)) { return false; }\n      }\n\n      return true;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} fromData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.TweenOptions |\n    *    import('./types').AnimationAPI.GroupTweenOptionsCallback\n    * )} [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n    *        options for each instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation} Basic animation control.\n    */\n   static from(positionGroup, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /** @type {Set<import('./AnimationControl').AnimationControl>} */\n      const animationControls = new Set();\n\n      /** @type {import('./types-local').AnimationCleanupFunction} */\n      const cleanupFn = (data) => animationControls.delete(data.control);\n\n      let index = -1;\n\n      /** @type {import('./types').AnimationAPI.GroupCallbackOptions} */\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: 'fromData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\n            if (animationControl) { animationControls.add(animationControl); }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.from warning: No TJSPosition instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualFromData === null || actualFromData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: 'fromData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         const animationControl = AnimationScheduler.from(actualPosition, actualFromData, actualOptions, cleanupFn);\n         if (animationControl) { animationControls.add(animationControl); }\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} fromData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} toData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.TweenOptions |\n    *    import('./types').AnimationAPI.GroupTweenOptionsCallback\n    * )} [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n    *        options for each instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation} Basic animation control.\n    */\n   static fromTo(positionGroup, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /** @type {Set<import('./AnimationControl').AnimationControl>} */\n      const animationControls = new Set();\n\n      /** @type {import('./types-local').AnimationCleanupFunction} */\n      const cleanupFn = (data) => animationControls.delete(data.control);\n\n      let index = -1;\n\n      /** @type {import('./types').AnimationAPI.GroupCallbackOptions} */\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            const animationControl = AnimationScheduler.fromTo(actualPosition, actualFromData, actualToData,\n             actualOptions, cleanupFn);\n\n            if (animationControl) { animationControls.add(animationControl); }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No TJSPosition instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualFromData === null || actualFromData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: 'fromData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualToData === null || actualToData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: 'toData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         const animationControl = AnimationScheduler.fromTo(actualPosition, actualFromData, actualToData,\n          actualOptions, cleanupFn);\n\n         if (animationControl) { animationControls.add(animationControl); }\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {(\n    *    import('../data/types').Data.TJSPositionDataRelative |\n    *    import('./types').AnimationAPI.GroupDataCallback\n    * )} toData - A position data object assigned to all positionable instances or a callback function invoked for\n    *        unique data for each instance.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.TweenOptions |\n    *    import('./types').AnimationAPI.GroupTweenOptionsCallback\n    * )} [options] - Tween options assigned to all positionable instances or a callback function invoked for unique\n    *        options for each instance.\n    *\n    * @returns {import('#runtime/util/animate').BasicAnimation} Basic animation control.\n    */\n   static to(positionGroup, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /** @type {Set<import('./AnimationControl').AnimationControl>} */\n      const animationControls = new Set();\n\n      /** @type {import('./types-local').AnimationCleanupFunction} */\n      const cleanupFn = (data) => animationControls.delete(data.control);\n\n      let index = -1;\n\n      /** @type {import('./types').AnimationAPI.GroupCallbackOptions} */\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, entry: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: 'toData' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            const animationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions, cleanupFn);\n            if (animationControl) { animationControls.add(animationControl); }\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.to warning: No TJSPosition instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualToData === null || actualToData === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: 'toData' callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return AnimationGroupControl.voidControl; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         const animationControl = AnimationScheduler.to(actualPosition, actualToData, actualOptions, cleanupFn);\n         if (animationControl) { animationControls.add(animationControl); }\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `quickTo` animation tweening function for one or more positionable instances as a group.\n    *\n    * @param {import('../types').TJSPositionTypes.PositionGroup} positionGroup - A position group.\n    *\n    * @param {Iterable<import('./types').AnimationAPI.AnimationKey>}  keys - Animation keys to target.\n    *\n    * @param {(\n    *    import('./types').AnimationAPI.QuickTweenOptions |\n    *    import('./types').AnimationAPI.GroupQuickTweenOptionsCallback\n    * )} [options] - Quick tween options assigned to all positionable instances or a callback function invoked for\n    *        unique options for each instance.\n    *\n    * @returns {import('./types').AnimationAPI.GroupQuickToCallback | undefined} quick-to tween function.\n    */\n   static quickTo(positionGroup, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./types').AnimationAPI.QuickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, entry: void 0 };\n\n      let actualOptions = isObject(options) ? options : void 0;\n\n      if (isIterable(positionGroup))\n      {\n         for (const entry of positionGroup)\n         {\n            index++;\n\n            const actualPosition = this.#getPosition(entry);\n\n            if (!actualPosition)\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = actualPosition;\n            callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const actualPosition = this.#getPosition(positionGroup);\n\n         if (!actualPosition)\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No TJSPosition instance found.`);\n            return;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = actualPosition;\n         callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            // Returned data from callback is null / undefined, so skip this position instance.\n            if (actualOptions === null || actualOptions === void 0) { return; }\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: 'options' callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(positionGroup))\n            {\n               for (const entry of positionGroup)\n               {\n                  index++;\n\n                  const actualPosition = this.#getPosition(entry);\n\n                  if (!actualPosition) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = actualPosition;\n                  callbackOptions.entry = actualPosition !== entry ? entry : void 0;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /** @type {boolean} */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const actualPosition = this.#getPosition(positionGroup);\n\n               if (!actualPosition) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = actualPosition;\n               callbackOptions.entry = actualPosition !== positionGroup ? positionGroup : void 0;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: 'toData' callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {import('./types').AnimationAPI.QuickTweenOptions}   [options] - Optional parameters.\n       *\n       * @returns {import('./types').AnimationAPI.QuickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options))\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\nObject.seal(AnimationGroupAPI);\n\n/**\n * @implements {import('./types').PositionStateAPI}\n */\nclass PositionStateAPI\n{\n   /** @type {import('../data/types').Data.TJSPositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, import('../data/types').Data.TJSPositionDataExtra>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {import('../').TJSPosition} */\n   #position;\n\n   /** @type {import('../transform').TJSTransforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Clears all saved position data except any default state.\n    */\n   clear()\n   {\n      for (const key of this.#dataSaved.keys())\n      {\n         if (key !== '#defaultData') { this.#dataSaved.delete(key); }\n      }\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data name.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra | undefined} Any saved position data.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - get error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default position data.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra | undefined} Any saved default position data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * @returns {IterableIterator<string>} The saved position data names / keys.\n    */\n   keys()\n   {\n      return this.#dataSaved.keys();\n   }\n\n   /**\n    * Removes and returns any position data by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra | undefined} Any saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets position instance to default data and invokes set.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [options.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (!isObject(defaultData)) { return false; }\n\n      // Cancel all animations for TJSPosition if there are currently any scheduled.\n      if (this.#position.animate.isScheduled) { this.#position.animate.cancel(); }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // TODO: REFACTOR FOR APPLICATION DIRECT ACCESS.\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available to control\n    * whether the restore action occurs silently (no store / inline styles updates), animates to the stored data, or\n    * simply sets the stored data. Restoring via {@link AnimationAPI.to} allows specification of the duration and\n    * easing along with configuring a Promise to be returned if awaiting the end of the animation.\n    *\n    * @param {object}            options - Parameters\n    *\n    * @param {string}            options.name - Saved data set name.\n    *\n    * @param {boolean}           [options.remove=false] - Deletes data set.\n    *\n    * @param {Iterable<string>}  [options.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [options.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [options.async=false] - If animating return a Promise that resolves with any saved\n    *        data.\n    *\n    * @param {boolean}           [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('#runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function name or\n    *        function.\n    *\n    * @returns {(\n    *    import('../data/types').Data.TJSPositionDataExtra |\n    *    Promise<import('../data/types').Data.TJSPositionDataExtra | undefined> |\n    *    undefined\n    * )} Any saved position data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = 'linear' })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      // Saved data potentially not found, but must still return a Promise when async is true.\n      return async ? Promise.resolve(dataSaved) : dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state. Simply include\n    * extra properties in `options` to save extra data.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {import('../types').TJSPositionTypes.OptionsGet} [optionsGet] - Additional options for\n    *        {@link TJSPosition.get} when serializing position state. By default, `nullable` values are included.\n    *\n    * @returns {import('../data/types').Data.TJSPositionDataExtra} Current position data plus any extra data stored.\n    */\n   save({ name, ...extra }, optionsGet)\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra, optionsGet);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a saved position state. Simply include extra properties in `options` to set extra data.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`TJSPosition - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n\n/**\n * Provides a base {@link System.SystemBase} implementation.\n *\n * @implements {import('svelte/store').Readable}\n *\n * @implements {import('./types').System.SystemBase}\n */\nclass SystemBase\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<SystemBase>[]}\n    */\n   #subscribers = [];\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   /**\n    * @param {object}      [options] - Initial options.\n    *\n    * @param {boolean}     [options.constrain=true] - Initial constrained state.\n    *\n    * @param {HTMLElement} [options.element] - Target element.\n    *\n    * @param {boolean}     [options.enabled=true] - Enabled state.\n    *\n    * @param {boolean}     [options.lock=false] - Lock parameters from being set.\n    *\n    * @param {number}      [options.width] - Manual width.\n    *\n    * @param {number}      [options.height] - Manual height.\n    */\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.constrain = constrain;\n      this.element = element;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   /**\n    * @returns {boolean} The current constrain state.\n    */\n   get constrain() { return this.#constrain; }\n\n   /**\n    * @returns {HTMLElement | undefined | null} Target element.\n    */\n   get element() { return this.#element; }\n\n   /**\n    * @returns {boolean} The current enabled state.\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Get manual height.\n    */\n   get height() { return this.#height; }\n\n   /**\n    * @return {boolean} Get locked state.\n    */\n   get locked() { return this.#lock; }\n\n   /**\n    * @returns {number} Get manual width.\n    */\n   get width() { return this.#width; }\n\n   /**\n    * @param {boolean}  constrain - New constrain state.\n    */\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {HTMLElement | undefined | null} element - Set target element.\n    */\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || A11yHelper.isFocusTarget(element))\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   height - Set manual height.\n    */\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {number}   width - Set manual width.\n    */\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Set manual width & height.\n    *\n    * @param {number}   width - New manual width.\n    *\n    * @param {number}   height - New manual height.\n    */\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<SystemBase>} handler - Callback\n    *        function that is invoked on update / changes. Receives a copy of the TJSPositionData.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscribers.push(handler); // add handler to the array of subscribers\n\n      handler(this);                   // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscribers.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscribers.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers on changes.\n    */\n   #updateSubscribers()\n   {\n      for (let cntr = 0; cntr < this.#subscribers.length; cntr++) { this.#subscribers[cntr](this); }\n   }\n}\n\n/**\n * Provides a {@link System.Initial.InitialSystem} implementation to center an element being positioned.\n *\n * @implements {import('../types').System.Initial.InitialSystem}\n */\nclass Centered extends SystemBase\n{\n   /**\n    * Get the left constraint based on any manual target values or the browser inner width.\n    *\n    * @param {number}   width - Target width.\n    *\n    * @returns {number} Calculated left constraint.\n    */\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   /**\n    * Get the top constraint based on any manual target values or the browser inner height.\n    *\n    * @param {number}   height - Target height.\n    *\n    * @returns {number} Calculated top constraint.\n    */\n   getTop(height)\n   {\n      const boundsHeight = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is\n * the only required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the {@link TJSPosition.validators} getter in the main\n * TJSPosition instance.\n * ```\n * const position = new TJSPosition();\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n *\n * @implements {import('./types').ValidatorAPI}\n */\nclass AdapterValidators\n{\n   /** @type {boolean} */\n   #enabled = true;\n\n   /**\n    * @type {import('./types').ValidatorAPI.ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {Map<import('./types').ValidatorAPI.ValidationFn, import('svelte/store').Unsubscriber>}\n    */\n   #mapUnsubscribe = new Map();\n\n   #updateFn;\n\n   /**\n    * @returns {[AdapterValidators, import('./types').ValidatorAPI.ValidatorData[]]} Returns this and internal storage\n    * for validator adapter.\n    */\n   static create(updateFn)\n   {\n      const validatorAPI = new AdapterValidators();\n\n      validatorAPI.#updateFn = updateFn;\n\n      return [validatorAPI, validatorAPI.#validatorData];\n   }\n\n   /**\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {boolean} Returns the enabled state.\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * @param {boolean}  enabled - Sets enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @yields {import('./types').ValidatorAPI.ValidatorData}\n    * @returns {IterableIterator<import('./types').ValidatorAPI.ValidatorData>} iterator.\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * Adds the given validators.\n    *\n    * @param {...(\n    *    import('./types').ValidatorAPI.ValidatorFn |\n    *    import('./types').ValidatorAPI.ValidatorData\n    * )}   validators - Validators to add.\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      let subscribeCount = 0;\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if ((validatorType !== 'function' && validatorType !== 'object') || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         /** @type {import('./types').ValidatorAPI.ValidatorData} */\n         let data = void 0;\n\n         /** @type {(...args: any[]) => import('svelte/store').Unsubscriber} */\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validate: validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validate !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validate' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validate: validator.validate.bind(validator),\n                  weight: validator.weight || 1\n               };\n\n               subscribeFn = validator.validate.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            const unsubscribe = subscribeFn.call(validator, this.#updateFn);\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Validator has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validate))\n            {\n               throw new Error(\n                'AdapterValidator error: Validator added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validate, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Validators with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an update manually.\n      if (subscribeCount < validators.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Clears / removes all validators.\n    */\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      this.#updateFn();\n   }\n\n   /**\n    * Removes one or more given validators.\n    *\n    * @param {...(\n    *    import('./types').ValidatorAPI.ValidatorFn |\n    *    import('./types').ValidatorAPI.ValidatorData\n    * )}   validators - Validators to remove.\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : isObject(data) ? data.validate : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validate === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Invoke update as a validator was removed.\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {import('./types').ValidatorAPI.RemoveByCallback} callback - Callback function to evaluate each validator\n    *        entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validate);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n\n   /**\n    * Removes any validators with matching IDs.\n    *\n    * @param {...any}   ids - IDs to remove.\n    */\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validate)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validate);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      if (length !== this.#validatorData.length) { this.#updateFn(); }\n   }\n}\n\nclass TransformBounds extends SystemBase\n{\n   static #TRANSFORM_DATA = new TJSTransformData();\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {import('./types').ValidatorAPI.ValidationData}   valData - The associated validation data for position\n    *        updates.\n    *\n    * @returns {import('../../data/types').Data.TJSPositionData} Potentially adjusted position data.\n    */\n   validate(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.width ?? this.element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.height ?? this.element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = clamp(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = clamp(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, TransformBounds.#TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n\n/**\n * Tracks changes to positional data during {@link TJSPosition.set} updates to minimize changes to the element\n * style in {@link UpdateElementManager}.\n */\nclass PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n\n/**\n * Encapsulates internal data from a TJSPosition instance to be manipulated by {@link UpdateElementManager}.\n */\nclass UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from TJSPosition.\n       *\n       * @type {TJSPositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {TJSPositionData}\n       */\n      this.dataSubscribers = Object.seal(new TJSPositionData());\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto' | 'inherit', height: number | 'auto' | 'inherit'}}\n       */\n      this.dimensionData = Object.seal({ width: 0, height: 0 });\n\n      /**\n       * @type {import('./').PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {import('../types-local').OptionsInternal}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this TJSPosition / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {import('../util').TJSPositionStyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {import('../transform').TJSTransforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TJSTransformData}\n       */\n      this.transformData = new TJSTransformData();\n\n      /**\n       * @type {import('svelte/store').Subscriber<import('../data/types').Data.TJSPositionData>[]}\n       */\n      this.subscribers = void 0;\n\n      /**\n       * @type {import('svelte/store').Writable<{width: (number|'auto'), height: (number|'auto')}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {import('svelte/store').Writable<import('../transform/types').TransformAPI.TransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nclass UpdateElementManager\n{\n   /**\n    * Stores the active list of all TJSPosition instances currently updating. The list entries are recycled between\n    * updates.\n    *\n    * @type {[HTMLElement, import('./').UpdateElementData][]}\n    */\n   static list = [];\n\n   /**\n    * Tracks the current position in the list.\n    *\n    * @type {number}\n    */\n   static listCntr = 0;\n\n   static updatePromise;\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./').UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            UpdateElementManager.#updateElementOrtho(el, updateData);\n         }\n         else\n         {\n            UpdateElementManager.#updateElement(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            UpdateElementManager.#updateTransform(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./').UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         UpdateElementManager.#updateElementOrtho(el, updateData);\n      }\n      else\n      {\n         UpdateElementManager.#updateElement(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         UpdateElementManager.#updateTransform(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {import('./').UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = TJSPositionDataUtil.copyData(data, updateData.dataSubscribers);\n\n      const subscribers = updateData.subscribers;\n\n      // Early out if there are no subscribers.\n      if (subscribers.length > 0)\n      {\n         for (let cntr = 0; cntr < subscribers.length; cntr++) { subscribers[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n\n   // Internal Implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Temporary data for validation.\n    *\n    * @type {{width, marginTop, height, marginLeft}}\n    */\n   static #validationData = Object.seal({\n      height: void 0,\n      width: void 0,\n      marginLeft: void 0,\n      marginTop: void 0\n   });\n\n   /**\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link TJSPosition.elementUpdated} to\n    * await on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n    * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n    * element are in sync with the browser and potentially in the future be further throttled.\n    *\n    * @param {HTMLElement} el - The target HTMLElement.\n    *\n    * @param {import('./').UpdateElementData} updateData - Update data.\n    */\n   static #updateElement(el, updateData)\n   {\n      const changeSet = updateData.changeSet;\n      const data = updateData.data;\n\n      if (changeSet.left)\n      {\n         el.style.left = `${data.left}px`;\n      }\n\n      if (changeSet.top)\n      {\n         el.style.top = `${data.top}px`;\n      }\n\n      if (changeSet.zIndex)\n      {\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n      }\n\n      if (changeSet.width)\n      {\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n      }\n\n      if (changeSet.height)\n      {\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n      }\n\n      if (changeSet.transformOrigin)\n      {\n         el.style.transformOrigin = data.transformOrigin;\n      }\n\n      // Update all transforms in order added to transforms object.\n      if (changeSet.transform)\n      {\n         el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n      }\n   }\n\n   /**\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke\n    * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n    * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n    * immediately while updates to the element are in sync with the browser and potentially in the future be further\n    * throttled.\n    *\n    * @param {HTMLElement} el - The target HTMLElement.\n    *\n    * @param {import('./').UpdateElementData} updateData - Update data.\n    */\n   static #updateElementOrtho(el, updateData)\n   {\n      const changeSet = updateData.changeSet;\n      const data = updateData.data;\n\n      if (changeSet.zIndex)\n      {\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n      }\n\n      if (changeSet.width)\n      {\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n      }\n\n      if (changeSet.height)\n      {\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n      }\n\n      if (changeSet.transformOrigin)\n      {\n         el.style.transformOrigin = data.transformOrigin;\n      }\n\n      // Update all transforms in order added to transforms object.\n      if (changeSet.left || changeSet.top || changeSet.transform)\n      {\n         el.style.transform = updateData.transforms.getCSSOrtho(data);\n      }\n   }\n\n   /**\n    * Updates the applied transform data and sets the readble `transform` store.\n    *\n    * @param {HTMLElement} el - The target HTMLElement.\n    *\n    * @param {import('./').UpdateElementData} updateData - Update element data.\n    */\n   static #updateTransform(el, updateData)\n   {\n      const validationData = this.#validationData;\n\n      validationData.height = updateData.data.height !== 'auto' && updateData.data.height !== 'inherit' ?\n       updateData.data.height : updateData.styleCache.offsetHeight;\n\n      validationData.width = updateData.data.width !== 'auto' && updateData.data.height !== 'inherit' ?\n       updateData.data.width : updateData.styleCache.offsetWidth;\n\n      validationData.marginLeft = updateData.styleCache.marginLeft;\n\n      validationData.marginTop = updateData.styleCache.marginTop;\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      updateData.transforms.getData(updateData.data, updateData.transformData, validationData);\n\n      updateData.storeTransform.set(updateData.transformData);\n   }\n}\n\n/**\n * Caches computed styles of a {@link TJSPosition} target element.\n */\nclass TJSPositionStyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {import('#runtime/util/dom/observer').ResizeObserverData.ResizeObject}\n       */\n      this.resizeObserved = Object.seal({\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      });\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {(import('svelte/store').Writable<import('#runtime/util/dom/observer').ResizeObserverData.ResizeObject>)}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeObservable: writable(false),\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (A11yHelper.isFocusTarget(this.el))\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`TJSPositionStyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (A11yHelper.isFocusTarget(this.el))\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`TJSPositionStyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (A11yHelper.isFocusTarget(this.el) && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = StyleParse.pixels(el.style.marginLeft) ?? StyleParse.pixels(this.computed.marginLeft);\n      this.marginTop = StyleParse.pixels(el.style.marginTop) ?? StyleParse.pixels(this.computed.marginTop);\n      this.maxHeight = StyleParse.pixels(el.style.maxHeight) ?? StyleParse.pixels(this.computed.maxHeight);\n      this.maxWidth = StyleParse.pixels(el.style.maxWidth) ?? StyleParse.pixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = StyleParse.pixels(el.style.minHeight) ?? StyleParse.pixels(this.computed.minHeight);\n      this.minWidth = StyleParse.pixels(el.style.minWidth) ?? StyleParse.pixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n\n/**\n * Provides an advanced compound store for positioning elements dynamically including an optimized pipeline for updating\n * an associated element. Essential tweening / animation is supported in addition to a validation API to constrain\n * positional updates.\n *\n * @implements {import('./types').TJSPositionTypes.TJSPositionWritable}\n */\nclass TJSPosition\n{\n   /**\n    * Public API for {@link TJSPosition.Initial}.\n    *\n    * @type {Readonly<import('./types').TJSPositionTypes.PositionInitial>}\n    */\n   static #positionInitial = Object.freeze({\n      browserCentered: new Centered({ lock: true }),\n      Centered\n   });\n\n   /**\n    * Public API for {@link TJSPosition.Validators}\n    *\n    * @type {Readonly<import('./types').TJSPositionTypes.PositionValidators>}\n    */\n   static #positionValidators = Object.freeze({\n      TransformBounds,\n      transformWindow: new TransformBounds({ lock: true })\n   });\n\n   /**\n    * Stores all position data / properties.\n    *\n    * @type {TJSPositionData}\n    */\n   #data = Object.seal(new TJSPositionData());\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {import('./animation/types').AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Provides a way to turn on / off the position handling.\n    *\n    * @type {boolean}\n    */\n   #enabled = true;\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {import('./types-local').OptionsInternal}\n    */\n   #options = {\n      calculateTransform: false,\n      initial: void 0,\n      ortho: true,\n      transformSubscribed: false,\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {import('./types').TJSPositionTypes.PositionParent}\n    */\n   #parent;\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * Tracks the current state if this position instance is a candidate for resize observation by the `resizeObserver`\n    * action. This is `true` when `width` or `height` is `auto` or `inherit`.\n    *\n    * @type {boolean}\n    */\n   #resizeObservable = false;\n\n   /**\n    * @type {import('./types').TJSPositionTypes.Stores}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {TJSPositionStyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<import('./data/types').Data.TJSPositionData>[]}\n    */\n   #subscribers = [];\n\n   /**\n    * @type {TJSTransforms}\n    */\n   #transforms = new TJSTransforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {import('./system/validators/types').ValidatorAPI.ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {import('./animation/types').AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {import('./data/types').Data.TJSPositionDataConstructor} TJSPositionData constructor.\n    */\n   static get Data() { return TJSPositionData; }\n\n   /**\n    * @returns {Readonly<import('./types').TJSPositionTypes.PositionInitial>} TJSPosition default initial helpers.\n    */\n   static get Initial() { return this.#positionInitial; }\n\n   /**\n    * @returns {import('./system/types').System.SystemBaseConstructor} `SystemBase` constructor.\n    */\n   static get SystemBase() { return SystemBase; }\n\n   /**\n    * Returns TJSTransformData class / constructor.\n    *\n    * @returns {import('./transform/types').TransformAPI.TransformDataConstructor} TransformData class /\n    *          constructor.\n    */\n   static get TransformData() { return TJSTransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * @returns {Readonly<import('./types').TJSPositionTypes.PositionValidators>} Available validators.\n    */\n   static get Validators() { return this.#positionValidators; }\n\n   /**\n    * Returns a list of supported transform origins.\n    *\n    * @returns {Readonly<import('./transform/types').TransformAPI.TransformOrigin[]>} The supported transform origin\n    *          strings.\n    */\n   static get transformOrigins()\n   {\n      return TJSTransforms.transformOrigins;\n   }\n\n   /**\n    * Convenience to copy from source to target of two TJSPositionData like objects. If a target is not supplied a new\n    * {@link TJSPositionData} instance is created.\n    *\n    * @param {Partial<import('./data/types').Data.TJSPositionData>}  source - The source instance to copy from.\n    *\n    * @param {import('./data/types').Data.TJSPositionData}  [target] - Target TJSPositionData like object; if one is not\n    *        provided a new instance is created.\n    *\n    * @returns {import('./data/types').Data.TJSPositionData} The target instance with all TJSPositionData fields.\n    */\n   static copyData(source, target)\n   {\n      return TJSPositionDataUtil.copyData(source, target);\n   }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators. The position parent is not\n    * copied and a new one must be set manually via the {@link TJSPosition.parent} setter.\n    *\n    * @param {TJSPosition} position - A position instance.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsCtorAll}   [options] - Unique new options to set.\n    *\n    * @returns {TJSPosition} A duplicate position instance.\n    */\n   static duplicate(position, options = {})\n   {\n      if (!(position instanceof TJSPosition)) { throw new TypeError(`'position' is not an instance of TJSPosition.`); }\n\n      const newPosition = new TJSPosition(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {(\n    *    import('./types').TJSPositionTypes.PositionParent |\n    *    import('./types').TJSPositionTypes.OptionsCtorAll\n    * )} [parentOrOptions] - A  potential parent element or object w/ `elementTarget` accessor. You may also forego\n    *    setting the parent and pass in the options object.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsCtorAll}  [options] - The options object.\n    */\n   constructor(parentOrOptions, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parentOrOptions))\n      {\n         options = parentOrOptions;\n      }\n      else\n      {\n         this.#parent = /** @type {import('./types').TJSPositionTypes.PositionParent} */ parentOrOptions;\n      }\n\n      this.#styleCache = new TJSPositionStyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscribers = this.#subscribers;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      // Set TJSPosition options -------------------------------------------------------------------------------------\n\n      if (typeof options?.calculateTransform === 'boolean')\n      {\n         this.#options.calculateTransform = options.calculateTransform;\n      }\n\n      if (typeof options?.ortho === 'boolean') { this.#options.ortho = options.ortho; }\n\n      // Initialize stores -------------------------------------------------------------------------------------------\n\n      this.#stores = Object.freeze({\n         // The main properties for manipulating TJSPosition.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeObservable: { subscribe: this.#styleCache.stores.resizeObservable.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      });\n\n      /**\n       * Define 'values' getter to retrieve static transform origins.\n       */\n      Object.defineProperty(this.#stores.transformOrigin, 'values', {\n         get: () => TJSPosition.transformOrigins\n      });\n\n      // When resize change from any applied `resizeObserver` action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' or `inherit` for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (A11yHelper.isFocusTarget(el) && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set();\n         }\n      });\n\n      [this.#validators, this.#validatorData] = AdapterValidators.create(() => this.set());\n\n      if (options?.initial)\n      {\n         const initial = options.initial;\n\n         if (typeof initial?.getLeft !== 'function' || typeof initial?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initial = initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator))\n         {\n            this.validators.add(...options.validator);\n         }\n         else\n         {\n            /**\n             * @type {(\n             *    import('./system/validators/types').ValidatorAPI.ValidatorFn |\n             *    import('./system/validators/types').ValidatorAPI.ValidatorData\n             * )}\n             */\n            const validatorFn = options.validator;\n            this.validators.add(validatorFn);\n         }\n      }\n\n      Object.seal(this);\n\n      // Set any remaining position data.\n      if (isObject(options)) { this.set(options); }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {import('./animation/types').AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {Readonly<{width: number | 'auto' | 'inherit', height: number | 'auto' | 'inherit'}>} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the enabled state.\n    *\n    * @returns {boolean} Enabled state.\n    */\n   get enabled()\n   {\n      return this.#enabled;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement | undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link TJSPositionTypes.PositionParent} instance.\n    *\n    * @returns {import('./types').TJSPositionTypes.PositionParent} The current position parent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {import('./state/types').PositionStateAPI} TJSPosition state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {import('./types').TJSPositionTypes.Stores} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {import('./transform/types').TransformAPI.TransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {import('./system/validators/types').ValidatorAPI} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the enabled state.\n    *\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean')\n      {\n         throw new TypeError(`'enabled' is not a boolean.`);\n      }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Sets the associated {@link TJSPositionTypes.PositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {import('./types').TJSPositionTypes.PositionParent | undefined} parent - A PositionParent instance or\n    *        undefined to disassociate\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !A11yHelper.isFocusTarget(parent) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number | 'auto' | 'inherit' | null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number | null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number | null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number | null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number | null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number | null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number | null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number | null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number | null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number | null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number | null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number | null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {import('./transform/types').TransformAPI.TransformOrigin | null} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number | null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number | null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number | null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number | 'auto' | 'inherit' | null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number | null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number | 'auto' | 'inherit' | null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number | string | null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number | string | null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number | string | null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number | string | null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number | string | null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number | string | null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number | string | null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number | string | null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number | string | null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number | string | null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number | string | null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {import('./transform/types').TransformAPI.TransformOrigin} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (TJSTransforms.transformOrigins.includes(transformOrigin))\n      {\n         this.#stores.transformOrigin.set(transformOrigin);\n      }\n   }\n\n   /**\n    * @param {number | string | null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number | string | null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number | string | null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number | 'auto' | 'inherit' | null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number | string | null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position data to given object `data` object. By default, `null` position data is not assigned.\n    * Other options allow configuration of the data assigned including setting default numeric values for any properties\n    * that are null.\n    *\n    * @param {object}  [data] - Target to assign current position data.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsGet}   [options] - Defines options for specific keys and\n    *        substituting null for numeric default values. By default, nullable keys are included.\n    *\n    * @returns {Partial<import('./data/types').Data.TJSPositionData>} Passed in object with current position data.\n    */\n   get(data = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const nullable = options?.nullable ?? true;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         for (const key of keys)\n         {\n            // Convert any null values to numeric defaults if `numeric` is true.\n            data[key] = numeric ? TJSPositionDataUtil.getDataOrDefault(this, key) : this[key];\n\n            // Potentially remove null keys.\n            if (!nullable && data[key] === null) { delete data[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         return data;\n      }\n      else\n      {\n         data = Object.assign(data, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { TJSPositionDataUtil.setNumericDefaults(data); }\n\n         if (!nullable)\n         {\n            for (const key in data)\n            {\n               if (data[key] === null) { delete data[key]; }\n            }\n         }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {import('./data/types').Data.TJSPositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition}. This allows position to be fully\n    * reactive and in control of updating inline styles for a connected {@link HTMLElement}.\n    *\n    * The initial set call with a target element will always set width / height as this is necessary for correct\n    * calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them via the validator API available from\n    * {@link TJSPosition.validators}.\n    *\n    * Updates to any target element are decoupled from the underlying TJSPosition data. This method returns this\n    * instance that you can then await on the target element inline style update by using\n    * {@link TJSPosition.elementUpdated}.\n    *\n    * Relative updates to any property of {@link TJSPositionData} are possible by specifying properties as strings.\n    * This string should be in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n    * {@link TJSPosition.set} will apply the `addition`, `subtraction`, or `multiplication` operation specified against\n    * the current value of the given property. Please see {@link Data.TJSPositionDataRelative} for a detailed\n    * description.\n    *\n    * @param {import('./data/types').Data.TJSPositionDataRelative} [position] - TJSPosition data to set.\n    *\n    * @param {import('./types').TJSPositionTypes.OptionsSet} [options] - Additional options.\n    *\n    * @returns {TJSPosition} This TJSPosition instance.\n    */\n   set(position = {}, options)\n   {\n      if (!isObject(position)) { throw new TypeError(`TJSPosition - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if not enabled.\n      if (!this.#enabled)\n      {\n         return this;\n      }\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      const immediateElementUpdate = options?.immediateElementUpdate ?? false;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = A11yHelper.isFocusTarget(parent) ? parent : parent?.elementTarget;\n      const el = A11yHelper.isFocusTarget(targetEl) && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            ;\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any string position data to numeric inputs.\n         ConvertStringData.process(position, this.#data, el);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? clamp(position.scale, 0, 1000) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && TJSTransforms.transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      const widthIsObservable = position.width === 'auto' || position.width === 'inherit';\n\n      if (Number.isFinite(position.width) || widthIsObservable || position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width)\n         {\n            data.width = position.width;\n            changeSet.width = true;\n         }\n      }\n\n      const heightIsObservable = position.height === 'auto' || position.height === 'inherit';\n\n      if (Number.isFinite(position.height) || heightIsObservable || position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      // Potentially update the `resizeObservable` store when the state of `width` or `height` changes between\n      // `auto` / `inherit` to a number or null.\n      const resizeObservable = widthIsObservable || heightIsObservable;\n      if (this.#resizeObservable !== resizeObservable)\n      {\n         this.#resizeObservable = resizeObservable;\n         // Set store on next clock tick.\n         // setTimeout(() => this.#styleCache.stores.resizeObservable.set(resizeObservable), 0);\n         this.#styleCache.stores.resizeObservable.set(resizeObservable);\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (!isObject(defaultData)) { this.#state.save({ name: '#defaultData', ...Object.assign({}, data) }); }\n\n         // If `immediateElementUpdate` is true then update the element immediately. This is for rAF based library\n         // integrations like GSAP and updates coming from AnimationManager.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(globalThis.performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<Readonly<import('./data/types').Data.TJSPositionData>>} handler -\n    *        Callback function that is invoked on update / changes. Receives a readonly copy of the TJSPositionData.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscribers.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscribers.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscribers.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Provides the {@link Writable} store `update` method. Receive and return a {@link TJSPositionData} instance to\n    * update the position state. You may manipulate numeric properties by providing relative adjustments described in\n    * {@link TJSPositionDataRelative}.\n    *\n    * @param {import('svelte/store').Updater<import('./data/types').Data.TJSPositionDataRelative>} updater -\n    */\n   update(updater)\n   {\n      const result = updater(this.get());\n\n      if (!isObject(result)) { throw new TypeError(`'result' of 'updater' is not an object.`); }\n\n      this.set(result);\n   }\n\n   // Internal Implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Temporary data storage for `TJSPosition.#updatePosition`.\n    *\n    * @type {TJSPositionData}\n    */\n   static #updateDataCopy = Object.seal(new TJSPositionData());\n\n   /**\n    * Temporary data storage for `TJSPosition.#updatePosition`.\n    *\n    * @type {import('./system/validators/types').ValidatorAPI.ValidationData}\n    */\n   static #validationData = Object.seal({\n      position: void 0,\n      parent: void 0,\n      el: void 0,\n      computed: void 0,\n      transforms: void 0,\n      height: void 0,\n      width: void 0,\n      marginLeft: void 0,\n      marginTop: void 0,\n      maxHeight: void 0,\n      maxWidth: void 0,\n      minHeight: void 0,\n      minWidth: void 0,\n      rest: void 0\n   });\n\n   /**\n    * @param {import('./data/types').Data.TJSPositionDataRelative} data -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {TJSPositionStyleCache} styleCache -\n    *\n    * @returns {null | import('./data/types').Data.TJSPositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = TJSPositionDataUtil.copyData(this.#data, TJSPosition.#updateDataCopy);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (width !== void 0 || el.style.width === '')\n      {\n         const widthValid = width === null || Number.isFinite(width);\n\n         if (width === 'auto' || (currentPosition.width === 'auto' && !widthValid))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && !widthValid))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (height !== void 0 || el.style.height === '')\n      {\n         const heightValid = height === null || Number.isFinite(height);\n\n         if (height === 'auto' || (currentPosition.height === 'auto' && !heightValid))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && !heightValid))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options?.initial?.getLeft === 'function' ?\n          this.#options.initial.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options?.initial?.getTop === 'function' ?\n          this.#options.initial.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? clamp(scale, 0, 1000) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = TJSTransforms.transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (this.#validators.enabled && validatorData.length)\n      {\n         const validationData = TJSPosition.#validationData;\n\n         validationData.parent = parent;\n\n         validationData.el = el;\n\n         validationData.computed = styleCache.computed;\n\n         validationData.transforms = this.#transforms;\n\n         validationData.height = height;\n\n         validationData.width = width;\n\n         validationData.marginLeft = styleCache.marginLeft;\n\n         validationData.marginTop = styleCache.marginTop;\n\n         validationData.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         validationData.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         validationData.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         validationData.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            validationData.position = currentPosition;\n            validationData.rest = rest;\n            currentPosition = validatorData[cntr].validate(validationData);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nexport { TJSPosition, applyPosition, draggable };\n//# sourceMappingURL=index.js.map\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/dom/style';\n\nexport const cssVariables = new TJSStyleManager({ docKey: '#__trl-root-styles', version: 1 });\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/dom/style';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an instance of {@link ResizeObserver} that can manage multiple elements and notify a wide range of\n * {@link ResizeObserverData.ResizeTarget} listeners. Offset width and height is also provided through caching the\n * margin and padding styles of the target element.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /** @type {Map<HTMLElement, import('./types-local').ResizeObserverSubscriber[]>} */\n   #elMap = new Map();\n\n   /** @type {ResizeObserver} */\n   #resizeObserver;\n\n   /**\n    * Defines the various shape / update type of the given target.\n    *\n    * @type {{ [key: string]: number }}\n    */\n   static #updateTypes = Object.freeze({\n      none: 0,\n      attribute: 1,\n      function: 2,\n      resizeObserved: 3,\n      setContentBounds: 4,\n      setDimension: 5,\n      storeObject: 6,\n      storesObject: 7\n   });\n\n   constructor()\n   {\n      this.#resizeObserver = new ResizeObserver((entries) =>\n      {\n         for (const entry of entries)\n         {\n            const subscribers = this.#elMap.get(entry?.target);\n\n            if (Array.isArray(subscribers))\n            {\n               const contentWidth = entry.contentRect.width;\n               const contentHeight = entry.contentRect.height;\n\n               for (const subscriber of subscribers)\n               {\n                  ResizeObserverManager.#updateSubscriber(subscriber, contentWidth, contentHeight);\n               }\n            }\n         }\n      });\n   }\n\n   /**\n    * Add an {@link HTMLElement} and {@link ResizeObserverData.ResizeTarget} instance for monitoring. Create cached\n    * style attributes for the given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} target - A target that contains one of several\n    *        mechanisms for updating resize data.\n    */\n   add(el, target)\n   {\n      if (!CrossWindow.isHTMLElement(el))\n      {\n         throw new TypeError(`ResizeObserverManager.add error: 'el' is not a HTMLElement.`);\n      }\n\n      // Verify that this target is not already added for this element.\n      if (this.#hasTarget(el, target)) { return; }\n\n      const updateType = ResizeObserverManager.#getUpdateType(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`ResizeObserverManager.add error: 'target' is not a valid ResizeObserverManager target.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      /** @type {import('./types-local').ResizeObserverSubscriber} */\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (this.#elMap.has(el))\n      {\n         const subscribers = this.#elMap.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         this.#elMap.set(el, [data]);\n      }\n\n      this.#resizeObserver.observe(el);\n   }\n\n   /**\n    * Clears and unobserves all currently tracked elements and managed targets.\n    */\n   clear()\n   {\n      for (const el of this.#elMap.keys()) { this.#resizeObserver.unobserve(el); }\n\n      this.#elMap.clear();\n   }\n\n   /**\n    * Removes all {@link ResizeObserverData.ResizeTarget} instances for the given element from monitoring when just an\n    * element is provided otherwise removes a specific target from the monitoring map. If no more targets remain then\n    * the element is removed from monitoring.\n    *\n    * @param {HTMLElement} el - Element to remove from monitoring.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to remove from monitoring.\n    */\n   remove(el, target = void 0)\n   {\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         // Remove specific target from subscribers.\n         if (target !== void 0)\n         {\n            const index = subscribers.findIndex((entry) => entry.target === target);\n            if (index >= 0)\n            {\n               subscribers.splice(index, 1);\n            }\n         }\n         else\n         {\n            // Remove all subscribers.\n            subscribers.length = 0;\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            this.#elMap.delete(el);\n            this.#resizeObserver.unobserve(el);\n         }\n      }\n   }\n\n   /**\n    * Provides a function that when invoked with an element updates the cached styles for each subscriber of the\n    * element.\n    *\n    * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n    * to update the cache if you change border or padding attributes of the element.\n    *\n    * @param {HTMLElement} el - A HTML element.\n    */\n   updateCache(el)\n   {\n      const subscribers = this.#elMap.get(el);\n\n      if (Array.isArray(subscribers))\n      {\n         const computed = globalThis.getComputedStyle(el);\n\n         // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n         // Used to create the offset width & height values from the context box ResizeObserver provides.\n         const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n         const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n         const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n         const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n         const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ??\n          StyleParse.pixels(computed.paddingBottom) ?? 0;\n         const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n         const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n         const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n         const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n         const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n         for (const subscriber of subscribers)\n         {\n            subscriber.styles.additionalWidth = additionalWidth;\n            subscriber.styles.additionalHeight = additionalHeight;\n            ResizeObserverManager.#updateSubscriber(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n         }\n      }\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget}  target - The target instance.\n    *\n    * @returns {number} Update type value.\n    */\n   static #getUpdateType(target)\n   {\n      if (typeof target?.resizeObserved === 'function') { return this.#updateTypes.resizeObserved; }\n      if (typeof target?.setDimension === 'function') { return this.#updateTypes.setDimension; }\n      if (typeof target?.setContentBounds === 'function') { return this.#updateTypes.setContentBounds; }\n\n      const targetType = typeof target;\n\n      // Does the target have resizeObserved writable store?\n      if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n      {\n         if (isWritableStore(target.resizeObserved))\n         {\n            return this.#updateTypes.storeObject;\n         }\n\n         // Now check for a child stores object which is a common TRL pattern for exposing stores.\n         const stores = target?.stores;\n         if (isObject(stores) || typeof stores === 'function')\n         {\n            if (isWritableStore(stores.resizeObserved))\n            {\n               return this.#updateTypes.storesObject;\n            }\n         }\n      }\n\n      if (targetType !== null && targetType === 'object') { return this.#updateTypes.attribute; }\n\n      if (targetType === 'function') { return this.#updateTypes.function; }\n\n      return this.#updateTypes.none;\n   }\n\n   /**\n    * Determines if a given element and target is already being observed.\n    *\n    * @param {HTMLElement} el - A HTMLElement.\n    *\n    * @param {import('./types').ResizeObserverData.ResizeTarget} [target] - A specific target to find.\n    *\n    * @returns {boolean} Whether the target is already being tracked for the given element.\n    */\n   #hasTarget(el, target)\n   {\n      if (target === void 0 || target === null) { return false; }\n\n      const subscribers = this.#elMap.get(el);\n      if (Array.isArray(subscribers))\n      {\n         return subscribers.findIndex((entry) => entry.target === target) >= 0;\n      }\n\n      return false;\n   }\n\n   /**\n    * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n    * the content values + cached styles.\n    *\n    * @param {import('./types-local').ResizeObserverSubscriber} subscriber - Internal data about subscriber.\n    *\n    * @param {number|undefined}  contentWidth - ResizeObserver `contentRect.width` value or undefined.\n    *\n    * @param {number|undefined}  contentHeight - ResizeObserver `contentRect.height` value or undefined.\n    */\n   static #updateSubscriber(subscriber, contentWidth, contentHeight)\n   {\n      const styles = subscriber.styles;\n\n      subscriber.contentWidth = contentWidth;\n      subscriber.contentHeight = contentHeight;\n\n      const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n      const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n      const target = subscriber.target;\n\n      switch (subscriber.updateType)\n      {\n         case this.#updateTypes.attribute:\n            target.contentWidth = contentWidth;\n            target.contentHeight = contentHeight;\n            target.offsetWidth = offsetWidth;\n            target.offsetHeight = offsetHeight;\n            break;\n\n         case this.#updateTypes.function:\n            target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.resizeObserved:\n            target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setContentBounds:\n            target.setContentBounds?.(contentWidth, contentHeight);\n            break;\n\n         case this.#updateTypes.setDimension:\n            target.setDimension?.(offsetWidth, offsetHeight);\n            break;\n\n         case this.#updateTypes.storeObject:\n            target.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n\n         case this.#updateTypes.storesObject:\n            target.stores.resizeObserved.update((object) =>\n            {\n               object.contentHeight = contentHeight;\n               object.contentWidth = contentWidth;\n               object.offsetHeight = offsetHeight;\n               object.offsetWidth = offsetWidth;\n\n               return object;\n            });\n            break;\n      }\n   }\n}\n\nexport { ResizeObserverManager };\n//# sourceMappingURL=index.js.map\n","import { ResizeObserverManager } from '@typhonjs-fvtt/runtime/util/dom/observer';\n\n/**\n * Provides a single global ResizeObserverManager instance for the resizeObserver action.\n *\n * @type {ResizeObserverManager}\n */\nconst resizeObserverActionManager = new ResizeObserverManager();\n\n/**\n * Provides an action to monitor the given {@link HTMLElement} node with {@link ResizeObserver} via\n * {@link ResizeObserverManager} posting width / height changes to the {@link ResizeObserverData.ResizeTarget} in\n * various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes directly set on target.\n * - target is a function; the function invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget} target - A\n *        {@link ResizeObserverManager} target to update with observed width & height changes.\n *\n * @returns {(import('svelte/action').ActionReturn<\n *   import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget\n * >)} The action lifecycle methods.\n *\n * @see https://github.com/sveltejs/svelte/issues/4233\n */\nfunction resizeObserver(node, target)\n{\n   resizeObserverActionManager.add(node, target);\n\n   return {\n      /**\n       * @param {import('#runtime/util/dom/observer').ResizeObserverData.ResizeTarget} newTarget - A\n       *        {@link ResizeObserverManager} target to update with observed width & height changes.\n       */\n      update: (newTarget) =>\n      {\n         resizeObserverActionManager.remove(node, target);\n         target = newTarget;\n         resizeObserverActionManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         resizeObserverActionManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - A HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   resizeObserverActionManager.updateCache(el);\n};\n\nexport { resizeObserver };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an action to apply CSS style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {{ [key: string]: string | null }}  properties - Hyphen case CSS property key / value object of properties\n *        to set.\n *\n * @returns {import('svelte/action').ActionReturn<{ [key: string]: string | null }>} Lifecycle functions.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (!isObject(properties)) { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      /**\n       * @param {{ [key: string]: string | null }}  newProperties - Key / value object of properties to set.\n       */\n      update: (newProperties) =>\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\nexport { applyStyles };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Applies the given action dynamically allowing the hosted action to be updated reactively while still appropriately\n * handling the action lifecycle methods.\n *\n * @param {HTMLElement} node - The node associated with the action.\n *\n * @param {import('./types').DynamicActionOptions} options - Defines the action to dynamically mount.\n *\n * @returns {import('svelte/action').ActionReturn<import('./types').DynamicActionOptions>} The action lifecycle\n *          methods.\n */\nfunction dynamicAction(node, { action, data } = {})\n{\n   let actionResult;\n\n   if (typeof action === 'function') { actionResult = action(node, data); }\n\n   return {\n      /**\n       * @param {import('./types').DynamicActionOptions} newOptions - Defines the new action to dynamically mount.\n       */\n      update: (newOptions) =>\n      {\n         // If `newOptions` is not an object then destroy any old action.\n         if (!isObject(newOptions))\n         {\n            actionResult?.destroy?.();\n            action = void 0;\n            data = void 0;\n\n            return;\n         }\n\n         const { action: newAction, data: newData } = newOptions;\n\n         if (typeof newAction !== 'function')\n         {\n            console.warn(`dynamicAction.update warning: Aborting as 'action' is not a function.`);\n            return;\n         }\n\n         const hasNewData = newData !== data;\n\n         if (hasNewData) { data = newData; }\n\n         if (newAction !== action)\n         {\n            // If the action changes destroy the previous action and apply the new one.\n            actionResult?.destroy?.();\n\n            action = newAction;\n            actionResult = action(node, data);\n         }\n         else if (hasNewData)\n         {\n            actionResult?.update?.(data);\n         }\n      },\n\n      destroy: () =>\n      {\n         actionResult?.destroy?.();\n\n         action = void 0;\n         data = void 0;\n         actionResult = void 0;\n      }\n   };\n}\n\nexport { dynamicAction };\n//# sourceMappingURL=index.js.map\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { getEasingFunc } from '@typhonjs-fvtt/runtime/svelte/easing';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing='linear'] - Easing function name or\n *        function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = getEasingFunc(options.easing);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both\n * transitions, however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing='linear'] - Easing function name or\n *        function to apply to both slide & fade transitions.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingFade='linear'] - Easing function name or\n *        function to apply to the fade transition.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingRotate='linear'] - Easing function name or\n *        function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = getEasingFunc(options.easingFade ?? options.easing);\n   const easingRotate = getEasingFunc(options.easingRotate ?? options.easing);\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {'x' | 'y'}   [options.axis] - The sliding axis.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easing=linear] - Easing function name or\n *        function to apply to both slide & fade transitions.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingFade=linear] - Easing function name or\n *        function to apply to the fade transition.\n *\n * @param {import('#runtime/svelte/easing').EasingReference}   [options.easingSlide=linear] - Easing function name or\n *        function to apply to the slide transition.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = getEasingFunc(options.easingFade ?? options.easing);\n   const slideEasing = getEasingFunc(options.easingSlide ?? options.easing);\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node, { axis: options.axis });\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, ...rest: any[]) => import('svelte/transition').TransitionConfig} fn -\n *        A Svelte transition function.\n *\n * @returns {(\n *    node: Element,\n *    data: { from: DOMRect, to: DOMRect },\n *    ...rest: any\n * ) => import('svelte/animation').AnimationConfig} - Transition function converted to an animation.\n */\nfunction toAnimation(fn)\n{\n   return (node, animations, ...rest) => fn(node, ...rest);\n}\n\n/**\n * Provides static data useful for handling custom props / options to components that allow dynamic configuration of\n * transitions. This is used in all application shells and components that have configurable transitions.\n *\n * @ignore\n */\nclass TJSDefaultTransition\n{\n   static #options = {};\n\n   static #default = () => void 0;\n\n   /**\n    * @returns {() => undefined} Default empty transition.\n    */\n   static get default() { return this.#default; }\n\n   /**\n    * @returns {{}} Default empty options.\n    */\n   static get options() { return this.#options; }\n}\n\nexport { TJSDefaultTransition, rotate, rotateFade, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { writable } from 'svelte/store';\n\n/**\n * Provides the internal context to all application shells.\n *\n * @implements {import('./types').AppShell.Context.Internal}\n *\n * @internal\n */\nexport class AppShellContextInternal\n{\n   /** @type {import('./types').AppShell.Context.Internal.stores} */\n   #stores;\n\n   constructor()\n   {\n      this.#stores = {\n         elementContent: writable(void 0),\n         elementRoot: writable(void 0)\n      };\n\n      Object.freeze(this.#stores);\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {import('./types').AppShell.Context.Internal.stores} The internal context stores for `elementContent` /\n    *          `elementRoot`\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n}\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = !isObject(data) ? globalThis.game.i18n.localize(stringId) :\n    globalThis.game.i18n.format(stringId, data);\n\n   return result !== void 0 ? result : '';\n}\n\nexport { localize };\n//# sourceMappingURL=index.js.map\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link globalThis.ApplicationHeaderButton} type.\n    * Additionally, a `title` field is supported to give a tool tip for the button. For backward compatibility\n    * `onclick` is supported, but for uniformity across TRL defining an `onPress` function is recommended. If defined\n    * it is invoked when the button is clicked or `Enter` key pressed and state is updated accordingly.\n    *\n    * TRL also supports the following extra button data:\n    *\n    * - {keyCode='Enter'}           keyCode: A string conforming to `KeyboardEvent.code` to activate `onPress` callback.\n    *\n    * - {keepMinimized=false}       keepMinimized: When true the button is not removed when app minimized.\n    *\n    * - {Function}                  onContextMenu: Invoked when right mouse button or contextmenu key is pressed.\n    *\n    * - {Function}                  onPress: Invoked when left mouse button or `keyCode` key is pressed.\n    *\n    * - {{ [key: string]: string | null }}   styles: Additional inline styles to apply to button.\n    *\n    * - {string}                    title: Tooltip title.\n    *\n    * @componentDocumentation\n    * @internal\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action/dom/style';\n   import { localize }      from '@typhonjs-fvtt/runtime/util/i18n';\n   import { isObject }      from '@typhonjs-fvtt/runtime/util/object';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   $: title = isObject(button) && typeof button.title === 'string' ? localize(button.title) : '';\n\n   // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n   $: icon = isObject(button) && typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ?\n    button.icon : `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n   $: label = isObject(button) && typeof button.label === 'string' ? localize(button.label) : void 0;\n\n   $: keepMinimized = isObject(button) && typeof button.keepMinimized === 'boolean' ? button.keepMinimized : false;\n\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode : 'Enter';\n\n   $: styles = isObject(button) && isObject(button.styles) ? button.styles : void 0;\n\n   function onClick(event)\n   {\n      // Accept `onPress or `onclick` as the function / data to invoke. `onclick` is from Foundry defined buttons.\n      const invoke = button?.onPress ?? button?.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke({ button, event });\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   function onContextMenu(event)\n   {\n      if (button?.onContextMenu === 'function')\n      {\n         button.onContextMenu({ button, event });\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   /**\n    * Consume / stop propagation of key down when key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeydown(event)\n   {\n      if (event.code === keyCode)\n      {\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Handle press event if key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeyup(event)\n   {\n      if (event.code === keyCode)\n      {\n         // Accept `onPress or `onclick` as the function / data to invoke. `onclick` is from Foundry defined buttons.\n         const invoke = button.onPress ?? button.onclick;\n\n         if (typeof invoke === 'function')\n         {\n            invoke({ button, event });\n            button = button; // This provides a reactive update if button data changes.\n         }\n\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- svelte-ignore a11y-missing-attribute -->\n<a on:click|preventDefault|stopPropagation={onClick}\n   on:contextmenu|preventDefault|stopPropagation={onContextMenu}\n   on:keydown={onKeydown}\n   on:keyup={onKeyup}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\"\n   class:keep-minimized={keepMinimized}\n   aria-label={label}\n   tabindex=0\n   role=button>\n    {@html icon}{#if label}<span class:has-icon={icon !== void 0}>{label}</span>{/if}\n</a>\n\n<style>\n   a {\n      padding: var(--tjs-app-header-button-padding, 0 3px);\n      user-select: none;\n      -webkit-tap-highlight-color: var(--tjs-default-webkit-tap-highlight-color, revert);\n   }\n\n   a :global(i) {\n      padding: var(--tjs-app-header-button-icon-padding, 0);\n   }\n\n   a:hover {\n      text-shadow: var(--tjs-app-header-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   a:focus-visible {\n      box-shadow: var(--tjs-app-header-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-app-header-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-app-header-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-app-header-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   span {\n      padding: var(--tjs-app-header-button-label-padding, 0);\n   }\n\n   span.has-icon {\n      padding: var(--tjs-app-header-button-label-padding, 0 0 0 3px);\n   }\n</style>\n","<script>\n   /**\n    * @privateRemarks\n    * TODO: Add description\n    *\n    * @componentDocumentation\n    * @internal\n    */\n   import { getContext }            from 'svelte';\n\n   import { TJSSvelteConfigUtil }   from '@typhonjs-fvtt/runtime/svelte/util';\n   import { A11yHelper }            from '@typhonjs-fvtt/runtime/util/a11y';\n   import { localize }              from '@typhonjs-fvtt/runtime/util/i18n';\n   import { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/store/position';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   /**\n    * @type {SvelteApplication}\n    */\n   const application = getContext('#external')?.application;\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep } = application.reactive.storeAppOptions;\n\n   const { elementRoot } = getContext('#internal').stores;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderIcon = application.reactive.storeAppOptions.headerIcon;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   // These classes in the window header allow dragging.\n   const s_DRAG_TARGET_CLASSLIST = Object.freeze(['tjs-app-icon', 'tjs-window-header-spacer',\n    'window-header', 'window-title']);\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.06 seconds and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { tween: true, tweenOptions: { duration: 0.06, ease: 'cubicOut' } },\n    isObject(draggableOptions) ? draggableOptions : {}, { position: application.position, enabled:\n     $storeDraggable, storeDragging, hasTargetClassList: s_DRAG_TARGET_CLASSLIST });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttonsLeft;\n   let buttonsRight;\n\n   $:\n   {\n      buttonsLeft = [];\n      buttonsRight = [];\n\n      for (const button of $storeHeaderButtons)\n      {\n         const buttonsList = typeof button?.alignLeft === 'boolean' && button?.alignLeft ? buttonsLeft : buttonsRight;\n\n         // If the button contains a TJSSvelteConfig object in the `svelte` attribute then use it otherwise use\n         // `TJSHeaderButton` w/ button as props.\n         buttonsList.push(TJSSvelteConfigUtil.isConfig(button?.svelte) ? { ...button.svelte } :\n          { class: TJSHeaderButton, props: { button } });\n      }\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = (event) =>\n      {\n         // Only toggle minimize state if window title or header is the event target. Also allow toggle state if the\n         // event target has 'keep-minimized' class.\n         if (event.target.classList.contains('window-title') || event.target.classList.contains('window-header') ||\n           event.target.classList.contains('keep-minimized'))\n         {\n            application._onToggleMinimize(event);\n         }\n      }\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n   /**\n    * Explicitly focus `elementRoot` if pointer event is not consumed by header buttons / components. This allows\n    * keyboard tab navigation to select header buttons.\n    *\n    * Note: if `focusKeep` app option store is set to true `elementRoot` is only focused if the current browser wide\n    * active element is not contained inside the app element.\n    */\n   function onPointerdown(event)\n   {\n      const rootEl = $elementRoot;\n\n      // Cancel any app animation in progress when dragging starts.\n      application.position.animate.cancel();\n\n      if ($focusAuto && A11yHelper.isFocusTarget(rootEl) && rootEl?.isConnected)\n      {\n         if ($focusKeep)\n         {\n            const activeWindow = application.reactive.activeWindow;\n\n            const focusOutside = A11yHelper.isFocusTarget(activeWindow.document.activeElement) &&\n             !rootEl.contains(activeWindow.document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               rootEl.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            rootEl.focus();\n         }\n      }\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           on:pointerdown={onPointerdown}\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}>\n      {#if typeof $storeHeaderIcon === 'string'}\n         <img class=\"tjs-app-icon keep-minimized\" src={$storeHeaderIcon} alt=icon>\n      {/if}\n      <h4 class=window-title style:display={displayHeaderTitle}>\n         {localize($storeTitle)}\n      </h4>\n      {#each buttonsLeft as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n      <span class=\"tjs-window-header-spacer keep-minimized\"></span>\n      {#each buttonsRight as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   /**\n    * Provides a zero space element that expands to the right creating the gap between window title and left aligned\n    * buttons and right aligned buttons. Note the use of a negative left margin to remove the gap between elements.\n    */\n   .tjs-window-header-spacer {\n      flex: 0;\n      margin-left: calc(-1 * var(--tjs-app-header-gap, 5px));\n      margin-right: auto;\n   }\n\n   .window-header {\n      flex: var(--tjs-app-header-flex, 0 0 30px);\n      gap: var(--tjs-app-header-gap, 5px);\n      padding: var(--tjs-app-header-padding, 0 4px);\n      touch-action: none;\n   }\n\n   .window-header .tjs-app-icon {\n      align-self: center;\n      border-radius: var(--tjs-app-header-icon-border-radius, 4px);\n      flex: 0 0 var(--tjs-app-header-icon-width, 24px);\n      height: var(--tjs-app-header-icon-height, 24px);\n   }\n\n   .window-title {\n      gap: var(--tjs-app-header-gap, 5px);\n      max-width: fit-content;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   /**\n    * @privateRemarks\n    * TODO: Add description\n    *\n    * @componentDocumentation\n    */\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('#external')?.application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('#internal').stores.elementRoot;\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Cancel any app animation in progress when dragging starts.\n    */\n   function onPointerdown()\n   {\n      application.position.animate.cancel();\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         // TODO: Direct Foundry API access.\n         application?._onResize?.(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     on:pointerdown={onPointerdown}\n     use:resizable={{ active: $storeResizable, storeResizing }}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n\n<style>\n   .window-resizable-handle {\n      display: block;\n      position: absolute;\n      width: var(--tjs-app-resizable-handle-width, 20px);\n      height: var(--tjs-app-resizable-handle-height, 20px);\n      top: var(--tjs-app-resizable-handle-top, unset);\n      bottom: var(--tjs-app-resizable-handle-bottom, -1px);\n      right: var(--tjs-app-resizable-handle-right, 0);\n      left: var(--tjs-app-resizable-handle-left, unset);\n      background: var(--tjs-app-resizable-handle-background, #444);\n      border: var(--tjs-app-resizable-handle-border, 1px solid #111);\n      border-radius: var(--tjs-app-resizable-handle-border-radius, 4px 0 0 0);\n      padding: var(--tjs-app-resizable-handle-padding, 2px);\n      touch-action: none;\n   }\n\n   .fa-arrows-alt-h {\n      color: var(--tjs-app-resizable-handle-icon-color, #f0f0e0);\n      transform: var(--tjs-app-resizable-handle-icon-transform, rotate(45deg));\n   }\n</style>\n","<script>\n   /**\n    * Provides a component to wrap focus to the first focusable element in the given `elementRoot` prop. Place this\n    * component as the last child in `elementRoot`.\n    *\n    * @componentDocumentation\n    */\n   import { A11yHelper }    from '@typhonjs-fvtt/runtime/util/a11y';\n\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   /** @type {boolean} */\n   export let enabled = true;\n\n   let ignoreElements, wrapEl;\n\n   $: if (wrapEl) { ignoreElements = new Set([wrapEl]); }\n\n   function onFocus()\n   {\n      // Early out if not enabled.\n      if (!enabled) { return; }\n\n      if (A11yHelper.isFocusTarget(elementRoot))\n      {\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(elementRoot, ignoreElements);\n\n         if (A11yHelper.isFocusTarget(firstFocusEl) && firstFocusEl !== wrapEl)\n         {\n            firstFocusEl.focus();\n         }\n         else\n         {\n            // No focus target found, so focus elementRoot.\n            elementRoot.focus();\n         }\n      }\n   }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div bind:this={wrapEl} class=tjs-focus-wrap tabindex=0 on:focus={onFocus}></div>\n\n<style>\n    div {\n        width: 0;\n        height: 0;\n        flex: 0;\n    }\n\n    div:focus {\n        outline: none;\n    }\n</style>\n","<script>\n   /**\n    * Provides an application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    *\n    * @componentDocumentation\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import { resizeObserver }           from '@typhonjs-fvtt/runtime/svelte/action/dom/observer';\n   import { applyStyles }              from '@typhonjs-fvtt/runtime/svelte/action/dom/style';\n   import { dynamicAction }            from '@typhonjs-fvtt/runtime/svelte/action/util';\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/a11y';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import TJSFocusWrap                 from '../internal/dom/TJSFocusWrap.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   /** @type {HTMLElement} */\n   export let elementContent = void 0;\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   // export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   /**\n    * Application reference.\n    *\n    * @type {SvelteApplication}\n    */\n   const application = getContext('#external')?.application;\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   // Is the backing app TJSPosition instance a candidate for the `resizeObserver` action? IE `width` or `height is\n   // `auto` or `inherit`.\n   const { resizeObservable } = application.position.stores;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // If a parent component binds and sets `appOffsetHeight` or `appOffsetWidth` to a truthy value then the\n   // `resizeObserver` action is enabled on the outer application `div`. Additionally, the SvelteApplication position\n   // resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Tracks initial state if either of the above props are truthy otherwise a null operation.\n   const initialAppResizeObserver = !!appOffsetHeight || !!appOffsetWidth;\n\n   /**\n    * Reactive statement to control any dynamic action to apply for the app resize observer. It is always enabled when\n    * `initialAppResizeObserver` is true or when the position store `resizeObservable` is true when app position `width`\n    * or `height` is `auto` or `inherit`.\n    *\n    * @type {undefined | import('@typhonjs-fvtt/runtime/svelte/action/util').DynamicActionOptions}\n    */\n   $: appResizeObserver = initialAppResizeObserver || $resizeObservable ?\n    { action: resizeObserver, data: resizeObservedApp } : void 0;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = TJSDefaultTransition.default;\n   export let inTransition = TJSDefaultTransition.default;\n   export let outTransition = TJSDefaultTransition.default;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = TJSDefaultTransition.default;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : TJSDefaultTransition.default;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = TJSDefaultTransition.default; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = TJSDefaultTransition.default; }\n\n      // Set close animation to `false` / not run when an out transition is defined.\n      const defaultCloseAnimation = application?.options?.defaultCloseAnimation;\n      if (typeof defaultCloseAnimation === 'boolean' && defaultCloseAnimation &&\n       outTransition !== TJSDefaultTransition.default)\n      {\n         application.options.defaultCloseAnimation = false;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() => elementRoot.focus());\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!A11yHelper.isFocusTarget(targetEl)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then last focusable element is focused skipping `TJSFocusWrap`.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         const activeWindow = application.reactive.activeWindow;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === activeWindow.document.activeElement ||\n          firstFocusEl === activeWindow.document.activeElement)\n         {\n            if (A11yHelper.isFocusTarget(lastFocusEl) && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    *\n    * Note: `capture` is used so pointer down is always received. Be mindful as `onPointerdownApp` should only\n    * invoke `bringToTop`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      // Note: the event target may not always be the element that will eventually receive focus.\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const activeWindow = application.reactive.activeWindow;\n            const focusOutside = !elementRoot.contains(activeWindow.document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition !== TJSDefaultTransition.default || outTransition !== TJSDefaultTransition.default}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        in:inTransition|global={inTransitionOptions}\n        out:outTransition|global={outTransitionOptions}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown={onKeydown}\n        on:pointerdown|capture={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:dynamicAction={appResizeObserver}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} />\n   </div>\n{:else}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown={onKeydown}\n        on:pointerdown|capture={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:dynamicAction={appResizeObserver}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n   </div>\n{/if}\n\n<style>\n   /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n   .window-app {\n      contain: layout style paint;\n      overflow: var(--tjs-app-overflow, hidden);\n   }\n\n   .window-content {\n      gap: var(--tjs-app-content-gap);\n\n      /* For Firefox */\n      scrollbar-width: var(--tjs-app-content-scrollbar-width, thin);\n      scrollbar-color: var(--tjs-app-content-scrollbar-color, inherit);\n   }\n\n   .window-app:focus-visible {\n      outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   .window-content:focus-visible {\n      outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   /* Override Foundry default; adjust --tjs-app-header-gap to change gap size */\n   .window-app :global(.window-header a) {\n      flex: none;\n      margin: 0;\n   }\n\n   /* Override Foundry default; See TJSHeaderButton for CSS variables */\n   .window-app :global(.window-header i[class^=fa]) {\n      margin: 0\n   }\n</style>\n","import { cssVariables }                      from './cssVariables.js';\n\nexport { default as ApplicationShell }       from './ApplicationShell.svelte';\nexport { default as EmptyApplicationShell }  from './EmptyApplicationShell.svelte';\nexport { default as TJSApplicationShell }    from './TJSApplicationShell.svelte';\nexport { default as TJSGlassPane }           from './TJSGlassPane.svelte';\n\n/**\n * Provides default CSS variables for core components.\n */\ncssVariables.setProperties({\n   // Anchor text shadow / header buttons\n   '--tjs-default-text-shadow-focus-hover': '0 0 8px var(--color-shadow-primary)',\n\n   // TJSApplicationShell app background.\n   '--tjs-app-background': `url(\"${globalThis.foundry.utils.getRoute('/ui/denim075.png')}\")`,\n}, false);\n","import { isObject, deepMerge, safeAccess, safeSet, hasGetter, klona } from '@typhonjs-fvtt/runtime/util/object';\nimport { writable, derived } from 'svelte/store';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { TJSWebStorage, TJSSessionStorage } from '@typhonjs-fvtt/runtime/svelte/store/web-storage';\nimport { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { TJSSvelteConfigUtil, TJSSvelteUtil } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { TJSPosition } from '@typhonjs-fvtt/runtime/svelte/store/position';\nimport { A11yHelper } from '@typhonjs-fvtt/runtime/util/a11y';\nimport { DialogShell } from '@typhonjs-fvtt/runtime/svelte/component/internal';\nimport { ManagedPromise } from '@typhonjs-fvtt/runtime/util/async';\n\n/**\n * Provides the ability the save / restore / serialize application state for positional and UI state such as minimized\n * status.\n *\n * You can restore a saved state with animation; please see the options of {@link ApplicationState.restore}.\n */\nclass ApplicationState\n{\n   /** @type {object} */\n   #application;\n\n   /**\n    * Stores the current save state key being restored by animating. When a restore is already being animated with the\n    * same name the subsequent restore animation is ignored.\n    *\n    * @type {string | undefined}\n    */\n   #currentRestoreKey;\n\n   /** @type {Map<string, import('./types').ApplicationStateData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {object}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Clears all saved application state.\n    */\n   clear()\n   {\n      this.#dataSaved.clear();\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {import('./types').ApplicationStateData} Passed in object with current application state.\n    */\n   current(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: this.#application?.reactive?.toJSON(),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Gets any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {import('./types').ApplicationStateData | undefined} Any saved application state.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - get error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} The saved application state names / keys.\n    */\n   keys()\n   {\n      return this.#dataSaved.keys();\n   }\n\n   /**\n    * Removes and returns any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('./types').ApplicationStateData | undefined} Any saved application state.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a previously saved application state by `name` returning the data. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link AnimationAPI.to} and the duration and easing name or function may be specified.\n    *\n    * @param {object}            options - Options.\n    *\n    * @param {string}            options.name - Saved data set name.\n    *\n    * @param {boolean}           [options.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {import('./types').ApplicationStateData | undefined} Any saved application state.\n    */\n   restore({ name, remove = false, animateTo = false, duration = 0.1, ease = 'linear' })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         // Multiple invocations for animated restores are skipped when one is already in progress.\n         if (animateTo && name !== this.#currentRestoreKey)\n         {\n            // Track current restore key name.\n            this.#currentRestoreKey = name;\n\n            this.#setImpl(dataSaved, {\n               animateTo,\n               async: true,\n               duration,\n               ease\n            }).then(() =>\n            {\n               // Reset current restore key name for animation if the same as initial animation initiation.\n               if (name === this.#currentRestoreKey) { this.#currentRestoreKey = void 0; }\n            });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to index this saved state.\n    *\n    * @returns {import('./types').ApplicationStateData} Current saved application state.\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.current(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Sets application state from the given {@link ApplicationStateData} instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link AnimationAPI.to} and the duration and easing name or function may be specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @param {import('./types').ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}         [options] - Optional parameters\n    *\n    * @param {boolean}        [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}         [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    */\n   set(data, options = {})\n   {\n      this.#setImpl(data, { ...options, async: false });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Sets application state from the given {@link ApplicationStateData} instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link AnimationAPI.to} and the duration and easing name or function may be specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @privateRemarks\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {import('./types').ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/easing').EasingReference} [opts.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {undefined | Promise<void>} When asynchronous the animation Promise.\n    */\n   #setImpl(data, { async = false, animateTo = false, duration = 0.1, ease = 'linear' } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         if (!rendered)\n         {\n            console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n            return;\n         }\n\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position, {\n            duration,\n            ease,\n            strategy: 'cancelAll'\n         }).finished.then(({ cancelled }) =>\n         {\n            if (cancelled) { return; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n   }\n}\n\n/**\n * Provides a mechanism to retrieve and query all mounted Svelte components including the main application shell.\n */\nclass GetSvelteData\n{\n   /** @type {import('./types').MountedAppShell[] | null[]} */\n   #applicationShellHolder;\n\n   /** @type {import('./types').SvelteData[]} */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {import('./types').MountedAppShell[] | null[]}  applicationShellHolder - A reference to the\n    *        MountedAppShell array.\n    *\n    * @param {import('./types').SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {import('./types').MountedAppShell | null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return data?.component ?? void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('svelte').SvelteComponent]>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {IterableIterator<import('svelte').SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index - The index of SvelteData instance to retrieve.\n    *\n    * @returns {import('./types').SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {import('svelte').SvelteComponent} component - Svelte component.\n    *\n    * @returns {import('./types').SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('./types').SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<import('./types').SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication and retrievable by\n * {@link SvelteApplication.reactive}.\n *\n * There are several reactive getters for UI state such and for two-way bindings / stores see\n * {@link SvelteReactive.storeUIState}:\n * - {@link SvelteReactive.dragging}\n * - {@link SvelteReactive.minimized}\n * - {@link SvelteReactive.resizing}\n *\n * There are also reactive getters / setters for {@link SvelteApp.Options} and Foundry\n * `ApplicationOptions`. You can use the following as one way bindings and update the\n * associated stores. For two-way bindings / stores see {@link SvelteReactive.storeAppOptions}.\n *\n * - {@link SvelteReactive.draggable}\n * - {@link SvelteReactive.focusAuto}\n * - {@link SvelteReactive.focusKeep}\n * - {@link SvelteReactive.focusTrap}\n * - {@link SvelteReactive.headerButtonNoClose}\n * - {@link SvelteReactive.headerButtonNoLabel}\n * - {@link SvelteReactive.headerIcon}\n * - {@link SvelteReactive.headerNoTitleMinimized}\n * - {@link SvelteReactive.minimizable}\n * - {@link SvelteReactive.popOut}\n * - {@link SvelteReactive.positionable}\n * - {@link SvelteReactive.resizable}\n * - {@link SvelteReactive.title}\n *\n * An instance of TJSWebStorage (session) / TJSSessionStorage is accessible via {@link SvelteReactive.sessionStorage}.\n * Optionally you can pass in an existing TJSWebStorage instance that can be shared across multiple SvelteApplications\n * by setting {@link SvelteApp.Options.sessionStorage}.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * This API is not sealed, and it is recommended that you extend it with accessors to get / set data that is reactive\n * in your application. An example of setting an exported prop `document` from the main mounted application shell.\n *\n * @example\n * import { hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\n *\n * // Note: make a normal comment.\n * //  * @member {object} document - Adds accessors to SvelteReactive to get / set the document associated with\n * //  *                             Document with the mounted application shell Svelte component.\n * //  *\n * //  * @memberof SvelteReactive#\n * //  *\n * Object.defineProperty(this.reactive, 'document', {\n *    get: () => this.svelte?.applicationShell?.document,\n *    set: (document) =>\n *    {\n *       const component = this.svelte?.applicationShell;\n *       if (hasSetter(component, 'document')) { component.document = document; }\n *    }\n * });\n */\nclass SvelteReactive\n{\n   /**\n    * @type {import('../SvelteApplication').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {import('../SvelteApplication').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSWebStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSWebStorage.`);\n      }\n\n      // If no external web storage API instance is available then create a TJSSessionStorage instance.\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {import('./types-local').SvelteReactiveStores | undefined} Internal methods to interact with Svelte\n    * stores.\n    *\n    * @package\n    * @internal\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiStateUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').WebStorage} Returns WebStorage (session) instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {import('./types').StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {import('./types').StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current active Window / WindowProxy UI state.\n    *\n    * @returns {Window} Active window UI state.\n    */\n   get activeWindow() { return this.#dataUIState.activeWindow ?? globalThis; }\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n   /**\n    * Sets the current active Window / WindowProxy UI state.\n    *\n    * Note: This is protected usage and used internally.\n    *\n    * @param {Window} activeWindow - Active Window / WindowProxy UI state.\n    */\n   set activeWindow(activeWindow)\n   {\n      // Note: when setting activeWindow to undefined `globalThis` is set. There isn't a great test for Window /\n      // WindowProxy, so check `toString`.\n      if (activeWindow === void 0 || activeWindow === null ||\n       (Object.prototype.toString.call(activeWindow) === '[object Window]'))\n      {\n         this.#storeUIStateUpdate((options) => deepMerge(options, { activeWindow: activeWindow ?? globalThis }));\n      }\n   }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteApp.Options.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    *\n    * @privateRemarks\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.    *\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string | undefined}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApplication.position}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string | undefined | null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Serializes the main {@link SvelteApp.Options} for common application state.\n    *\n    * @returns {import('./types').SvelteReactiveData} Common application state.\n    */\n   toJSON()\n   {\n      return {\n         draggable: this.#application?.options?.draggable ?? true,\n         focusAuto: this.#application?.options?.focusAuto ?? true,\n         focusKeep: this.#application?.options?.focusKeep ?? false,\n         focusTrap: this.#application?.options?.focusTrap ?? true,\n         headerButtonNoClose: this.#application?.options?.headerButtonNoClose ?? false,\n         headerButtonNoLabel: this.#application?.options?.headerButtonNoLabel ?? false,\n         headerNoTitleMinimized: this.#application?.options?.headerNoTitleMinimized ?? false,\n         minimizable: this.#application?.options?.minimizable ?? true,\n         positionable: this.#application?.options?.positionable ?? true,\n         resizable: this.#application?.options?.resizable ?? true\n      };\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApplication app options {@link SvelteApp.Options.headerButtonNoClose}\n    * to remove the close button and {@link SvelteApp.Options.headerButtonNoLabel} to true and labels will be\n    * removed from the header buttons.\n    *\n    * @param {object} [opts] - Optional parameters (for internal use)\n    *\n    * @param {boolean} [opts.headerButtonNoClose] - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} [opts.headerButtonNoLabel] - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * `storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {import('./types').StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         activeWindow: globalThis,\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {import('./types').StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         // activeWindow: propertyStore(writableUIOptions, 'activeWindow'),\n         activeWindow: derived(writableUIOptions, ($options, set) => set($options.activeWindow)),\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n}\n\n/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nfunction isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            [opts] - Optional parameters.\n *\n * @param {object}            [opts.app] - The target application\n *\n * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig}  [opts.config] - Svelte component options\n *\n * @param {Function}          [opts.elementRootUpdate] - A callback to assign to the external context.\n *\n * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteData} The config + instantiated Svelte component.\n */\nfunction loadSvelteConfig({ app, config, elementRootUpdate } = {})\n{\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (CrossWindow.isHTMLElement(config.target))\n   {\n      target = config.target;\n   }\n   else if (typeof config.target === 'string')\n   {\n      // Attempt to find target from query selector string.\n      const activeWindow = app?.reactive?.activeWindow;\n      target = activeWindow?.document?.querySelector(config.target);\n   }\n\n   if (!CrossWindow.isHTMLElement(target))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - Could not find target, '${config.target}', for config:\\n`,\n        'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = TJSSvelteConfigUtil.parseConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   if (!CrossWindow.isHTMLElement(element))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - No application shell contract found. Did you bind and export a HTMLElement ` +\n        `as 'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n         `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   return { config: svelteConfig, component, element };\n}\n\n/**\n * Provides an index of all visible rendered {@link SvelteApplication} instances in a given Svelte runtime. This allows\n * bulk operations to be performed across all apps.\n */\nclass TJSAppIndex\n{\n   /**\n    * Stores all visible / rendered apps.\n    *\n    * @type {Map<string, import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>}\n    */\n   static #visibleApps = new Map();\n\n   /**\n    * Adds a SvelteApplication to all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static add(app)\n   {\n      this.#visibleApps.set(app.id, app);\n   }\n\n   /**\n    * Removes a SvelteApplication from all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static delete(app)\n   {\n      this.#visibleApps.delete(app.id);\n   }\n\n   /**\n    * Gets a particular app by ID.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} Associated app.\n    */\n   static get(key)\n   {\n      return this.#visibleApps.get(key);\n   }\n\n   /**\n    * Returns whether an associated app by ID is being tracked.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {boolean} The given App ID is visible.\n    */\n   static has(key)\n   {\n      return this.#visibleApps.has(key);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} All visible app IDs.\n    */\n   static keys()\n   {\n      return this.#visibleApps.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>} All visible apps.\n    */\n   static values()\n   {\n      return this.#visibleApps.values();\n   }\n}\n\nclass FoundryHMRSupport\n{\n   static initialize()\n   {\n      if (import.meta.hot)\n      {\n         Hooks.on('hotReload', (data) =>\n         {\n            // Only handle JSON hot reload presumably specified in package manifest for language translation files.\n            if (data?.extension === 'json')\n            {\n               // Postpone until next clock tick to allow Foundry to update localization first.\n               setTimeout(() =>\n               {\n                  for (const app of TJSAppIndex.values())\n                  {\n                     const appShell = app.svelte.applicationShell;\n\n                     // Retrieve the original `svelte-hmr` instrumented HMR component / not the proxy.\n                     const hmrComponent = appShell?.$$?.hmr_cmp;\n\n                     if (appShell && typeof hmrComponent?.$replace === 'function')\n                     {\n                        const svelteData = app.svelte.dataByComponent(appShell);\n                        if (svelteData)\n                        {\n                           try\n                           {\n                              // Replace with self; this will invoke `on_hmr` callback in associated SvelteApplication.\n                              hmrComponent.$replace(hmrComponent.constructor, {\n                                 target: svelteData.config.target,\n                                 anchor: svelteData.config.anchor,\n                                 preserveLocalState: true,\n                                 conservative: true\n                              });\n                           }\n                           catch (error)\n                           {\n                              const name = hmrComponent?.constructor?.name ?? 'Unknown';\n                              console.error(`TyphonJS Runtime Library error; Could not hot reload component: '${name}'`);\n                              console.error(error);\n                           }\n                        }\n                     }\n                  }\n               }, 0);\n            }\n\n            return true;\n         });\n      }\n   }\n}\n\n/**\n * Provides a Svelte aware extension to the Foundry {@link Application} class to manage the app lifecycle\n * appropriately. You can declaratively load one or more components from `defaultOptions` using a\n * {@link #runtime/svelte/util|TJSSvelteConfig} object in the {@link SvelteApp.Options.svelte} property.\n *\n * @template [Options = import('./types').SvelteApp.Options]\n * @augments {Application<Options>}\n *\n * @implements {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionTypes.Positionable}\n */\nclass SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {import('./internal/state-svelte/types').MountedAppShell[] | null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n    * can correctly be positioned with initial helper constraints (centered).\n    *\n    * @type {boolean}\n    */\n   #gateSetPosition = false;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {TJSPosition}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {import('./internal/state-svelte/types').SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * #svelteData.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {import('./internal/state-reactive/types-local').SvelteReactiveStores}\n    */\n   #stores;\n\n   /**\n    * @param {Partial<Options>} [options] - The options for the application.\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApplication - constructor - No Svelte configuration object found in 'options'.`);\n      }\n\n      /** @type {ApplicationState} */\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize TJSPosition with the position object set by Application.\n      this.#position = new TJSPosition(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve TJSPosition by `this.position`.\n       *\n       * @member {TJSPosition} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {import('./types').SvelteApp.Options} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    */\n   static get defaultOptions()\n   {\n      return /** @type {import('./types').SvelteApp.Options} */ deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: TJSPosition.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true TJSPosition is optimized for orthographic use.\n         positionValidator: TJSPosition.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of WebStorage (session) to share across SvelteApplications.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {import('./internal/state-reactive/types').SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {import('./internal/state-app/types').ApplicationState} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {import('./internal/state-svelte/types').GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html :\n       [this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.focus=true] - When true and the active element is not contained in the app `elementTarget`\n    *        is focused..\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    * @ignore\n    * @internal\n    */\n   bringToTop({ focus = true, force = false } = {})\n   {\n      // Only perform bring to top when the active window is the main Foundry window instance.\n      if (this.reactive.activeWindow !== globalThis) { return; }\n\n      if (force || this.popOut) { super.bringToTop(); }\n\n      const elementTarget = this.elementTarget;\n      const activeElement = document.activeElement;\n\n      // If the activeElement is not contained in this app via elementTarget then blur the current active element\n      // and make elementTarget focused.\n      if (focus && elementTarget && activeElement !== elementTarget && !elementTarget?.contains(activeElement))\n      {\n         // Blur current active element.\n         if (A11yHelper.isFocusTarget(activeElement))\n         {\n            activeElement.blur();\n         }\n\n         elementTarget?.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and unregisters references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    *\n    * @ignore\n    * @internal\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el)\n      {\n         /**\n          * @ignore\n          * @internal\n          */\n         this._state = states.CLOSED;\n\n         return;\n      }\n\n      // Support for PopOut! module; `close` is double invoked; once before the element is rejoined to the main window.\n      // Reject close invocations when the element window is not the main originating window / globalThis.\n      if (CrossWindow.getWindow(el, { throws: false }) !== globalThis) { return; }\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSING;\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * Note: JQuery wrapping as Foundry event arguments uses JQuery.\n          */\n         Hooks.call(`close${cls.name}`, this, $(el));\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(TJSSvelteUtil.outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.allSettled(svelteDestroyPromises);\n\n      // Remove from all visible apps tracked.\n      TJSAppIndex.delete(this);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n\n      delete globalThis.ui.windows[this.appId];\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._minimized = false;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._scrollPositions = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store state.\n      this.#stores.uiStateUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _injectHTML()\n   {\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only triggered on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      // A sanity check; absence should be detected in constructor.\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApplication - _injectHTML - No Svelte configuration object found in 'options'.`);\n      }\n\n      const svelteData = loadSvelteConfig({\n         app: this,\n         config: this.options.svelte,\n         elementRootUpdate\n      });\n\n      // A sanity check as shouldn't hit this case as only one component is being mounted.\n      if (this.svelte.applicationShell !== null)\n      {\n         throw new Error(\n          `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\\n` +\n           `${JSON.stringify(this.options.svelte)}`);\n      }\n\n      this.#applicationShellHolder[0] = svelteData.component;\n\n      // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n      // refreshes. Update the element root accordingly and force an update to TJSPosition.\n      // See this issue for info about `on_hmr`:\n      // https://github.com/sveltejs/svelte-hmr/issues/57\n      if (TJSSvelteUtil.isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n      {\n         svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n      }\n\n      this.#svelteData.push(svelteData);\n\n      // Wrap `elementRoot` as a JQuery object and set to AppV1 / Application element.\n      this._element = $(this.svelte.applicationShell.elementRoot);\n\n      // Detect if the application shell exports an `elementContent` accessor.\n      this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n       this.svelte.applicationShell.elementContent : null;\n\n      // Detect if the application shell exports an `elementTarget` accessor if not set `elementTarget` to\n      // `elementRoot`.\n      this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n       this.svelte.applicationShell.elementTarget : this.svelte.applicationShell.elementRoot;\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteMount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteRemount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link TJSPosition.set}.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      const activeWindow = this.reactive.activeWindow;\n\n      try\n      {\n         if (this._state === Application.RENDER_STATES.NONE &&\n          A11yHelper.isFocusTarget(activeWindow.document.querySelector(`#${this.id}`)))\n         {\n            console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n             }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n            return;\n         }\n      }\n      catch (err)\n      {\n         console.warn(`SvelteApplication - _render: Potentially malformed application ID '${this.id\n          }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      // On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n      // can correctly be positioned with initial helper constraints (centered).\n      this.#gateSetPosition = true;\n\n      await super._render(force, options);\n\n      this.#gateSetPosition = false;\n\n      // Handle the same render exclusion tests that reject a render in Application.\n\n      // Do not render under certain conditions.\n      if ([Application.RENDER_STATES.CLOSING, Application.RENDER_STATES.RENDERING].includes(this._state)) { return; }\n\n      // Applications which are not currently rendered must be forced.\n      if (!force && (this._state <= Application.RENDER_STATES.NONE)) { return; }\n\n      // It is necessary to directly invoke `position.set` as TJSPosition uses accessors and is not a bare object, so\n      // the merging that occurs in `Application._render` does not take effect. Additionally, any of the main\n      // positional properties that are defined as strings such as percentage values need to be set after the element\n      // is mounted.\n      if (!this._minimized)\n      {\n         this.#position.set({\n            left: typeof this.options?.left === 'string' ? this.options.left : void 0,\n            height: typeof this.options?.height === 'string' ? this.options.height : void 0,\n            maxHeight: typeof this.options?.maxHeight === 'string' ? this.options.maxHeight : void 0,\n            maxWidth: typeof this.options?.maxWidth === 'string' ? this.options.maxWidth : void 0,\n            minHeight: typeof this.options?.minHeight === 'string' ? this.options.minHeight : void 0,\n            minWidth: typeof this.options?.minWidth === 'string' ? this.options.minWidth : void 0,\n            rotateX: typeof this.options?.rotateX === 'string' ? this.options.rotateX : void 0,\n            rotateY: typeof this.options?.rotateY === 'string' ? this.options.rotateY : void 0,\n            rotateZ: typeof this.options?.rotateZ === 'string' ? this.options.rotateZ : void 0,\n            rotation: typeof this.options?.rotation === 'string' ? this.options.rotation : void 0,\n            top: typeof this.options?.top === 'string' ? this.options.top : void 0,\n            width: typeof this.options?.width === 'string' ? this.options.width : void 0,\n\n            ...options\n         });\n      }\n\n      if (!this.#onMount)\n      {\n         // Add to visible apps tracked.\n         TJSAppIndex.add(this);\n\n         this.onSvelteMount({\n            elementRoot: /** @type {HTMLElement} */ this._element[0],\n            elementContent: this.#elementContent,\n            elementTarget: this.#elementTarget\n         });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Provide an empty JQuery element per the core Foundry API.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderInner()\n   {\n      const activeWindow = this.reactive.activeWindow;\n\n      const html = activeWindow.document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition.set}. This allows position to be\n    * fully reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link TJSPosition.validators} / ValidatorAPI functionality.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/store/position').Data.TJSPositionDataRelative}   [position] - TJSPosition data.\n    *\n    * @returns {TJSPosition} The updated position object for the application containing the new values.\n    * @ignore\n    */\n   setPosition(position)\n   {\n      return !this.#gateSetPosition ? this.position.set(position) : this.position;\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n\n         this.onSvelteRemount({\n            elementRoot: /** @type {HTMLElement} */ this._element[0],\n            elementContent: this.#elementContent,\n            elementTarget: this.#elementTarget\n         });\n      }\n   }\n}\n\n/**\n * Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\n */\nclass PopoutSupport\n{\n   static initialize()\n   {\n      Hooks.on('PopOut:loading', (app, popout) =>\n      {\n         if (app instanceof SvelteApplication)\n         {\n            // Disable app position system.\n            app.position.enabled = false;\n\n            // Save current `headerButtonNoClose` state.\n            app.state.save({\n               name: '#beforePopout',\n               headerButtonNoClose: app.reactive.headerButtonNoClose\n            });\n\n            // Set the apps active window to the popout browser window.\n            app.reactive.activeWindow = popout;\n\n            // Disable the close button.\n            app.reactive.headerButtonNoClose = true;\n         }\n      });\n\n      Hooks.on('PopOut:popin', (app) => this.#handleRejoin(app));\n      Hooks.on('PopOut:close', (app) => this.#handleRejoin(app));\n   }\n\n   /**\n    * Handles rejoining the app to main browser window.\n    *\n    * @param {Application} app - The target app.\n    */\n   static #handleRejoin(app)\n   {\n      if (app instanceof SvelteApplication)\n      {\n         // Enable the app position system.\n         app.position.enabled = true;\n\n         // Restore the initial header button no close state.\n         const beforeData = app.state.remove({ name: '#beforePopout' });\n         if (beforeData) { app.reactive.headerButtonNoClose = beforeData?.headerButtonNoClose ?? false; }\n\n         // Reset the apps active window to the main `globalThis` reference.\n         app.reactive.activeWindow = void 0;\n      }\n   }\n}\n\n/**\n * Provides storage for all dialog options through individual accessors and `get`, `merge`, `replace` and `set` methods\n * that safely access and update data changed to the mounted DialogShell component reactively.\n */\nclass TJSDialogData\n{\n   /**\n    * @type {import('../../index.js').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * Stores the dialog options data.\n    *\n    * @type {import('./types').TJSDialogOptions}\n    */\n   #internal = {};\n\n   /**\n    * @param {import('../../index.js').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {{ [key: string]: import('./types').TJSDialogButtonData }} The dialog button configuration.\n    */\n   get buttons()\n   {\n      return this.#internal.buttons;\n   }\n\n   /**\n    * Set the dialog button configuration.\n    *\n    * @param {string} buttons - New dialog button configuration.\n    */\n   set buttons(buttons)\n   {\n      this.#internal.buttons = buttons;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig | string} The Svelte configuration object or HTML string\n    *          content.\n    */\n   get content()\n   {\n      return this.#internal.content;\n   }\n\n   /**\n    * Set the Svelte configuration object or HTML string content.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig | string} content - New Svelte configuration object or\n    *        HTML string content.\n    */\n   set content(content)\n   {\n      this.#internal.content = content;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The default button ID to focus initially.\n    */\n   get default()\n   {\n      return this.#internal.default;\n   }\n\n   /**\n    * Set the default button ID to focus initially.\n    *\n    * @param {string} newDefault - New default button ID to focus initially.\n    */\n   set default(newDefault)\n   {\n      this.#internal.default = newDefault;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} The dialog draggable state; draggable when true.\n    */\n   get draggable()\n   {\n      return this.#internal.draggable;\n   }\n\n   /**\n    * Set the dialog state; draggable when true.\n    *\n    * @param {boolean} draggable - New dialog draggable state; draggable when true.\n    */\n   set draggable(draggable)\n   {\n      this.#internal.draggable = draggable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto()\n   {\n      return this.#internal.focusAuto;\n   }\n\n   /**\n    * Set the dialog auto-management of app focus.\n    *\n    * @param {boolean} focusAuto - New dialog auto-management of app focus.\n    */\n   set focusAuto(focusAuto)\n   {\n      this.#internal.focusAuto = focusAuto;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the first focusable element that isn't a button is focused.\n    */\n   get focusFirst()\n   {\n      return this.#internal.focusFirst;\n   }\n\n   /**\n    * Set the dialog first focusable element state.\n    *\n    * @param {boolean} focusFirst - New dialog first focusable element state.\n    */\n   set focusFirst(focusFirst)\n   {\n      this.#internal.focusFirst = focusFirst;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep()\n   {\n      return this.#internal.focusKeep;\n   }\n\n   /**\n    * Set the dialog `focusKeep` state. When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    *\n    * @param {boolean} focusKeep - New dialog `focusKeep` state.\n    */\n   set focusKeep(focusKeep)\n   {\n      this.#internal.focusKeep = focusKeep;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is minimizable.\n    */\n   get minimizable()\n   {\n      return this.#internal.minimizable;\n   }\n\n   /**\n    * Set the dialog `minimizable` state. When true the dialog is minimizable.\n    *\n    * @param {boolean} minimizable - New dialog `minimizable` state.\n    */\n   set minimizable(minimizable)\n   {\n      this.#internal.minimizable = minimizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true a modal dialog is displayed.\n    */\n   get modal()\n   {\n      return this.#internal.modal;\n   }\n\n   /**\n    * Set the dialog `modal` state. When true a modal dialog is displayed.\n    *\n    * @param {boolean} modal - New dialog `modal` state.\n    */\n   set modal(modal)\n   {\n      this.#internal.modal = modal;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialogModalOptions} Additional options for modal dialog display.\n    */\n   get modalOptions()\n   {\n      return this.#internal.modalOptions;\n   }\n\n   /**\n    * Set additional options for modal dialog display.\n    *\n    * @param {import('./types').TJSDialogModalOptions} modalOptions - New additional options for modal dialog display.\n    */\n   set modalOptions(modalOptions)\n   {\n      this.#internal.modalOptions = modalOptions;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and an error is raised in dialog callback functions post a UI error notification.\n    */\n   get notifyError()\n   {\n      return this.#internal.notifyError;\n   }\n\n   /**\n    * Set the dialog `notifyError` state. When true and an error is raised in dialog callback functions post a UI error\n    * notification.\n    *\n    * @param {boolean} notifyError - New dialog `notifyError` state.\n    */\n   set notifyError(notifyError)\n   {\n      this.#internal.notifyError = notifyError;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string | ((data?: { application?: import('../../index.js').TJSDialog }) => any)} Callback invoked when\n    *          dialog is closed; no button option selected. When defined as a string any matching function by name\n    *          exported from content Svelte component is invoked.\n    */\n   get onClose()\n   {\n      return this.#internal.onClose;\n   }\n\n   /**\n    * Set callback invoked when dialog is closed; no button option selected. When defined as a string any matching\n    * function by name exported from content Svelte component is invoked..\n    *\n    * @param {string | ((data?: { application?: import('../../index.js').TJSDialog }) => any)} onClose - New dialog\n    *        `onClose` state.\n    */\n   set onClose(onClose)\n   {\n      this.#internal.onClose = onClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} Dialog `rejectClose` state. When true and a Promise has been created by {@link TJSDialog.wait}\n    *          and the Promise is not in the process of being resolved or rejected on close of the dialog any `onClose`\n    *          function is invoked and any result that is undefined will cause the Promise to then be rejected..\n    */\n   get rejectClose()\n   {\n      return this.#internal.rejectClose;\n   }\n\n   /**\n    * Set the dialog `rejectClose` state.\n    *\n    * @param {boolean} rejectClose - New dialog `rejectClose` state.\n    */\n   set rejectClose(rejectClose)\n   {\n      this.#internal.rejectClose = rejectClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is resizable.\n    */\n   get resizable()\n   {\n      return this.#internal.resizable;\n   }\n\n   /**\n    * Set the dialog `resizable` state. When true the dialog is resizable.\n    *\n    * @param {boolean} resizable - New dialog `resizable` state.\n    */\n   set resizable(resizable)\n   {\n      this.#internal.resizable = resizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and resolving any Promises and there are undefined results from any button callbacks\n    *          the button ID is resolved.\n    */\n   get resolveId()\n   {\n      return this.#internal.resolveId;\n   }\n\n   /**\n    * Set the dialog `resolveId` state. When true and resolving any Promises and there are undefined results from any\n    * button callbacks the button ID is resolved.\n    *\n    * @param {boolean} resolveId - New dialog `resolveId` state.\n    */\n   set resolveId(resolveId)\n   {\n      this.#internal.resolveId = resolveId;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The dialog window title.\n    */\n   get title()\n   {\n      return this.#internal.title;\n   }\n\n   /**\n    * Set the dialog window title.\n    *\n    * @param {string} title - New dialog window title.\n    */\n   set title(title)\n   {\n      this.#internal.title = title;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialogTransitionOptions} Transition options for the dialog.\n    */\n   get transition()\n   {\n      return this.#internal.transition;\n   }\n\n   /**\n    * Set transition options for the dialog.\n    *\n    * @param {import('./types').TJSDialogTransitionOptions} transition - New transition options for the dialog.\n    */\n   set transition(transition)\n   {\n      this.#internal.transition = transition;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {number | null} A specific z-index for the dialog. Pass null for the dialog to act like other\n    *          applications in regard bringing to top when activated.\n    */\n   get zIndex()\n   {\n      return this.#internal.zIndex;\n   }\n\n   /**\n    * Set specific z-index for the dialog.\n    *\n    * @param {number | null} zIndex - New z-index for the dialog.\n    */\n   set zIndex(zIndex)\n   {\n      this.#internal.zIndex = zIndex;\n      this.#updateComponent();\n   }\n\n   /**\n    * Provides a cloned copy of the dialog data.\n    * Note: The content attribute is not cloned as complex / props may be present.\n    *\n    * @returns {import('./types').TJSDialogOptions} A clone of the dialog data.\n    */\n   clone()\n   {\n      // Make a shallow copy of internally stored data.\n      const shallowCopy = { ...this.#internal };\n\n      // Remove the content parameter as it may contain complex props sent to the hosted dialog component.\n      delete shallowCopy.content;\n\n      // Clone the internal data and then set the content directly.\n      const cData = klona(shallowCopy);\n      cData.content = this.#internal.content;\n\n      return cData;\n   }\n\n   /**\n    * Provides a way to safely get this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {any} Value at the accessor.\n    */\n   get(accessor, defaultValue)\n   {\n      return safeAccess(this.#internal, accessor, defaultValue);\n   }\n\n   /**\n    * @param {import('./types').TJSDialogOptions} data - Merge provided data object into Dialog data.\n    */\n   merge(data)\n   {\n      deepMerge(this.#internal, data);\n      this.#updateComponent();\n   }\n\n   /**\n    * Sets the dialog data; this is reactive.\n    *\n    * @param {import('./types').TJSDialogOptions}   data - Dialog data.\n    */\n   replace(data)\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialogData replace error: 'data' is not an object'.`); }\n\n      this.#internal = {};\n\n      // Merge new data and perform a reactive update.\n      this.merge(data);\n   }\n\n   /**\n    * Provides a way to safely set this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Automatically the dialog data will be updated in the associated DialogShell Svelte component.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    *\n    * @returns {boolean} True if successful.\n    */\n   set(accessor, value)\n   {\n      const success = safeSet(this.#internal, accessor, value);\n\n      // If `this.#internal` modified then update the app options store.\n      if (success) { this.#updateComponent(); }\n\n      return success;\n   }\n\n   /**\n    * Updates the data in the Svelte dialog component.\n    */\n   #updateComponent()\n   {\n      const component = this.#application.svelte.component(0);\n      if (component?.data) { component.data = this.clone(); }\n   }\n}\n\n/**\n * Provides a reactive dialog implementation configured from a unique dialog options object. The dialog features a\n * bottom button bar for user selection.\n *\n * A glasspane / modal option with various styling and transition capabilities is available when setting `modal: true`.\n *\n * Most importantly the `content` attribute of dialog data can be a Svelte component configuration object to render\n * your custom component as the dialog content. When using a Svelte component as the content you can assign a string\n * to the various `on<XXX>` dialog callbacks and an exported function from your component will be invoked to handle the\n * button callback. All dialog button callbacks and `onClose` callback receive a single argument which is the dialog /\n * application instance.\n *\n * When making a form with form validation or other dialog that you don't want to close immediately on button press you\n * can set `autoClose: false`, however you are 100% in control of resolving any Promise callbacks from button presses\n * and also closing the application. Each button can also be configured with `autoClose: false` in the button data.\n *\n * There is a handy Promise management capability to track a single Promise for the lifetime of a dialog available\n * at {@link TJSDialog.managedPromise}. By default when the user closes the dialog / application any managed Promise is\n * resolved with `null`. The managed Promise is available in any Svelte content component by using\n * `const managedPromise = getContext('#managedPromise')`. When handling any custom resolution particularly when\n * setting `autoClose: false` for a given button you are 100% in control of resolving or rejecting asynchronous data to\n * return from the dialog.\n *\n * To create and wait upon a managed promise for asynchronous return results use the static or member variation of\n * {@link TJSDialog.wait}.\n *\n * Please refer to {@link TJSDialogOptions} for the various options used to construct the dialog.\n *\n * There are a couple of static helper methods to quickly create standard dialogs such as a 'yes' / 'no' confirmation\n * dialog with {@link TJSDialog.confirm} and an 'ok' single button dialog with {@link TJSDialog.prompt}.\n *\n * @template [Options = import('./types').SvelteApp.Options]\n * @augments {SvelteApplication<Options>}\n */\nclass TJSDialog extends SvelteApplication\n{\n   /** @type {TJSDialogData} */\n   #data;\n\n   /** @type {ManagedPromise} */\n   #managedPromise;\n\n   /**\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions} data - Dialog options.\n    *\n    * @param {Options}   [options] - SvelteApplication options.\n    */\n   constructor(data, options = {})\n   {\n      // Note: explicit setting of `popOutModuleDisable` to prevent the PopOut! module from acting on modal dialogs.\n      // @ts-expect-error\n      super({ popOutModuleDisable: data?.modal ?? false, ...options });\n\n      this.#managedPromise = new ManagedPromise();\n\n      this.#data = new TJSDialogData(this);\n      this.#data.replace(data);\n\n      /**\n       * @member {object} dialogComponent - A getter to SvelteData to retrieve any mounted Svelte component as the\n       *                                    dialog content.\n       *\n       * @memberof GetSvelteData#\n       * @readonly\n       */\n      Object.defineProperty(this.svelte, 'dialogComponent', {\n         get: () => this.svelte?.applicationShell?.dialogComponent,\n      });\n   }\n\n   /**\n    * Default options for TJSDialog. Provides a default width and setting `height` to `auto` to always display dialog\n    * content even if it changes. The default `DialogShell` / `svelte` options should not be changed and instead mount\n    * the dialog content component by supplying a Svelte configuration object to dialog data `content` field.\n    *\n    * @returns {import('./types').SvelteApp.Options} Default options\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         classes: ['dialog', 'tjs-dialog'],\n         width: 400,\n         height: 'auto',\n         svelte: {\n            class: DialogShell,\n            intro: true,\n            target: document.body,\n            /**\n             * `this` is the TJSDialog instance when invoked.\n             *\n             * @this {TJSDialog}\n             *\n             * @returns {{data: import('./types').TJSDialogOptions, managedPromise: ManagedPromise}} Props\n             */\n            props: function()\n            {\n               return {\n                  data: this.#data.clone(),\n                  managedPromise: this.#managedPromise\n               };\n            }\n         }\n      });\n   }\n\n   /**\n    * Returns the dialog data.\n    *\n    * @returns {import('./internal/state-dialog/types').TJSDialogData} Dialog data.\n    */\n   get data() { return this.#data; }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/util/async').ManagedPromise} Returns the managed promise.\n    */\n   get managedPromise() { return this.#managedPromise; }\n\n   /**\n    * Close the dialog and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>} A Promise which resolves once the application is closed with the callback value or\n    *                          `true`.\n    */\n   async close(options)\n   {\n      try\n      {\n         // Note: When handling a managed promise if a button selection has already been made the managed promise is\n         // already processing and the resolution below is skipped.\n         if (this.#managedPromise.isActive && !this.#managedPromise.isProcessing)\n         {\n            const result = TJSDialog.#invokeFn(this.#data.onClose, this, null);\n            const rejectClose = typeof this.#data.rejectClose === 'boolean' ? this.#data.rejectClose : false;\n\n            if (rejectClose && result === null)\n            {\n               this.#managedPromise.reject(new Error('TJSDialog was closed without a choice being made.'));\n            }\n            else\n            {\n               this.#managedPromise.resolve(result);\n            }\n         }\n      }\n      catch (err)\n      {\n         const notifyError = typeof this.#data.notifyError === 'boolean' ? this.#data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // If there is a managed Promise reject it or re-throw error.\n         if (!this.#managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         await super.close(options);\n      }\n   }\n\n   /**\n    * Brings to top or renders this dialog returning a Promise that is resolved any button pressed or when the dialog\n    * is closed.\n    *\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.reuse=false] - When true if there is an existing managed Promise this allows multiple\n    *        sources to await on the same result.\n    *\n    * @returns {Promise<T>} A promise for dialog resolution.\n    */\n   async wait(options)\n   {\n      // TODO: Direct usage of Foundry core Application API.\n      if (this.rendered)\n      {\n         this.bringToTop();\n      }\n      else\n      {\n         this.render(true, { focus: true });\n      }\n\n      // Return a managed Promise which is automatically resolved on button press via `DialogContent` component or when\n      // the dialog is closed.\n      return this.#managedPromise.create(options);\n   }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * A helper factory method to create simple confirmation dialog windows which consist of simple yes / no prompts.\n    * If you require more flexibility, a custom TJSDialog instance is preferred. The default focused button is 'yes'.\n    * You can change the default focused button by setting `default` to `yes` or `no`.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions & {\n    *    onYes?: string | ((data?: { application?: TJSDialog }) => any),\n    *    onNo?: string | ((data?: { application?: TJSDialog }) => any)\n    * }} [data] - Confirm dialog options.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onYes] - Callback function upon `yes`; may be\n    *        an async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onNo] - Callback function upon `no`; may be an\n    *        async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {import('./types').SvelteApp.Options}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} A promise which resolves with result of yes / no callbacks or true / false.\n    *\n    * @example\n    * const result = await TJSDialog.confirm({\n    *  title: 'A Yes or No Question',\n    *  content: '<p>Choose wisely.</p>',\n    *  onYes: () => 'YES Result',\n    *  onNo: () => 'NO Result'\n    * });\n    *\n    * // Logs 'YES result', 'NO Result', or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async confirm({ onYes, onNo, ...data } = {}, options = {})\n   {\n      // Allow overwriting of default icon and labels.\n      const mergedButtons = deepMerge({\n         yes: {\n            icon: 'fas fa-check',\n            label: 'Yes'\n         },\n         no: {\n            icon: 'fas fa-times',\n            label: 'No',\n         }\n      }, data.buttons ?? {});\n\n      return this.wait({\n         ...data,\n         buttons: deepMerge(mergedButtons, {\n            yes: {\n               onPress: ({ application }) => this.#invokeFn(onYes, application, true)\n            },\n            no: {\n               onPress: ({ application }) => this.#invokeFn(onNo, application, false)\n            }\n         }),\n         default: data.default ?? 'yes'\n      }, options);\n   }\n\n   /**\n    * A helper method to invoke a callback function directly or lookup an exported function with the same name from any\n    * content Svelte component to invoke. This is used internally to apply default values for `confirm` and `prompt`.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} callback - Callback function to invoke; may be an\n    *        async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {TJSDialog} application - TJSDialog instance passed to callback.\n    *\n    * @param {*} [defaultResult] - An optional default result to return; undefined if not specified.\n    *\n    * @returns {*} Result.\n    *\n    * @internal\n    */\n   static #invokeFn(callback, application, defaultResult = void 0)\n   {\n      let result = defaultResult;\n\n      switch (typeof callback)\n      {\n         case 'function':\n            // Pass the dialog instance to the callback.\n            result = callback({ application });\n            break;\n\n         case 'string':\n         {\n            const dialogComponent = application?.svelte?.dialogComponent;\n\n            // Attempt lookup by function name in dialog instance component.\n            if (dialogComponent !== void 0 && typeof dialogComponent?.[callback] === 'function')\n            {\n               result = dialogComponent?.[callback]({ application });\n            }\n            else\n            {\n               if (dialogComponent === void 0)\n               {\n                  console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no ` +\n                   `associated content Svelte component.`);\n               }\n               else if (typeof dialogComponent?.[callback] !== 'function')\n               {\n                  console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain ` +\n                   `an associated function '${callback}'. Did you remember to add ` +\n                   `'<svelte:options accessors={true} />' and export the function?`);\n               }\n            }\n            break;\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * A helper factory method to display a basic \"prompt\" style TJSDialog with a single button.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions & {\n    *    onOk?: string | ((data?: { application?: TJSDialog }) => any),\n    *    label?: string,\n    *    icon?: string\n    * }} [data] - Prompt dialog options that includes any TJSDialog options along with the following optional fields:\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onOk] - Callback function upon `ok`; may be\n    *        an async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {string}   [data.label] - The OK prompt button text.\n    *\n    * @param {string}   [data.icon=\"fas fa-check\"] - Set another icon besides `fas fa-check` for button.\n    *\n    * @param {import('./types').SvelteApp.Options}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} The returned value from the provided callback function or `true` if the button\n    *          is pressed.\n    *\n    * @example\n    * const result = await TJSDialog.prompt({\n    *  title: 'Are you OK?',\n    *  content: '<p>Are you OK?.</p>',\n    *  label: 'Feeling Fine!',\n    *  onOk: () => 'OK'\n    * });\n    *\n    * // Logs 'OK' or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async prompt({ onOk, label, icon = 'fas fa-check', ...data } = {}, options = {})\n   {\n      return this.wait({\n         ...data,\n         buttons: {\n            ok: {\n               icon,\n               label,\n               onPress: ({ application }) => this.#invokeFn(onOk, application, true)\n            }\n         },\n         default: 'ok'\n      }, options);\n   }\n\n   /**\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: By default `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions}  data - Dialog data passed to the TJSDialog\n    *        constructor.\n    *\n    * @param {import('./types').SvelteApp.Options}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} A Promise that resolves to the chosen result.\n    */\n   static async wait(data, options = {})\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialog.wait error: 'data' is not an object'.`); }\n\n      // Instantiate and render the dialog.\n      return new this({ ...data }, options).wait();\n   }\n}\n\n// Handle `hotReload` Foundry hook when running the Vite dev server.\nif (import.meta.hot) { FoundryHMRSupport.initialize(); }\n\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\nPopoutSupport.initialize();\n\nexport { SvelteApplication, TJSDialog };\n//# sourceMappingURL=index.js.map\n","import { writable } from 'svelte/store';\nimport { isMinimalWritableStore, subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/svelte/store/util';\nimport { CrossWindow } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Registers game settings and creates a backing Svelte store for each setting. The Svelte store will update the\n * Foundry game settings and vice versa when changes occur to the Foundry game settings the updated data is set to the\n * store.\n *\n * Note: It is possible to add multiple `onChange` callbacks on registration.\n *\n * @privateRemarks\n * TODO: A possible future extension is to offer type checking against the setting type by creating a customized\n * writable store that has an overloaded `set` method to provide type checking.\n */\nclass TJSGameSettings\n{\n   /** @type {string} */\n   #namespace;\n\n   /** @type {GameSettingData[]} */\n   #settings = [];\n\n   /**\n    * @type {Map<string, import('svelte/store').Writable>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates the TJSGameSettings instance.\n    *\n    * @param {string}   namespace - The namespace for all settings.\n    */\n   constructor(namespace)\n   {\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\n\n      this.#namespace = namespace;\n   }\n\n   /**\n    * Creates a new writable for the given key.\n    *\n    * @param {*}  initialValue - An initial value to set to new stores.\n    *\n    * @returns {import('svelte/store').Writable} The new writable.\n    */\n   static #createStore(initialValue)\n   {\n      return writable(initialValue);\n   }\n\n   /**\n    * @returns {string} Returns namespace set in constructor.\n    */\n   get namespace()\n   {\n      return this.#namespace;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {string}   [initialValue] - An initial value to set to new stores.\n    *\n    * @returns {import('svelte/store').Writable} The store for the given key.\n    */\n   #getStore(key, initialValue)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSGameSettings.#createStore(initialValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Returns a readable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Readable | undefined} The associated store for the given game setting key.\n    */\n   getReadableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      const store = this.#getStore(key);\n\n      return { subscribe: store.subscribe };\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\n    */\n   getStore(key)\n   {\n      return this.getWritableStore(key);\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\n    */\n   getWritableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      return this.#getStore(key);\n   }\n\n   /**\n    * Registers a setting with TJSGameSettings and Foundry core.\n    *\n    * Note: The specific store subscription handler assigned to the passed in store or store created for the setting\n    * internally is returned from this function. In some cases when setting up custom stores particularly of object\n    * types with several child property stores (`propertyStore`) it is necessary to only update the setting store and\n    * not all subscribers to the custom store as the `propertyStore` instances are also subscribers to the custom store.\n    *\n    * This allows the custom store in the `set` implementation to mainly only trigger the TJSGameSettings subscriber\n    * handler on updates and not all the connected `propertyStore` instances.\n    *\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\n    *\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\n    *\n    * @returns {Function} The specific store subscription handler assigned to the passed in store.\n    */\n   register(setting, coreConfig = true)\n   {\n      if (!isObject(setting))\n      {\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\n      }\n\n      if (!isObject(setting.options))\n      {\n         throw new TypeError(`TJSGameSettings - register: 'setting.options' attribute is not an object.`);\n      }\n\n      if (typeof coreConfig !== 'boolean')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'coreConfig' is not an boolean.`);\n      }\n\n      if (setting.store !== void 0 && !isMinimalWritableStore(setting.store))\n      {\n         throw new TypeError(\n          `TJSGameSettings - register: 'setting.store' attribute is not a minimal writable store.`);\n      }\n\n      const namespace = setting.namespace;\n      const key = setting.key;\n      const folder = setting.folder;\n\n      // The `config` parameter passed to Foundry core.\n      const foundryConfig = coreConfig ? setting.options.config : false;\n\n      if (typeof namespace !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\n      }\n\n      if (typeof key !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\n      }\n\n      if (folder !== void 0 && typeof folder !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'folder' attribute is not a string.`);\n      }\n\n      const store = setting.store;\n\n      /**\n       * @type {GameSettingOptions}\n       */\n      const options = setting.options;\n\n      const onchangeFunctions = [];\n\n      // When true prevents local store subscription from a loop when values are object data.\n      let gateSet = false;\n\n      // Provides an `onChange` callback to update the associated store.\n      onchangeFunctions.push((value) =>\n      {\n         const callbackStore = this.#getStore(key);\n         if (callbackStore && !gateSet)\n         {\n            gateSet = true;\n            callbackStore.set(value);\n            gateSet = false;\n         }\n      });\n\n      // Handle loading any existing `onChange` callbacks.\n      if (isIterable(options?.onChange))\n      {\n         for (const entry of options.onChange)\n         {\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\n         }\n      }\n      else if (typeof options.onChange === 'function')\n      {\n         onchangeFunctions.push(options.onChange);\n      }\n\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\n      const onChange = (value) =>\n      {\n         for (const entry of onchangeFunctions) { entry(value); }\n      };\n\n      globalThis.game.settings.register(namespace, key, { ...options, config: foundryConfig, onChange });\n\n      // Set new store value with existing setting or default value.\n      const targetStore = store ? store : this.#getStore(key, globalThis.game.settings.get(namespace, key));\n\n      // If a store instance is passed into register then initialize it with game settings data.\n      if (store)\n      {\n         this.#stores.set(key, targetStore);\n         store.set(globalThis.game.settings.get(namespace, key));\n      }\n\n      const storeHandler = async (value) =>\n      {\n         if (!gateSet)\n         {\n            gateSet = true;\n            await globalThis.game.settings.set(namespace, key, value);\n         }\n\n         gateSet = false;\n      };\n\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\n      // existing game setting.\n      subscribeIgnoreFirst(targetStore, storeHandler);\n\n      const gameSettingData = {\n         namespace,\n         key,\n         folder,\n         ...options\n      };\n\n      Object.freeze(gameSettingData);\n\n      this.#settings.push(gameSettingData);\n\n      return storeHandler;\n   }\n\n   /**\n    * Registers multiple settings.\n    *\n    * Please refer to the note in {@link TJSGameSettings.register} about the returned object of store subscriber handler\n    * functions.\n    *\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\n    *\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\n    *\n    * @returns { {[key: string]: Function} } An object containing all TJSGameSetting store subscriber handlers for each\n    *          setting `key` added.\n    */\n   registerAll(settings, coreConfig)\n   {\n      /** @type { {[key: string]: Function} } */\n      const storeHandlers = {};\n\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\n\n      for (const entry of settings)\n      {\n         if (!isObject(entry))\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\n         }\n\n         if (typeof entry.namespace !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\n         }\n\n         if (typeof entry.key !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\n         }\n\n         if (!isObject(entry.options))\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\n         }\n\n         storeHandlers[entry.key] = this.register(entry, coreConfig);\n      }\n\n      return storeHandlers;\n   }\n\n   // Iterators ------------------------------------------------------------------------------------------------------\n\n   /**\n    * Returns an iterable for the game setting data; {@link GameSettingData}.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<GameSettingData>} Iterable iterator of GameSettingData.\n    * @yields {GameSettingData}\n    */\n   *data(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#settings.length) { return void 0; }\n\n      if (regex)\n      {\n         for (const setting of this.#settings)\n         {\n            if (regex.test(setting.key)) { yield setting; }\n         }\n      }\n      else\n      {\n         for (const setting of this.#settings) { yield setting; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the game setting keys and stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<[string, import('svelte/store').Writable<T>]>} Iterable iterator of keys and stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *entries(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield [key, this.getStore(key)]; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield [key, this.getStore(key)]; }\n      }\n   }\n\n   /**\n    * Returns an iterable for the game setting keys from existing stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<string>} Iterable iterator of game setting keys.\n    * @yields {string}\n    */\n   *keys(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield key; }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield key; }\n      }\n   }\n\n   /**\n    * @template T\n    *\n    * Returns an iterable for the game setting stores.\n    *\n    * @param {RegExp} [regex] - Optional regular expression to filter by game setting keys.\n    *\n    * @returns {IterableIterator<import('svelte/store').Writable<T>>} Iterable iterator of stores.\n    * @yields {import('svelte/store').Writable<T>}\n    */\n   *stores(regex = void 0)\n   {\n      if (regex !== void 0 && !CrossWindow.isRegExp(regex)) { throw new TypeError(`'regex' is not a RegExp`); }\n\n      if (!this.#stores.size) { return void 0; }\n\n      if (regex)\n      {\n         for (const key of this.#stores.keys())\n         {\n            if (regex.test(key)) { yield this.getStore(key); }\n         }\n      }\n      else\n      {\n         for (const key of this.#stores.keys()) { yield this.getStore(key); }\n      }\n   }\n}\n\n/**\n * @typedef {object} GameSettingOptions\n *\n * @property {object} [choices] If choices are defined, the resulting setting will be a select menu.\n *\n * @property {boolean} [config=true] Specifies that the setting appears in the configuration view.\n *\n * @property {*} [default] A default value for the setting.\n *\n * @property {string} [hint] A description of the registered setting and its behavior.\n *\n * @property {string} [name] The displayed name of the setting.\n *\n * @property {Function|Iterable<Function>} [onChange] An onChange callback function or iterable list of callbacks to\n * directly receive callbacks from Foundry on setting change.\n *\n * @property {{min: number, max: number, step: number}} [range] If range is specified, the resulting setting will be\n * a range slider.\n *\n * @property {boolean} [requiresReload=false] If true then a prompt to reload after changes occurs.\n *\n * @property {('client' | 'world')} [scope='client'] Scope for setting.\n *\n * @property {object|Function} type A constructable object or function.\n */\n\n/**\n * @typedef {object} GameSetting Defines a game setting.\n *\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\n *\n * @property {string} key The setting key to register.\n *\n * @property {string} [folder] The name of the TJSSvgFolder to put this setting in to group them.\n *\n * @property {import('svelte/store').Writable} [store] An existing store instance to use.\n *\n * @property {GameSettingOptions} options Configuration for setting data.\n */\n\n/**\n * @typedef {GameSettingOptions} GameSettingData Stores the primary TJS game setting keys w/ GameSettingOptions.\n *\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\n *\n * @property {string} key The setting key to register.\n *\n * @property {string} [folder] The name of the TJSSvgFolder to put this setting in to group them.\n */\n\n/**\n * Provides an accessible JS object that is updated reactively from all or subset of TJSGameSettings stores.\n * Accessors are provided to directly get / set current setting data. Using a setter will update the setting and backing\n * store.\n *\n * Note: You can create a JSDoc / `@typedef` to apply with `@type` and achieve typing support in IDEs for the\n * customizable live settings instance. Please see the example at the end of this source file on how to accomplish this\n * task.\n *\n * TJSLiveGameSettings is also a readable Svelte store essentially providing a customizable derived store of all\n * settings tracked.\n *\n * Note: When using from JS a second subscriber function argument is the key that was updated.\n * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\n */\nclass TJSLiveGameSettings\n{\n   /**\n    * Stores the current parsed game setting data.\n    *\n    * @type {{}}\n    */\n   #currentData = {};\n\n   /**\n    * Map of all game settings stores and unsubscribe functions currently subscribed.\n    *\n    * @type {Map<string, { unsubscribe: Function, store: import('svelte/store').Writable }>}\n    */\n   #gameSettings = new Map();\n\n   /**\n    * Stores readable subscribers of this instance.\n    *\n    * Note: When using from JS a second argument is the key that was updated.\n    * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\n    *\n    * @type {((value: TJSLiveGameSettings, key?: string) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * Stores the last updated key.\n    *\n    * @type {string}\n    */\n   #lastKey = void 0;\n\n   /**\n    * Creates a live binding against the setting stores. All settings are configured by default, but can also be\n    * filtered by setting key with inclusive / exclusive Sets.\n    *\n    * @param {TJSGameSettings}   gameSettings - A game settings instance to subscribe to...\n    *\n    * @param {object}            [options] - TJSLiveGameSettings options.\n    *\n    * @param {Set<string>}       [options.include] - A Set of setting keys to include from subscribing.\n    *\n    * @param {Set<string>}       [options.exclude] - A Set of setting keys to exclude from subscribing.\n    */\n   constructor(gameSettings, { include, exclude } = {})\n   {\n      if (!(gameSettings instanceof TJSGameSettings))\n      {\n         throw new TypeError(`'gameSettings' is not a TJSGameSettings instance.`);\n      }\n\n      if (include !== void 0 && !CrossWindow.isSet(include)) { throw new TypeError(`'options.include' is not a Set.`); }\n      if (exclude !== void 0 && !CrossWindow.isSet(exclude)) { throw new TypeError(`'options.exclude' is not a Set.`); }\n\n      for (const setting of gameSettings.data())\n      {\n         const key = setting.key;\n\n         // Skip any keys that are in the include set.\n         if (include !== void 0 && !include.has(key)) { continue; }\n\n         // Skip any keys that are in the exclude set.\n         if (exclude !== void 0 && exclude.has(key)) { continue; }\n\n         if (typeof this[key] === 'function' || key === 'lastKey')\n         {\n            console.warn(`TJSLiveGameSettings warning: key (${key}) shadows a function. Skipping key.`);\n         }\n\n         const store = gameSettings.getStore(key);\n\n         // Update this instance storing setting data by key.\n         this.#gameSettings.set(key, {\n            store,\n            unsubscribe: store.subscribe((data) =>\n            {\n               if (this.#currentData !== void 0) { this.#currentData[key] = data; }\n\n               this.#lastKey = key;\n\n               // Notify any child instance that a particular key has updated.\n               this._update(key);\n\n               // Notify any readable store subscribers.\n               this.#updateSubscribers(key);\n            })\n         });\n\n         // Define new accessors for setting key.\n         Object.defineProperty(this, key, {\n            get: () =>\n            {\n               if (this.#currentData === void 0)\n               {\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\n               }\n               else\n               {\n                  return this.#currentData[key];\n               }\n            },\n            set: (data) =>\n            {\n               if (this.#currentData === void 0)\n               {\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\n               }\n               else\n               {\n                  this.#gameSettings.get(key).store.set(data);\n               }\n            }\n         });\n      }\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {string} Last updated setting key.\n    */\n   get lastKey()\n   {\n      return this.#lastKey;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Destroys this instance of TJSLiveGameSettings and unsubscribes from all game setting stores.\n    */\n   destroy()\n   {\n      for (const data of this.#gameSettings)\n      {\n         if (typeof data.unsubscribe === 'function') { data.unsubscribe(); }\n      }\n\n      this.#gameSettings.clear();\n      this.#currentData = void 0;\n   }\n\n   /**\n    * Returns an iterator / generator of all setting entries.\n    *\n    * @returns {IterableIterator<[key: string, value: any]>} An iterator returning setting entries.\n    * @yields {[key: string, value: any]}\n    */\n   *entries()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield [key, this.#currentData[key]];\n      }\n   }\n\n   /**\n    * Returns an iterator / generator of all setting keys.\n    *\n    * @returns {IterableIterator<string>} An iterator returning setting keys.\n    * @yields {string}\n    */\n   *keys()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield key;\n      }\n   }\n\n   /**\n    * Returns a string / JSON stringify of the current setting data.\n    *\n    * @returns {string} Tracked setting data.\n    */\n   toString()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      return JSON.stringify(this.#currentData);\n   }\n\n   /**\n    * Override to respond to setting update.\n    *\n    * @param {string} key - The setting / local key that updated.\n    *\n    * @protected\n    */\n   _update(key) {}   // eslint-disable-line no-unused-vars\n\n   /**\n    * Returns an iterator / generator of all values.\n    *\n    * @returns {IterableIterator<any>} An iterator returning setting values.\n    * @yields {any}\n    */\n   *values()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield this.#currentData[key];\n      }\n   }\n\n   // Readable store implementation ----------------------------------------------------------------------------------\n\n   /**\n    * @param {(value: TJSLiveGameSettings, key?: string) => void} handler - Callback function that is invoked on\n    * update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this, void 0);             // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers.\n    *\n    * @param {string} key - The key that was updated.\n    */\n   #updateSubscribers(key)\n   {\n      const subscriptions = this.#subscriptions;\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this, key); }\n   }\n}\n\nexport { TJSGameSettings, TJSLiveGameSettings };\n//# sourceMappingURL=index.js.map\n","/**\n * Defines the main constants for module name and label.\n *\n * @type {{moduleId: string, moduleLabel: string}}\n */\nconst constants = {\n\tmoduleId: 'hammergen-foundry-sync-svelte',\n\tmoduleLabel: `Hammergen Foundry sync`\n};\n\n/**\n * @type {ESSettingConstants} Defines the Foundry game setting keys.\n */\nconst settings = {\n\n\t//       name: 'My Setting', // can also be an i18n key\n\t//       hint: 'A description of the registered setting and its behavior.', // can also be an i18n key\n\t//       scope: 'world',     // \"world\" = sync to db, \"client\" = local storage\n\t//       config: true,       // false if you dont want it to show in module config\n\t//       type: Object,       // Number, Boolean, String, or even a custom class or DataModel\n\t//       default: { update: false },\n\tmappedCharacters: {\n\t\tname: \"Mapped characters\",\n\t\thint: 'A mapping of character names and IDs',\n\t\tdefault: {},\n\t\tscope: 'world',\n\t\tconfig: true,\n\t},\n\n\tapiKey: {\n\t\tname: \"Hammergen API Key\",\n\t\tdefault: null,\n\t\tscope: 'world',\n\t\tconfig: true,\n\t},\n\n\thammergenAttributeDatabase: {\n\t\tdefault: null,\n\t\tscope: 'client',\n\t\tconfig: false,\n\t},\n\n\tmappingTable: {\n\t\tdefault: null,\n\t\tscope: 'client',\n\t\tconfig: false,\n\t},\n\n\tlastUpdate: {\n\t\tname: \"Last update\",\n\t\tdefault: new Date(0),\n\t\tscope: 'client',\n\t\tconfig: true,\n\t\ttype: Date,\n\t},\n}\n\n/**\n * @type {ESSessionConstants} Defines all the module session storage static constants.\n */\nconst sessionConstants = {\n};\n\n\nexport { constants, sessionConstants, settings };\n","import { TJSGameSettings } from '#runtime/svelte/store/fvtt/settings';\n\nimport { constants } from './constants';\n\n/**\n * Provides a shared instance of TJSGameSettings across all demos. TJSGameSettings creates Svelte stores that are\n * synchronized with Foundry game settings.\n *\n * Demos that use this `gameSettings`:\n * - src/view/svelte/application/app-state/client-setting\n * - src/view/standard-components/side-slide-layer\n *\n * @type {TJSGameSettings}\n */\nexport const gameSettings = new TJSGameSettings(constants.moduleId);","/* @license\nPapa Parse\nv5.5.1\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n((e,t)=>{\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()})(this,function r(){var n=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==n?n:{};var d,s=!n.document&&!!n.postMessage,a=n.IS_PAPA_WORKER||!1,o={},h=0,v={};function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(t,e){var i=parseInt(this._config.skipFirstNLines)||0;if(this.isFirstChunk&&0<i){let e=this._config.newline;e||(r=this._config.quoteChar||'\"',e=this._handle.guessLineEndings(t,r)),t=[...t.split(e).slice(i)].join(e)}this.isFirstChunk&&P(this._config.beforeFirstChunk)&&void 0!==(r=this._config.beforeFirstChunk(t))&&(t=r),this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+t,r=(this._partialLine=\"\",this._handle.parse(i,this._baseIndex,!this._finished));if(!this._handle.paused()&&!this._handle.aborted()){t=r.meta.cursor,i=(this._finished||(this._partialLine=i.substring(t-this._baseIndex),this._baseIndex=t),r&&r.data&&(this._rowCount+=r.data.length),this._finished||this._config.preview&&this._rowCount>=this._config.preview);if(a)n.postMessage({results:r,workerId:v.WORKER_ID,finished:i});else if(P(this._config.chunk)&&!e){if(this._config.chunk(r,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);this._completeResults=r=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(r.data),this._completeResults.errors=this._completeResults.errors.concat(r.errors),this._completeResults.meta=r.meta),this._completed||!i||!P(this._config.complete)||r&&r.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),i||r&&r.meta.paused||this._nextChunk(),r}this._halted=!0},this._sendError=function(e){P(this._config.error)?this._config.error(e):a&&this._config.error&&n.postMessage({workerId:v.WORKER_ID,error:e,finished:!1})}}function f(e){var r;(e=e||{}).chunkSize||(e.chunkSize=v.RemoteChunkSize),u.call(this,e),this._nextChunk=s?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),s||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!s),this._config.downloadRequestHeaders){var e,t=this._config.downloadRequestHeaders;for(e in t)r.setRequestHeader(e,t[e])}var i;this._config.chunkSize&&(i=this._start+this._config.chunkSize-1,r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i));try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}s&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize||r.responseText.length,this._finished=!this._config.chunkSize||this._start>=(e=>null!==(e=e.getResponseHeader(\"Content-Range\"))?parseInt(e.substring(e.lastIndexOf(\"/\")+1)):-1)(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){e=r.statusText||e;this._sendError(new Error(e))}}function l(e){(e=e||{}).chunkSize||(e.chunkSize=v.LocalChunkSize),u.call(this,e);var i,r,n=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,r=e.slice||e.webkitSlice||e.mozSlice,n?((i=new FileReader).onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input,t=(this._config.chunkSize&&(t=Math.min(this._start+this._config.chunkSize,this._input.size),e=r.call(e,this._start,t)),i.readAsText(e,this._config.encoding));n||this._chunkLoaded({target:{result:t}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function c(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){var e,t;if(!this._finished)return e=this._config.chunkSize,i=e?(t=i.substring(0,e),i.substring(e)):(t=i,\"\"),this._finished=!i,this.parseChunk(t)}}function p(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var n,s,a,t,o=Math.pow(2,53),h=-o,u=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/,d=/^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/,i=this,r=0,f=0,l=!1,e=!1,c=[],p={data:[],errors:[],meta:{}};function y(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(p&&a&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+v.DefaultDelimiter+\"'\"),a=!1),m.skipEmptyLines&&(p.data=p.data.filter(function(e){return!y(e)})),_()){if(p)if(Array.isArray(p.data[0])){for(var e=0;_()&&e<p.data.length;e++)p.data[e].forEach(t);p.data.splice(0,1)}else p.data.forEach(t);function t(e,t){P(m.transformHeader)&&(e=m.transformHeader(e,t)),c.push(e)}}function i(e,t){for(var i=m.header?{}:[],r=0;r<e.length;r++){var n=r,s=e[r],s=((e,t)=>(e=>(m.dynamicTypingFunction&&void 0===m.dynamicTyping[e]&&(m.dynamicTyping[e]=m.dynamicTypingFunction(e)),!0===(m.dynamicTyping[e]||m.dynamicTyping)))(e)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&((e=>{if(u.test(e)){e=parseFloat(e);if(h<e&&e<o)return 1}})(t)?parseFloat(t):d.test(t)?new Date(t):\"\"===t?null:t):t)(n=m.header?r>=c.length?\"__parsed_extra\":c[r]:n,s=m.transform?m.transform(s,n):s);\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return m.header&&(r>c.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+c.length+\" fields but parsed \"+r,f+t):r<c.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+c.length+\" fields but parsed \"+r,f+t)),i}var r;p&&(m.header||m.dynamicTyping||m.transform)&&(r=1,!p.data.length||Array.isArray(p.data[0])?(p.data=p.data.map(i),r=p.data.length):p.data=i(p.data,0),m.header&&p.meta&&(p.meta.fields=c),f+=r)}function _(){return m.header&&0===c.length}function k(e,t,i,r){e={type:e,code:t,message:i};void 0!==r&&(e.row=r),p.errors.push(e)}P(m.step)&&(t=m.step,m.step=function(e){p=e,_()?g():(g(),0!==p.data.length&&(r+=e.data.length,m.preview&&r>m.preview?s.abort():(p.data=p.data[0],t(p,i))))}),this.parse=function(e,t,i){var r=m.quoteChar||'\"',r=(m.newline||(m.newline=this.guessLineEndings(e,r)),a=!1,m.delimiter?P(m.delimiter)&&(m.delimiter=m.delimiter(e),p.meta.delimiter=m.delimiter):((r=((e,t,i,r,n)=>{var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",v.RECORD_SEP,v.UNIT_SEP];for(var u=0;u<n.length;u++){for(var d,f=n[u],l=0,c=0,p=0,g=(o=void 0,new E({comments:r,delimiter:f,newline:t,preview:10}).parse(e)),_=0;_<g.data.length;_++)i&&y(g.data[_])?p++:(d=g.data[_].length,c+=d,void 0===o?o=d:0<d&&(l+=Math.abs(d-o),o=d));0<g.data.length&&(c/=g.data.length-p),(void 0===a||l<=a)&&(void 0===h||h<c)&&1.99<c&&(a=l,s=f,h=c)}return{successful:!!(m.delimiter=s),bestDelimiter:s}})(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess)).successful?m.delimiter=r.bestDelimiter:(a=!0,m.delimiter=v.DefaultDelimiter),p.meta.delimiter=m.delimiter),w(m));return m.preview&&m.header&&r.preview++,n=e,s=new E(r),p=s.parse(n,t,i),g(),l?{meta:{paused:!0}}:p||{meta:{paused:!1}}},this.paused=function(){return l},this.pause=function(){l=!0,s.abort(),n=P(m.chunk)?\"\":n.substring(s.getCharIndex())},this.resume=function(){i.streamer._halted?(l=!1,i.streamer.parseChunk(n,!0)):setTimeout(i.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,s.abort(),p.meta.aborted=!0,P(m.complete)&&m.complete(p),n=\"\"},this.guessLineEndings=function(e,t){e=e.substring(0,1048576);var t=new RegExp(M(t)+\"([^]*?)\"+M(t),\"gm\"),i=(e=e.replace(t,\"\")).split(\"\\r\"),t=e.split(\"\\n\"),e=1<t.length&&t[0].length<i[0].length;if(1===i.length||e)return\"\\n\";for(var r=0,n=0;n<i.length;n++)\"\\n\"===i[n][0]&&r++;return r>=i.length/2?\"\\r\\n\":\"\\r\"}}function M(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(C){var S=(C=C||{}).delimiter,O=C.newline,x=C.comments,I=C.step,A=C.preview,T=C.fastMode,D=null,L=null==C.quoteChar?'\"':C.quoteChar,F=L;if(void 0!==C.escapeChar&&(F=C.escapeChar),(\"string\"!=typeof S||-1<v.BAD_DELIMITERS.indexOf(S))&&(S=\",\"),x===S)throw new Error(\"Comment character same as delimiter\");!0===x?x=\"#\":(\"string\"!=typeof x||-1<v.BAD_DELIMITERS.indexOf(x))&&(x=!1),\"\\n\"!==O&&\"\\r\"!==O&&\"\\r\\n\"!==O&&(O=\"\\n\");var j=0,z=!1;this.parse=function(i,t,r){if(\"string\"!=typeof i)throw new Error(\"Input must be a string\");var n=i.length,e=S.length,s=O.length,a=x.length,o=P(I),h=[],u=[],d=[],f=j=0;if(!i)return b();if(T||!1!==T&&-1===i.indexOf(L)){for(var l=i.split(O),c=0;c<l.length;c++){if(d=l[c],j+=d.length,c!==l.length-1)j+=O.length;else if(r)return b();if(!x||d.substring(0,a)!==x){if(o){if(h=[],k(d.split(S)),R(),z)return b()}else k(d.split(S));if(A&&A<=c)return h=h.slice(0,A),b(!0)}}return b()}for(var p=i.indexOf(S,j),g=i.indexOf(O,j),_=new RegExp(M(F)+M(L),\"g\"),m=i.indexOf(L,j);;)if(i[j]===L)for(m=j,j++;;){if(-1===(m=i.indexOf(L,m+1)))return r||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:j}),E();if(m===n-1)return E(i.substring(j,m).replace(_,L));if(L===F&&i[m+1]===F)m++;else if(L===F||0===m||i[m-1]!==F){-1!==p&&p<m+1&&(p=i.indexOf(S,m+1));var y=v(-1===(g=-1!==g&&g<m+1?i.indexOf(O,m+1):g)?p:Math.min(p,g));if(i.substr(m+1+y,e)===S){d.push(i.substring(j,m).replace(_,L)),i[j=m+1+y+e]!==L&&(m=i.indexOf(L,j)),p=i.indexOf(S,j),g=i.indexOf(O,j);break}y=v(g);if(i.substring(m+1+y,m+1+y+s)===O){if(d.push(i.substring(j,m).replace(_,L)),w(m+1+y+s),p=i.indexOf(S,j),m=i.indexOf(L,j),o&&(R(),z))return b();if(A&&h.length>=A)return b(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:j}),m++}}else if(x&&0===d.length&&i.substring(j,j+a)===x){if(-1===g)return b();j=g+s,g=i.indexOf(O,j),p=i.indexOf(S,j)}else if(-1!==p&&(p<g||-1===g))d.push(i.substring(j,p)),j=p+e,p=i.indexOf(S,j);else{if(-1===g)break;if(d.push(i.substring(j,g)),w(g+s),o&&(R(),z))return b();if(A&&h.length>=A)return b(!0)}return E();function k(e){h.push(e),f=j}function v(e){var t=0;return t=-1!==e&&(e=i.substring(m+1,e))&&\"\"===e.trim()?e.length:t}function E(e){return r||(void 0===e&&(e=i.substring(j)),d.push(e),j=n,k(d),o&&R()),b()}function w(e){j=e,k(d),d=[],g=i.indexOf(O,j)}function b(e){if(C.header&&!t&&h.length){var s=h[0],a={},o=new Set(s);let n=!1;for(let r=0;r<s.length;r++){let i=s[r];if(a[i=P(C.transformHeader)?C.transformHeader(i,r):i]){let e,t=a[i];for(;e=i+\"_\"+t,t++,o.has(e););o.add(e),s[r]=e,a[i]++,n=!0,(D=null===D?{}:D)[e]=i}else a[i]=1,s[r]=i;o.add(i)}n&&console.warn(\"Duplicate headers found and renamed.\")}return{data:h,errors:u,meta:{delimiter:S,linebreak:O,aborted:z,truncated:!!e,cursor:f+(t||0),renamedHeaders:D}}}function R(){I(b()),h=[],u=[]}},this.abort=function(){z=!0},this.getCharIndex=function(){return j}}function g(e){var t=e.data,i=o[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,_(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:m,resume:m};if(P(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else P(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&_(t.workerId,t.results)}function _(e,t){var i=o[e];P(i.userComplete)&&i.userComplete(t),i.terminate(),delete o[e]}function m(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t,i=Array.isArray(e)?[]:{};for(t in e)i[t]=w(e[t]);return i}function y(e,t){return function(){e.apply(t,arguments)}}function P(e){return\"function\"==typeof e}return v.parse=function(e,t){var i=(t=t||{}).dynamicTyping||!1;P(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!P(t.transform)&&t.transform,!t.worker||!v.WORKERS_SUPPORTED)return i=null,v.NODE_STREAM_INPUT,\"string\"==typeof e?(e=(e=>65279!==e.charCodeAt(0)?e:e.slice(1))(e),i=new(t.download?f:c)(t)):!0===e.readable&&P(e.read)&&P(e.on)?i=new p(t):(n.File&&e instanceof File||e instanceof Object)&&(i=new l(t)),i.stream(e);(i=(()=>{var e;return!!v.WORKERS_SUPPORTED&&(e=(()=>{var e=n.URL||n.webkitURL||null,t=r.toString();return v.BLOB_URL||(v.BLOB_URL=e.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \",\"(\",t,\")();\"],{type:\"text/javascript\"})))})(),(e=new n.Worker(e)).onmessage=g,e.id=h++,o[e.id]=e)})()).userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=P(t.step),t.chunk=P(t.chunk),t.complete=P(t.complete),t.error=P(t.error),delete t.worker,i.postMessage({input:e,config:t,workerId:i.id})},v.unparse=function(e,t){var n=!1,_=!0,m=\",\",y=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null,o=!1,h=((()=>{if(\"object\"==typeof t){if(\"string\"!=typeof t.delimiter||v.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter),\"boolean\"!=typeof t.quotes&&\"function\"!=typeof t.quotes&&!Array.isArray(t.quotes)||(n=t.quotes),\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines),\"string\"==typeof t.newline&&(y=t.newline),\"string\"==typeof t.quoteChar&&(s=t.quoteChar),\"boolean\"==typeof t.header&&(_=t.header),Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s),t.escapeFormulae instanceof RegExp?o=t.escapeFormulae:\"boolean\"==typeof t.escapeFormulae&&t.escapeFormulae&&(o=/^[=+\\-@\\t\\r].*$/)}})(),new RegExp(M(s),\"g\"));\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||Object.keys(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||r),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:\"object\"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function u(e,t,i){var r=\"\",n=(\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t)),Array.isArray(e)&&0<e.length),s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=k(e[a],a);0<t.length&&(r+=y)}for(var o=0;o<t.length;o++){var h=(n?e:t[o]).length,u=!1,d=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var f=[],l=0;l<h;l++){var c=s?e[l]:l;f.push(t[o][c])}u=\"\"===f.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!d&&(r+=m);var g=n&&s?e[p]:p;r+=k(t[o][g],p)}o<t.length-1&&(!i||0<h&&!d)&&(r+=y)}}return r}function k(e,t){var i,r;return null==e?\"\":e.constructor===Date?JSON.stringify(e).slice(1,25):(r=!1,o&&\"string\"==typeof e&&o.test(e)&&(e=\"'\"+e,r=!0),i=e.toString().replace(h,a),(r=r||!0===n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||((e,t)=>{for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1})(i,v.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1))?s+i+s:i)}},v.RECORD_SEP=String.fromCharCode(30),v.UNIT_SEP=String.fromCharCode(31),v.BYTE_ORDER_MARK=\"\\ufeff\",v.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',v.BYTE_ORDER_MARK],v.WORKERS_SUPPORTED=!s&&!!n.Worker,v.NODE_STREAM_INPUT=1,v.LocalChunkSize=10485760,v.RemoteChunkSize=5242880,v.DefaultDelimiter=\",\",v.Parser=E,v.ParserHandle=i,v.NetworkStreamer=f,v.FileStreamer=l,v.StringStreamer=c,v.ReadableStreamStreamer=p,n.jQuery&&((d=n.jQuery).fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&n.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0===h.length)P(o.complete)&&o.complete();else{var e,t,i,r,n=h[0];if(P(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(P(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){P(a)&&a(e,n.file,n.inputElem),u()},v.parse(n.file,n.instanceConfig)}}function u(){h.splice(0,1),e()}}),a&&(n.onmessage=function(e){e=e.data;void 0===v.WORKER_ID&&e&&(v.WORKER_ID=e.workerId);\"string\"==typeof e.input?n.postMessage({workerId:v.WORKER_ID,results:v.parse(e.input,e.config),finished:!0}):(n.File&&e.input instanceof File||e.input instanceof Object)&&(e=v.parse(e.input,e.config))&&n.postMessage({workerId:v.WORKER_ID,results:e,finished:!0})}),(f.prototype=Object.create(u.prototype)).constructor=f,(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(c.prototype)).constructor=c,(p.prototype=Object.create(u.prototype)).constructor=p,v});","\nimport { get } from \"svelte/store\";\nimport { gameSettings } from \"./gameSettings.js\";\n\nconst base = \"https://hammergen-production-waxikk2naa-ew.a.run.app/api/wh/\"\n// const base = \"http://127.0.0.1:8082/api/wh/\"\nconst cache = {}\n\n\nexport async function loginToHammergen(username, password) {\n\tconsole.log(\"Starting\", \"loginToHammergen\")\n\n\tconst formData = new FormData();\n\tformData.append('username', username);\n\tformData.append('password', password);\n\n\ttry {\n\t\tconst { accessToken } = await fetch(\"https://hammergen-production-waxikk2naa-ew.a.run.app/api/token\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: formData\n\t\t}).then(r => r.json())\n\t\tif (!accessToken) throw \"404\"\n\t\tconst apiKey = gameSettings.getStore(\"apiKey\")\n\t\tapiKey.set(accessToken)\n\t\treturn true\n\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn false\n\n\t}\n\n\n}\n\nasync function hammergenApiWrapper(path) {\n\tconsole.log(\"Starting\", \"hammergenApiWrapper\", base + path)\n\n\tconst apiKey = get(gameSettings.getStore(\"apiKey\"));\n\tlet options = {}\n\tif (apiKey) {\n\t\toptions = { headers: { Authorization: 'Bearer ' + apiKey } }\n\t}\n\n\tconst response = await fetch(base + path, options).then(r => r.json())\n\tconsole.log(response)\n\tif (Array.isArray(response.data)) {\n\t\treturn response.data.map(item => ({ id: item.id, ...item.object }))\n\t} else {\n\t\treturn response.data.object\n\t}\n}\n\n\n\nexport async function getCharacters() {\n\tconsole.log(\"Starting\", \"getCharacters\")\n\n\n\ttry {\n\t\t// let res = await fetch(base + 'character').then(r => r.json())\n\t\t// let characters = res.data.map(item => item.object)\n\t\treturn hammergenApiWrapper('character')\n\t\t// return characters\n\t} catch (error) {\n\t\treturn []\n\t}\n}\n\n\nexport async function getCharacter(hammergenCharacterId) {\n\tconsole.log(\"Starting\", \"getCharacter\")\n\tlet r = await hammergenApiWrapper('character/' + hammergenCharacterId + \"?full=true\")\n\tconsole.log(r)\n\treturn r\n}\n\n// import mappingTableLocal from \"./mappingTableLocal.csv\"\n\n// import { csvParse } from \"d3-dsv\";\nimport Papa from 'papaparse';\n\nexport async function getMappingTable() {\n\n\n\t// console.log({ parsed })\n\n\tconsole.log(\"Starting\", \"getMappingTable\")\n\n\n\tlet res = await fetch('https://docs.google.com/spreadsheets/d/e/2PACX-1vS8ygCgKBLilt6C_JTROnL3mPDtkq0a9ZOQ345fhLRD-X8__RUk3GxtU3lJz0Zo19TCLyNrzkZtQzDp/pub?gid=1882191290&single=true&output=csv')\n\n\t\t.then(response => {\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Network response was not ok');\n\t\t\t}\n\t\t\treturn response.text();\n\t\t})\n\n\tconst parsed = Papa.parse(res, { header: true }).data\n\n\n\treturn parsed\n\n}\t","import { get } from \"svelte/store\";\nimport { gameSettings } from \"./gameSettings.js\";\n\nlet foundryTypeMap = {\n\ttrapping: \"item\",\n\tammunition: \"item\",\n\tcontainer: \"item\",\n\tweapon: \"item\",\n\tarmour: \"item\",\n}\n\n\nconst careerMapper = hammergenCareer => { }\n\nlet findType = (foundryType) => {\n\treturn foundryTypeMap[foundryType] || foundryType\n}\n\n\nexport async function hammergenCharacterToFoundryActor(hammergenChar, foundryActor) {\n\n\tconsole.log(\"starting hammergenCharacterToFoundryActor\", \"copying from\", hammergenChar, \"to\", foundryActor)\n\n\n\t// these are the fields we should attempt to extract from\n\tconst hammergenCharItemFields = [\n\t\t\"carriedItems\",\n\t\t\"equippedItems\",\n\t\t\"mutations\",\n\t\t\"prayers\",\n\t\t\"skills\",\n\t\t\"spells\",\n\t\t\"storedItems\",\n\t\t\"talents\",\n\t\t\"traits\",\n\t]\n\n\n\n\n\tlet uiFeedback = []\n\n\n\tconst mappingTable = get(gameSettings.getStore(\"mappingTable\"));\n\tconsole.log(\"mapping table\", mappingTable)\n\n\tif (!mappingTable) {\n\t\tuiFeedback.push(\"Error: Could not find local mapping table.\")\n\t\treturn uiFeedback\n\t}\n\n\n\tconsole.log(\"starting map\")\n\n\n\n\tconsole.group(\"inital preperation\")\n\n\tconsole.log(\"removing old items\", foundryActor.items)\n\tif (foundryActor.items) {\n\n\t\tawait foundryActor.deleteEmbeddedDocuments(\"Item\", foundryActor.items.filter(n => n.type != \"container\").map(n => n.id))\n\t\ttry {\n\t\t\tawait foundryActor.deleteEmbeddedDocuments(\"Item\", foundryActor.items.filter(n => n.type == \"container\").map(n => n.id))\n\t\t} catch (error) {\n\t\t\tif (foundryActor.items.filter(n => n.type == \"container\".length > 0)) {\n\t\t\t\tuiFeedback.push(`Error: Due to Foundry version compatibility issues, bags cannot be deleted automatically with WFRP4e. Sadly, you must update to version 12 and the latest WFRP version to fix this.`)\n\t\t\t}\n\t\t}\n\n\t}\n\tconsole.groupEnd(\"inital preperation\")\n\n\n\n\tconsole.group(\"mapping\")\n\n\n\tlet characteristicUpdates = {}\n\n\n\tconsole.group(\"base characteristics\")\n\t// base characteristics\n\tfor (const [k, v] of Object.entries(hammergenChar.baseAttributes)) {\n\t\tconsole.log(\"updating\", k)\n\t\tcharacteristicUpdates[\"data.characteristics.\" + k.toLocaleLowerCase() + \".initial\"] = v\n\t}\n\tconsole.groupEnd(\"base characteristics\")\n\n\tconsole.group(\"characteristic advances\")\n\t// characteristic advances\n\tfor (const [k, v] of Object.entries(hammergenChar.attributeAdvances)) {\n\t\tconsole.log(\"updating\", k)\n\t\tcharacteristicUpdates[\"data.characteristics.\" + k.toLocaleLowerCase() + \".advances\"] = v\n\t}\n\tconsole.groupEnd(\"characteristic advances\")\n\n\n\n\n\n\tconsole.group(\"mapping itemlikes\")\n\n\n\n\n\tfor (const field of hammergenCharItemFields) {\n\n\t\tconsole.group(field)\n\n\n\t\tlet items = []\n\t\tlet quantities = []\n\t\tconsole.log(hammergenChar[field])\n\t\tfor (const i of hammergenChar[field]) {\n\n\t\t\t// we need to include this wacky stuff as hammergen arranges its objects in different ways (cant find a good pattern)\n\t\t\t// this is mostly due to prayers being special\n\t\t\tlet number = i.number\n\t\t\tlet id = i?.wh?.id || i.id\n\t\t\tlet name = i?.wh?.object.name || i?.object.name\n\n\n\t\t\tconst mappedFoundryItem = mappingTable.find(item => item.HammergenId == id)\n\n\t\t\tif (!mappedFoundryItem) {\n\t\t\t\tuiFeedback.push(`Not Added: Could not find \"${name}\" with ID ${id} in mapping table.`)\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tlet {\n\t\t\t\tFoundryId,\n\t\t\t\tHammergenId,\n\t\t\t\tNote, Name\n\t\t\t} = mappedFoundryItem\n\n\t\t\tconst foundryItem = game.items.find(item => item.id == FoundryId)\n\n\t\t\tif (!foundryItem) {\n\t\t\t\tuiFeedback.push(`Not Added: Could not find \"${name}\" with ID ${id} in foundry (mapping table may be out of date).`)\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tconsole.log(\"Adding\", Name, FoundryId)\n\n\n\t\t\tif (Note != \"\") {\n\t\t\t\tuiFeedback.push(`Added: \"${Name}\" Note: ${Note}`)\n\t\t\t}\n\n\t\t\titems.push(foundryItem)\n\t\t\tquantities.push(number)\n\n\t\t}\n\n\t\ttry {\n\t\t\tconsole.group(\"bulk adding itemlikes\")\n\t\t\tconsole.log(\"adding\", items.length, \"items\")\n\t\t\tconst addedItems = await foundryActor.createEmbeddedDocuments(\"Item\", items);\n\t\t\taddedItems.forEach((item, i) => {\n\t\t\t\t// different items need to have their quantity increased in different ways\n\t\t\t\tif (getProperty(item, \"system.advances\")) item.update({ \"system.advances\": { force: true, value: quantities[i] } })\n\t\t\t\tif (getProperty(item, \"system.quantity.value\")) item.update({ \"system.quantity.value\": quantities[i] })\n\t\t\t})\n\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t}\n\t\tconsole.groupEnd(\"bulk adding itemlikes\")\n\n\n\t\tconsole.groupEnd(field)\n\t}\n\n\n\t// adding money\n\n\n\n\n\tconsole.groupEnd(\"mapping itemlikes\")\n\tconsole.groupEnd(\"mapping\")\n\n\n\n\n\tconsole.group(\"updating characteristics\")\n\tfoundryActor.update(characteristicUpdates);\n\tconsole.groupEnd(\"updating characteristics\")\n\n\n\n\t// other \"special\" fields that need consideration\n\t// hammergenChar, foundryActor\n\tconsole.log(\"careerPath\")\n\t// the archetecture of the chareer system in hammergen is such that the SECOND career level is the naming career, and that the other careers are nested under that.\n\t// while accurate to the books, this is pretty hard for a mapping tool maker to unpick\n\thammergenChar.career.current = true\n\n\tfor (const { current, number, wh: { id, object: { name } } } of [...hammergenChar.careerPath, hammergenChar.career,]) {\n\t\tconsole.log(number, id, name, current)\n\t\tconst mappedFoundryItem = mappingTable.find(item => item.HammergenId == id)\n\t\tif (!mappedFoundryItem) {\n\t\t\t// could not find this career\n\t\t\tuiFeedback.push(`Not Added: Career ${name} level ${number} could not be found in Foundry`)\n\t\t\tcontinue;\n\t\t}\n\t\tlet {\n\t\t\tFoundryId,\n\t\t\tHammergenId,\n\t\t\tNote, Name\n\t\t} = mappedFoundryItem\n\n\t\tconst foundryItem = game.items.find(item => item.id == FoundryId)\n\n\t\tconst relatedCareers = game.items.filter(n => n.type == \"career\").filter(n => n.careergroup.value == foundryItem.careergroup.value)\n\t\tconst mappedCareer = relatedCareers.find(n => n.system.level.value == number)\n\t\tif (!mappedCareer) {\n\t\t\tuiFeedback.push(`Not Added: Career ${name} level ${number} could not be found in Foundry`)\n\t\t}\n\n\t\tconsole.log(foundryItem, mappedCareer.name)\n\t\tconst [item] = await foundryActor.createEmbeddedDocuments(\"Item\", [mappedCareer]);\n\t\tconsole.log(item, getProperty(item, \"current.value\"))\n\t\tif (current) {\n\t\t\t// current\n\t\t\tconsole.log(\"setting as current career\", item.name)\n\t\t\tawait item.update({ \"system.current.value\": true })\n\t\t\t// await item.update({ \"current\": { value: true } })\n\t\t}\n\t\telse {\n\t\t\t// complete\n\t\t\tconsole.log(\"setting as complete career\", item.name)\n\t\t\tawait item.update({ \"system.complete\": { value: true } })\n\n\t\t}\n\t\t// game.items.filter(item => item.)\n\n\t}\n\tconsole.log(foundryActor)\n\n\n\tconsole.log(\"name\")\n\tawait foundryActor.update({ \"name\": hammergenChar.name })\n\n\n\tconst formatText = text => text.replaceAll(\"\\n\", \"<br/>\")\n\n\tconsole.log(\"notes\", hammergenChar.notes)\n\tawait foundryActor.update({ \"system.details.gmnotes.value\": `<p>${formatText(hammergenChar.notes)}</p>` })\n\tconsole.log(\"description\", hammergenChar.description)\n\tawait foundryActor.update({ \"system.details.biography.value\": `<p>${formatText(hammergenChar.description)}</p>` })\n\tconsole.log(\"fate\", hammergenChar.fate)\n\tawait foundryActor.update({ \"system.status.fate.value\": hammergenChar.fate })\n\tconsole.log(\"fortune\", hammergenChar.fortune)\n\tawait foundryActor.update({ \"system.status.fortune.value\": hammergenChar.fortune })\n\tconsole.log(\"resilience\", hammergenChar.resilience)\n\tawait foundryActor.update({ \"system.status.resilience.value\": hammergenChar.resilience })\n\tconsole.log(\"resolve\", hammergenChar.resolve)\n\tawait foundryActor.update({ \"system.status.resolve.value\": hammergenChar.resolve })\n\tconsole.log(\"sin\", hammergenChar.sin)\n\tawait foundryActor.update({ \"system.status.sin.value\": hammergenChar.sin })\n\tconsole.log(\"corruption\", hammergenChar.corruption)\n\tawait foundryActor.update({ \"system.status.corruption.value\": hammergenChar.corruption })\n\tconsole.log(\"spentExp\", \"currentExp\")\n\tawait foundryActor.update({\n\t\t\"system.details.experience\": {\n\t\t\tspent: hammergenChar.spentExp,\n\t\t\ttotal: hammergenChar.currentExp + hammergenChar.spentExp,\n\t\t\tforce: true\n\t\t}\n\t})\n\t// console.log(\"species\")\n\t// console.log(\"standing\")\n\t// console.log(\"money\")\n\t// console.log(\"brass\")\n\t// console.log(\"silver\")\n\t// console.log(\"gold\")\n\n\n\tuiFeedback.push(`Character ${hammergenChar.name} updated successfully`)\n\treturn uiFeedback\n\n\n\t// ####### updating foundry #######\n\t//    let path = \"data.characteristics.ag.initial\";\n\t//    let strength = getProperty(targetActor.data, path); // Safely fetches the value\n\n\t//    targetActor.update(\"data.characteristics.vs.value\", 1); // safely updates value\n\n\t//    let actor = game.actors.get(targetActor.id); // Replace with actual actor ID\n\t//    targetActor.update({ [path]: 10 });\n\n}\n\n\n// \"fel\": {\n// \t\"type\": \"Number\",\n// \t\"label\": \"CHAR.Fel\",\n// \t\"abrev\": \"CHARAbbrev.Fel\",\n// \t\"initial\": 30,\n// \t\"modifier\": 0,\n// \t\"advances\": 0,\n// \t\"bonusMod\": 0,\n// \t\"calculationBonusModifier\": 0,\n// \t\"value\": 30,\n// \t\"bonus\": 3,\n// \t\"cost\": 25,\n// \t\"key\": \"fel\"\n// }\n\n\n\n\n\n// fragment: get all careers or soemthing\n\n// let actor = ui.activeWindow?.actor\n// let trappings = [];\n// let docs = [];\n// let packs = game.wfrp4e.tags.getPacksWithTag(\"career\");\n// for (let p of packs) {\n//      let careers = (await p.getDocuments()).filter(x=>x.type == 'career');\n//      docs = docs.concat(careers);\n// }\n\n// if (actor) {\n//      let careers = actor.itemTypes['career'];\n//      for (let c of careers) { \n//           trappings = trappings.concat(game.wfrp4e.config.classTrappings[c.class.value].split(',').map(x=>x.trim()))\n//           trappings = trappings.concat(c.trappings.map(x=>x.trim()))\n//           if (c.level.value != 1) {\n//                let prevCareers =  docs.filter(x=>x.careergroup?.value == c.careergroup.value && x.level?.value < c.level.value);\n//                for (let pc of prevCareers) {\n//                     trappings = trappings.concat(pc.trappings.map(x=>x.trim()))\n//                }\n//           }\n//      }\n//      trappings = [...new Set(trappings )];\n//      for (let t of trappings) {\n//           let item = await game.wfrp4e.utility.findItem(t);\n//           if (item) {\n//                await actor.createEmbeddedDocuments(\"Item\", [item.toObject()])\n//           }\n//      }\n// }\n\n// get current talents\n// console.log(updateObject, foundryActor.itemCategories.talent)\n\n\n\n// something that removed or replaces talents:\n\n// const replacementTable = {\n// \t'Shieldsman': \"KILJx6FozXCWz6Ug\",\n// \t'Feint': \"xepSUhs8LXSMMXbf\",\n// \t'Reversal': \"Q2ALWttunlH8VBcU\",\n// \t'Beat Blade': \"33DNKYXoitrQmewx\"\n// };\n\n// const items = [];\n// const deletes = [];\n\n// for (const [talent, newTalentId] of Object.entries(replacementTable)) {\n// \tconst existingTalents = actor.items.filter(t => t.name === talent);\n// \tif (!existingTalents) continue;\n\n// \tconst item = await fromUuid(`Compendium.khaine-houserules.khaine-talents.${newTalentId}`);\n// \tif (!item) {\n// \t\tconsole.log(\"talent-replacement failed, compendium item not found\", { actor, oldTalentName: talent, compendiumId: newTalentId });\n// \t\tcontinue;\n// \t}\n\n// \tconst data = item.toObject();\n// \tdata.system.advances.value = existingTalents[0].system.Advances;\n\n// \tconsole.log(\"talent-replacement\", { actor, oldTalentName: talent, newTalentName: item.name, data });\n\n// \tdeletes.push(...existingTalents.map(t => t._id));\n// \titems.push(data);\n// }\n\n// await actor.createEmbeddedDocuments(\"Item\", items);\n// await actor.deleteEmbeddedDocuments(\"Item\", deletes);","<script>\n   export let actor;\n\n   let path = [];\n   let f = actor.folder;\n   while (f) {\n      path.push(f);\n      f = f.folder;\n   }\n\n   console.log(path);\n</script>\n\n<div class=\"wrap\">\n   {#each path as folder, i}\n   {#if i > 0}/{/if}\n      <div style={\"background-color:\" + folder.color}>\n         {folder.name}\n      </div>\n   {/each}\n</div>\n\n<style>\n   .wrap {\n      display: inline-flex;\n   }\n</style>\n","<script>\n   import { getCharacters, getCharacter, getMappingTable, loginToHammergen } from \"./hammergen-api.ts\";\n   import { hammergenCharacterToFoundryActor } from \"./valueMapper.js\";\n   import { gameSettings } from \"./gameSettings.js\";\n\n   import FolderPath from \"./FolderPath.svelte\";\n   //    console.log(gameSettings.getStore(settings.appStateClient), 123);\n   //   console.log(gameSettings.getStore(\"somekey\"), 123);\n\n   const apiKey = gameSettings.getStore(\"apiKey\");\n   const mappedCharacters = gameSettings.getStore(\"mappedCharacters\");\n   const mappingTable = gameSettings.getStore(\"mappingTable\");\n   const lastUpdate = gameSettings.getStore(\"lastUpdate\");\n\n   // remove blank entries to prevent bloat (premature optimisation)\n   mappedCharacters.subscribe((change) => {\n      for (const [k, v] of Object.entries(change)) {\n         if (!v) {\n            delete change[k];\n            $mappedCharacters = change;\n         }\n      }\n   });\n\n   let updateMappingTableLoading = \"\";\n   async function updateMappingTable() {\n      updateMappingTableLoading = \"Loading...\";\n      try {\n         $mappingTable = await getMappingTable();\n         updateMappingTableLoading = `Success (${$mappingTable.length} entries loaded)`;\n         $lastUpdate = new Date();\n         setTimeout(() => (updateMappingTableLoading = \"\"), 3000);\n      } catch (error) {\n         updateMappingTableLoading = `Error: {${error}}`;\n      }\n   }\n\n   let foundryActors = [];\n   let hammergenCharacters = [];\n\n   let refreshCharacterListLoading = \"\";\n   async function refreshCharacterList() {\n      refreshCharacterListLoading = \"Loading...\";\n      try {\n         foundryActors = [...game.actors];\n         hammergenCharacters = await getCharacters();\n         refreshCharacterListLoading = `Success`;\n         $lastUpdate = new Date();\n         setTimeout(() => (refreshCharacterListLoading = \"\"), 3000);\n      } catch (error) {\n         refreshCharacterListLoading = `Error: {${error}}`;\n      }\n   }\n\n   let uiFeedback = [];\n   async function downloadCharacter(hammergenId, foundryId) {\n      clearUiFeedback();\n      // get hammergen character\n      uiFeedback.push(`Loading Character from Hammergen`);\n      const hammergenCharacter = await getCharacter(hammergenId);\n      console.log({ hammergenCharacter });\n      // get foundry character\n      uiFeedback.push(`Loading Actor from Foundry`);\n      const foundryActor = await game.actors.get(foundryId);\n      // load and run\n      // console.log(\"characters found\", hammergenCharacter, foundryActor);\n      uiFeedback.push(`Starting import system...`);\n      uiFeedback = uiFeedback;\n      try {\n         let out = await hammergenCharacterToFoundryActor(hammergenCharacter, foundryActor);\n         uiFeedback = [...uiFeedback, ...out];\n      } catch (error) {\n         console.error(error);\n         uiFeedback.push(`Error: Failed. Import system encountered an error: ${error}`);\n      }\n      // display uifeedback\n      uiFeedback = uiFeedback;\n      refreshCharacterList();\n   }\n   async function uploadCharacter(hammergenId, foundryId) {\n      //\n   }\n\n   function clearUiFeedback() {\n      uiFeedback = [];\n   }\n\n   refreshCharacterList();\n\n   let openLoginModal = false;\n   let username = \"\";\n   let password = \"\";\n\n   let startLoginLoading = \"\";\n\n   async function startLogin() {\n      startLoginLoading = \"Logging in...\";\n      let result = await loginToHammergen(username, password);\n      if (result) {\n         startLoginLoading = \"Login successful\";\n         openLoginModal = false;\n         let username = \"\";\n         let password = \"\";\n         setTimeout(() => (startLoginLoading = \"\"), 3000);\n         return;\n      }\n      startLoginLoading = \"Login failed, please check username/password\";\n      setTimeout(() => (startLoginLoading = \"\"), 3000);\n   }\n</script>\n\n<div>\n   {#if openLoginModal}\n      <div class=\"flex padding\">\n         <label for=\"\"\n            >Email\n            <input type=\"email\" bind:value={username} />\n         </label>\n         <label for=\"\">\n            Password\n            <input type=\"password\" bind:value={password} />\n         </label>\n         <button on:click={startLogin}>Login</button>\n      </div>\n   {/if}\n   <div class=\"flex\">\n      <!-- <button on:click={() => ($mappingTable = [])}>clear</button> -->\n      <button on:click={updateMappingTable}>\n         {#if $mappingTable.length < 1}\n            ⚠️\n         {:else}{/if}\n         Update Mapping Table\n\n         {#if updateMappingTableLoading}\n            <div>\n               {updateMappingTableLoading}\n            </div>\n         {/if}</button\n      >\n      <button on:click={refreshCharacterList}\n         >Refresh Character List {#if refreshCharacterListLoading}\n            <div>\n               {refreshCharacterListLoading}\n            </div>\n         {/if}</button\n      >\n      {#if !$apiKey}\n         {#if !openLoginModal}\n            <button on:click={() => (openLoginModal = true)}>Open Login Modal</button>\n         {:else}\n            <button on:click={() => (openLoginModal = false)}\n               >Close Login Modal <div>{startLoginLoading}</div></button\n            >\n         {/if}\n      {:else}\n         <button on:click={() => ($apiKey = null)}\n            >Logout <div>{startLoginLoading}</div></button\n         >\n      {/if}\n   </div>\n   <div>\n      <div>Foundry:</div>\n      <table>\n         <thead>\n            <th>Foundry Path</th>\n            <th>Foundry Actor ({foundryActors.length})</th>\n            <th>Hammergen Character ({hammergenCharacters.length})</th>\n            <th>Operations</th>\n         </thead>\n\n         <tbody>\n            {#each foundryActors as actor}\n               <tr>\n                  <td>\n                     <FolderPath {actor} />\n                  </td>\n                  <td>\n                     <select disabled>\n                        <option>{actor.name}</option>\n                     </select>\n                  </td>\n                  <td>\n                     <select\n                        bind:value={$mappedCharacters[actor.id]}\n                        on:change={() => {\n                           console.log($mappedCharacters);\n                        }}\n                     >\n                        <option value={undefined}>None</option>\n                        {#each hammergenCharacters as actor}\n                           <option value={actor.id}>\n                              {actor.name}\n                           </option>\n                        {/each}\n                     </select>\n                  </td>\n                  <td>\n                     {#if $mappedCharacters[actor.id]}\n                        <div class=\"flex\">\n                           <!-- <button title=\"Upload\">Upload</button> -->\n                           <button\n                              title=\"Download\"\n                              on:click={() => downloadCharacter($mappedCharacters[actor.id], actor.id)}>Download</button\n                           >\n                        </div>\n                     {/if}\n                  </td>\n               </tr>\n            {/each}\n         </tbody>\n      </table>\n      {#if uiFeedback.length > 0}\n         <h3>Operation outcome</h3>\n         <ol>\n            {#each uiFeedback as feedback}\n               <li>\n                  {feedback}\n               </li>\n            {/each}\n         </ol>\n      {/if}\n   </div>\n</div>\n\n<style>\n   select,\n   input {\n      background-color: #d1d1d1;\n   }\n   .flex {\n      display: flex;\n   }\n</style>\n","<!-- This is necessary for Svelte to generate accessors TRL can access for `elementRoot` -->\n<svelte:options accessors={true} />\n\n<script>\n   import { ApplicationShell } from \"#runtime/svelte/component/application\";\n   import Main from \"./Main.svelte\";\n\n   export let elementRoot;\n</script>\n\n<!-- ApplicationShell provides the popOut / application shell frame, header bar, content areas -->\n<!-- ApplicationShell exports `elementRoot` which is the outer application shell element -->\n<ApplicationShell bind:elementRoot>\n   <main>\n      <Main></Main>\n   </main>\n</ApplicationShell>\n\n<style lang=\"scss\">\n    div {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n\n      padding-top: 0.5rem;\n      margin-top: 0.1rem;\n      border-top: 1px solid rgba(0, 0, 0, 0.75);\n   }\n\n   section {\n      --tjs-folder-contents-margin: 0;\n      --tjs-folder-contents-padding: 0;\n      --tjs-folder-details-margin-left: 0;\n      --tjs-folder-details-padding-left: 0;\n      --tjs-folder-summary-margin: 0;\n      --tjs-folder-summary-font-size: 1.05rem;\n      --tjs-folder-summary-width: 100%;\n\n      color: #f0f0e0;\n      background: rgba(255, 255, 255, 0.15);\n      border-radius: 0.25rem;\n      padding: 0.25rem;\n\n      button:focus-visible {\n         outline: 4px dotted orange;\n      }\n   }\n</style>\n","import { SvelteApplication } from '#runtime/svelte/application';\n\nimport BasicAppShell from './BasicAppShell.svelte';\nimport {\n   constants,\n   settings\n} from './constants';\n\nimport { gameSettings } from './gameSettings';\n\n\nexport default class BasicApplication extends SvelteApplication {\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n\n   constructor(options) {\n      super(options);\n\n      /**\n       * Register a world game setting w/ TJSGameSettings. This makes a client setting / localstorage store available\n       * to serialize the app state.\n       */\n      // console.log({ settings })\n      for (const [key, value] of Object.entries(settings)) {\n         console.log(\"creating store for\", key, \"with\", value)\n         gameSettings.register({\n            namespace: constants.moduleId,\n            key: key,\n            options: {\n               ...value\n            }\n         });\n\n\n\n      }\n\n\n   }\n\n\n\n   static get defaultOptions() {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         title: 'TemplateESM.title',  // Automatically localized from `lang/en.json`.\n         width: 800,\n         height: 'auto',\n         resizable: true,\n         svelte: {\n            class: BasicAppShell,\n            target: document.body,\n         }\n      });\n   }\n}","import BasicApplication from './view/BasicApplication.js';\n// here we have the hook to start our app at startup\n// if you dont do this then it wont appear in settings\nHooks.once('ready', () => new BasicApplication().render(false, { focus: false }));\n\n\n// here we will insert a button into settings\n// this is done at render point\n// we insert the button as raw HTML then lock onto it with an event from html for its selector\nHooks.on('renderSettings', (playerList, html) => {\n\n\tconst target = html.find(`#settings-game`)\n\n\t// insert a button at the end of this element\n\ttarget.append(\n\t\t`<button data-action=\"hammergen-sync\">\n            Hammergen Sync\n        </button>`\n\t);\n\n\tconst button = html.find(`[data-action=\"hammergen-sync\"]`)\n\n\thtml.on('click', '[data-action=\"hammergen-sync\"]', (event) =>\n\t\tnew BasicApplication().render(true, { focus: true })\n\t)\n\n});\n\n"],"names":["now","element","text","hash","detach","linear","update","instance","create_fragment","subscribe","run","get","writable","children","result","active","document","duration","ease","options","ctx","create_if_block","draggable","booleanStore","dragDefault","storeResizing","promise","settings","this","e","i","r","n","m","s","a","o","h","u","d","f","l","c","p","y","g","_","t","E","v","w","item"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47]}